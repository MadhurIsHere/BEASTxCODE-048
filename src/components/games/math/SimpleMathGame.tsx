import React, { useState } from 'react';
import { motion } from 'motion/react';
import { ArrowLeft, Play, Star } from 'lucide-react';
import { Button } from '../../ui/button';
import { Card, CardContent } from '../../ui/card';
import type { Language } from '../../../types/onboarding';

interface SimpleMathGameProps {
  language: Language;
  onBack: () => void;
  onComplete?: (score: number, xpEarned: number) => void;
}

export function SimpleMathGame({ language, onBack, onComplete }: SimpleMathGameProps) {
  const [phase, setPhase] = useState<'intro' | 'compare' | 'result' | 'complete'>('intro');
  const [score, setScore] = useState(0);
  const [currentQuestion, setCurrentQuestion] = useState({ 
    num1: Math.floor(Math.random() * 9) + 1, 
    num2: Math.floor(Math.random() * 9) + 1 
  });

  const startGame = () => setPhase('compare');
  
  const selectAnswer = (isGreater: boolean) => {
    const correct = currentQuestion.num1 > currentQuestion.num2 ? isGreater : !isGreater;
    if (correct) {
      setScore(100);
      setPhase('result');
    } else {
      setPhase('result');
    }
    
    setTimeout(() => {
      setPhase('complete');
    }, 2000);
  };

  const finish = () => {
    onComplete?.(score, 50);
  };

  // Intro Screen
  if (phase === 'intro') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-purple-900 to-pink-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-purple-900/80 border-purple-400/30">
          <CardContent className="p-6 text-center">
            <div className="text-6xl mb-4">üî¢</div>
            <h1 className="text-xl font-bold text-white mb-3">
              {language === 'en' ? 'Math Game' : language === 'hi' ? '‡§ó‡§£‡§ø‡§§ ‡§ñ‡•á‡§≤' : '‡¨ó‡¨£‡¨ø‡¨§ ‡¨ñ‡≠á‡¨≥'}
            </h1>
            <p className="text-purple-200 mb-4 text-sm">
              {language === 'en' ? 'Which number is bigger? Compare and choose!' : 
               language === 'hi' ? '‡§ï‡•å‡§® ‡§∏‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¨‡§°‡§º‡•Ä ‡§π‡•à? ‡§§‡•Å‡§≤‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç!' : 
               '‡¨ï‡≠á‡¨â‡¨Å ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨¨‡¨°‡¨º? ‡¨§‡≠Å‡¨≥‡¨®‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å!'}
            </p>
            <div className="bg-purple-800/50 rounded-lg p-3 mb-4">
              <h3 className="text-yellow-300 font-bold text-sm mb-2">
                {language === 'en' ? 'üî¢ Number Skills' : language === 'hi' ? 'üî¢ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ï‡•å‡§∂‡§≤' : 'üî¢ ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨¶‡¨ï‡≠ç‡¨∑‡¨§‡¨æ'}
              </h3>
              <p className="text-purple-100 text-xs leading-relaxed">
                {language === 'en' ? 'Comparing numbers helps build math foundation for all grades!' : 
                 language === 'hi' ? '‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§§‡•Å‡§≤‡§®‡§æ ‡§∏‡§≠‡•Ä ‡§ï‡§ï‡•ç‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡§£‡§ø‡§§ ‡§ï‡•Ä ‡§®‡•Ä‡§Ç‡§µ ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à!' : 
                 '‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨§‡≠Å‡¨≥‡¨®‡¨æ ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨∂‡≠ç‡¨∞‡≠á‡¨£‡≠Ä ‡¨™‡¨æ‡¨á‡¨Å ‡¨ó‡¨£‡¨ø‡¨§ ‡¨≠‡¨ø‡¨§‡≠ç‡¨§‡¨ø ‡¨®‡¨ø‡¨∞‡≠ç‡¨Æ‡¨æ‡¨£‡¨∞‡≠á ‡¨∏‡¨æ‡¨π‡¨æ‡¨Ø‡≠ç‡≠ü ‡¨ï‡¨∞‡≠á!'}
              </p>
            </div>
            <Button onClick={startGame} className="w-full bg-purple-500 hover:bg-purple-600 mb-3">
              <Play className="w-4 h-4 mr-2" />
              {language === 'en' ? 'Start!' : language === 'hi' ? '‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç!' : '‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!'}
            </Button>
            <Button onClick={onBack} variant="outline" className="w-full text-purple-200 border-purple-400">
              <ArrowLeft className="w-4 h-4 mr-2" />
              {language === 'en' ? 'Back' : language === 'hi' ? '‡§µ‡§æ‡§™‡§∏' : '‡¨™‡¨õ‡¨ï‡≠Å'}
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Compare Phase
  if (phase === 'compare') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-purple-900 to-pink-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-purple-900/80 border-purple-400/30">
          <CardContent className="p-6 text-center">
            <h2 className="text-lg font-bold text-white mb-6">
              {language === 'en' ? 'Which is Bigger?' : language === 'hi' ? '‡§ï‡•å‡§® ‡§∏‡§æ ‡§¨‡§°‡§º‡§æ ‡§π‡•à?' : '‡¨ï‡≠á‡¨â‡¨Å‡¨ü‡¨ø ‡¨¨‡¨°‡¨º?'}
            </h2>
            
            <div className="flex justify-center items-center gap-6 mb-8">
              <div className="text-center">
                <div className="text-6xl font-bold text-purple-300 mb-2">{currentQuestion.num1}</div>
              </div>
              
              <div className="text-2xl text-white">vs</div>
              
              <div className="text-center">
                <div className="text-6xl font-bold text-pink-300 mb-2">{currentQuestion.num2}</div>
              </div>
            </div>

            <div className="space-y-3">
              <Button 
                onClick={() => selectAnswer(true)} 
                className="w-full bg-purple-500 hover:bg-purple-600 text-lg py-3"
              >
                {currentQuestion.num1} {language === 'en' ? 'is bigger' : language === 'hi' ? '‡§¨‡§°‡§º‡§æ ‡§π‡•à' : '‡¨¨‡¨°‡¨º'}
              </Button>
              
              <Button 
                onClick={() => selectAnswer(false)} 
                className="w-full bg-pink-500 hover:bg-pink-600 text-lg py-3"
              >
                {currentQuestion.num2} {language === 'en' ? 'is bigger' : language === 'hi' ? '‡§¨‡§°‡§º‡§æ ‡§π‡•à' : '‡¨¨‡¨°‡¨º'}
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Result Phase
  if (phase === 'result') {
    const isCorrect = score > 0;
    return (
      <div className="min-h-screen bg-gradient-to-b from-purple-900 to-pink-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-purple-900/80 border-purple-400/30">
          <CardContent className="p-6 text-center">
            <div className="text-6xl mb-4">
              {isCorrect ? 'üéâ' : 'üòÖ'}
            </div>
            
            <h2 className="text-xl font-bold text-white mb-4">
              {isCorrect 
                ? (language === 'en' ? 'Correct!' : language === 'hi' ? '‡§∏‡§π‡•Ä!' : '‡¨†‡¨ø‡¨ï!') 
                : (language === 'en' ? 'Try Again!' : language === 'hi' ? '‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç!' : '‡¨™‡≠Å‡¨£‡¨ø ‡¨ö‡≠á‡¨∑‡≠ç‡¨ü‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!')
              }
            </h2>
            
            <p className="text-purple-200 text-sm">
              {currentQuestion.num1 > currentQuestion.num2 
                ? `${currentQuestion.num1} ${language === 'en' ? 'is bigger than' : language === 'hi' ? '‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§π‡•à' : '‡¨†‡¨æ‡¨∞‡≠Å ‡¨¨‡¨°‡¨º'} ${currentQuestion.num2}` 
                : `${currentQuestion.num2} ${language === 'en' ? 'is bigger than' : language === 'hi' ? '‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§π‡•à' : '‡¨†‡¨æ‡¨∞‡≠Å ‡¨¨‡¨°‡¨º'} ${currentQuestion.num1}`
              }
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Complete Phase
  if (phase === 'complete') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-purple-900 to-pink-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-purple-900/80 border-purple-400/30">
          <CardContent className="p-6 text-center">
            <div className="text-6xl mb-4">üèÜ</div>
            
            <h2 className="text-xl font-bold text-white mb-4">
              {language === 'en' ? 'Math Champion!' : language === 'hi' ? '‡§ó‡§£‡§ø‡§§ ‡§ö‡•à‡§Ç‡§™‡§ø‡§Ø‡§®!' : '‡¨ó‡¨£‡¨ø‡¨§ ‡¨ö‡¨æ‡¨Æ‡≠ç‡¨™‡¨ø‡¨Ö‡¨®!'}
            </h2>
            
            <div className="bg-yellow-400/20 rounded-lg p-3 mb-6">
              <div className="flex items-center justify-center gap-2">
                <Star className="w-5 h-5 text-yellow-400" />
                <span className="text-yellow-400 font-bold">{score} Points</span>
              </div>
            </div>
            
            <Button onClick={finish} className="w-full bg-purple-500 hover:bg-purple-600">
              {language === 'en' ? 'Continue' : language === 'hi' ? '‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç' : '‡¨ú‡¨æ‡¨∞‡¨ø ‡¨∞‡¨ñ‡¨®‡≠ç‡¨§‡≠Å'}
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return null;
}