import React, { useState } from 'react';
import { motion } from 'motion/react';
import { ArrowLeft, Play, Star, CheckCircle, Eye, Search } from 'lucide-react';
import { Button } from '../../ui/button';
import { Card, CardContent } from '../../ui/card';
import type { Language } from '../../../types/onboarding';

interface BiologyLabGameProps {
  language: Language;
  onBack: () => void;
  onComplete?: (score: number, xpEarned: number) => void;
}

export function BiologyLabGame({ language, onBack, onComplete }: BiologyLabGameProps) {
  const [phase, setPhase] = useState<'intro' | 'explore' | 'find' | 'complete'>('intro');
  const [foundParts, setFoundParts] = useState<string[]>([]);
  const [score, setScore] = useState(0);

  const cellParts = [
    { 
      id: 'nucleus', 
      emoji: 'üîµ', 
      name: { en: 'Nucleus', hi: '‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞‡§ï', or: '‡¨®‡≠ç‡≠ü‡≠Å‡¨ï‡≠ç‡¨≤‡¨ø‡¨Ö‡¨∏' },
      function: { 
        en: 'Controls the cell and contains DNA', 
        hi: '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§ï‡•ã ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ DNA ‡§π‡•ã‡§§‡§æ ‡§π‡•à', 
        or: '‡¨ï‡≠ã‡¨∑‡¨ï‡≠Å ‡¨®‡¨ø‡≠ü‡¨®‡≠ç‡¨§‡≠ç‡¨∞‡¨£ ‡¨ï‡¨∞‡≠á ‡¨è‡¨¨‡¨Ç DNA ‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡≠á' 
      }
    },
    { 
      id: 'membrane', 
      emoji: 'üü°', 
      name: { en: 'Cell Membrane', hi: '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§ù‡§ø‡§≤‡•ç‡§≤‡•Ä', or: '‡¨ï‡≠ã‡¨∑ ‡¨ù‡¨ø‡¨≤‡≠ç‡¨≤‡¨ø' },
      function: { 
        en: 'Protects the cell and controls what goes in/out', 
        hi: '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§ï‡•Ä ‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‡§î‡§∞ ‡§Ö‡§Ç‡§¶‡§∞-‡§¨‡§æ‡§π‡§∞ ‡§ú‡§æ‡§®‡•á ‡§ï‡•ã ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à', 
        or: '‡¨ï‡≠ã‡¨∑‡¨ï‡≠Å ‡¨∞‡¨ï‡≠ç‡¨∑‡¨æ ‡¨ï‡¨∞‡≠á ‡¨è‡¨¨‡¨Ç ‡¨≠‡¨ø‡¨§‡¨∞-‡¨¨‡¨æ‡¨π‡¨æ‡¨∞ ‡¨Ø‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨®‡¨ø‡≠ü‡¨®‡≠ç‡¨§‡≠ç‡¨∞‡¨£ ‡¨ï‡¨∞‡≠á' 
      }
    }
  ];

  const startExploring = () => setPhase('explore');
  
  const startFinding = () => setPhase('find');

  const findPart = (partId: string) => {
    if (!foundParts.includes(partId)) {
      setFoundParts([...foundParts, partId]);
      setScore(score + 50);
      
      if (foundParts.length + 1 >= cellParts.length) {
        setTimeout(() => setPhase('complete'), 1000);
      }
    }
  };

  const finish = () => {
    onComplete?.(score, 50);
  };

  // Intro Screen
  if (phase === 'intro') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-green-900 to-teal-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-green-900/80 border-green-400/30">
          <CardContent className="p-6 text-center">
            <div className="text-6xl mb-4">üî¨</div>
            <h1 className="text-xl font-bold text-white mb-3">
              {language === 'en' ? 'Biology Lab' : language === 'hi' ? '‡§ú‡•Ä‡§µ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≤‡§æ' : '‡¨ú‡≠Ä‡¨¨ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨≤‡¨æ‡¨¨'}
            </h1>
            <p className="text-green-200 mb-4 text-sm">
              {language === 'en' ? 'Use our virtual microscope to explore a plant cell!' : 
               language === 'hi' ? '‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§ï‡§æ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•ç‡§ï‡•ã‡§™ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç!' : 
               '‡¨â‡¨¶‡≠ç‡¨≠‡¨ø‡¨¶ ‡¨ï‡≠ã‡¨∑ ‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨Ü‡¨Æ‡¨∞ ‡¨≠‡¨∞‡≠ç‡¨ö‡≠Å‡¨Ü‡¨≤ ‡¨Æ‡¨æ‡¨á‡¨ï‡≠ç‡¨∞‡≠ã‡¨∏‡≠ç‡¨ï‡≠ã‡¨™ ‡¨¨‡≠ç‡≠ü‡¨¨‡¨π‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!'}
            </p>
            
            {/* Educational Info Panel */}
            <div className="bg-green-800/50 rounded-lg p-3 mb-4">
              <h3 className="text-yellow-300 font-bold text-sm mb-2 flex items-center justify-center gap-2">
                <Eye className="w-4 h-4" />
                {language === 'en' ? 'About Cells' : language === 'hi' ? '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç' : '‡¨ï‡≠ã‡¨∑ ‡¨¨‡¨ø‡¨∑‡≠ü‡¨∞‡≠á'}
              </h3>
              <p className="text-green-100 text-xs leading-relaxed">
                {language === 'en' ? 'Cells are the basic building blocks of all living things. Each part has a special job!' : 
                 language === 'hi' ? '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ‡§è‡§Ç ‡§∏‡§≠‡•Ä ‡§ú‡•Ä‡§µ‡§ø‡§§ ‡§ö‡•Ä‡§ú‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡•Ç‡§≤ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ñ‡§Ç‡§° ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§≠‡§æ‡§ó ‡§ï‡§æ ‡§è‡§ï ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ï‡§æ‡§Æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à!' : 
                 '‡¨ï‡≠ã‡¨∑‡¨Æ‡¨æ‡¨®‡≠á ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨ú‡≠Ä‡¨¨‡¨ø‡¨§ ‡¨¨‡¨∏‡≠ç‡¨§‡≠Å‡¨∞ ‡¨Æ‡≠Ç‡¨≥ ‡¨®‡¨ø‡¨∞‡≠ç‡¨Æ‡¨æ‡¨£ ‡¨¨‡≠ç‡¨≤‡¨ï‡•§ ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨Ö‡¨Ç‡¨∂‡¨∞ ‡¨è‡¨ï ‡¨¨‡¨ø‡¨∂‡≠á‡¨∑ ‡¨ï‡¨æ‡¨Æ ‡¨Ö‡¨õ‡¨ø!'}
              </p>
            </div>

            <Button onClick={startExploring} className="w-full bg-green-500 hover:bg-green-600 mb-3">
              <Play className="w-4 h-4 mr-2" />
              {language === 'en' ? 'Start Exploring!' : language === 'hi' ? '‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç!' : '‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£ ‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!'}
            </Button>
            <Button onClick={onBack} variant="outline" className="w-full text-green-200 border-green-400">
              <ArrowLeft className="w-4 h-4 mr-2" />
              {language === 'en' ? 'Back' : language === 'hi' ? '‡§µ‡§æ‡§™‡§∏' : '‡¨™‡¨õ‡¨ï‡≠Å'}
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Explore Phase
  if (phase === 'explore') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-green-900 to-teal-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-green-900/80 border-green-400/30">
          <CardContent className="p-6 text-center">
            <h2 className="text-lg font-bold text-white mb-4">
              {language === 'en' ? 'Virtual Microscope' : language === 'hi' ? '‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•ç‡§ï‡•ã‡§™' : '‡¨≠‡¨∞‡≠ç‡¨ö‡≠Å‡¨Ü‡¨≤ ‡¨Æ‡¨æ‡¨á‡¨ï‡≠ç‡¨∞‡≠ã‡¨∏‡≠ç‡¨ï‡≠ã‡¨™'}
            </h2>
            
            {/* Microscope View */}
            <div className="relative bg-black rounded-full w-48 h-48 mx-auto mb-6 flex items-center justify-center border-4 border-green-300">
              <motion.div
                animate={{ 
                  scale: [1, 1.1, 1],
                  rotate: [0, 2, -2, 0]
                }}
                transition={{ duration: 2, repeat: Infinity }}
                className="text-6xl"
              >
                üü¢
              </motion.div>
              <motion.div
                animate={{ 
                  x: [0, 20, -20, 0],
                  y: [0, 10, -10, 0]
                }}
                transition={{ duration: 3, repeat: Infinity }}
                className="absolute top-8 left-8 text-2xl"
              >
                üîµ
              </motion.div>
              <motion.div
                animate={{ 
                  x: [0, -15, 15, 0],
                  y: [0, -15, 15, 0]
                }}
                transition={{ duration: 2.5, repeat: Infinity }}
                className="absolute bottom-8 right-8 text-2xl"
              >
                üü°
              </motion.div>
            </div>

            <p className="text-green-200 mb-6 text-sm">
              {language === 'en' ? 'Look! This is a plant cell magnified 400x. Can you identify the parts?' : 
               language === 'hi' ? '‡§¶‡•á‡§ñ‡§ø‡§è! ‡§Ø‡§π 400x ‡§¨‡§¢‡§º‡§æ‡§à ‡§ó‡§à ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§π‡•à‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§≠‡§æ‡§ó‡•ã‡§Ç ‡§ï‡•ã ‡§™‡§π‡§ö‡§æ‡§® ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?' : 
               '‡¨¶‡≠á‡¨ñ‡¨®‡≠ç‡¨§‡≠Å! ‡¨è‡¨π‡¨æ 400x ‡¨¨‡¨°‡¨º ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨•‡¨ø‡¨¨‡¨æ ‡¨â‡¨¶‡≠ç‡¨≠‡¨ø‡¨¶ ‡¨ï‡≠ã‡¨∑‡•§ ‡¨Ü‡¨™‡¨£ ‡¨Ö‡¨Ç‡¨∂‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ü ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á ‡¨ï‡¨ø?'}
            </p>

            <Button onClick={startFinding} className="w-full bg-teal-500 hover:bg-teal-600 text-lg py-3">
              <Search className="w-4 h-4 mr-2" />
              {language === 'en' ? 'Find Cell Parts!' : language === 'hi' ? '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§≠‡§æ‡§ó ‡§ñ‡•ã‡§ú‡•á‡§Ç!' : '‡¨ï‡≠ã‡¨∑ ‡¨Ö‡¨Ç‡¨∂ ‡¨ñ‡≠ã‡¨ú‡¨®‡≠ç‡¨§‡≠Å!'}
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Find Phase
  if (phase === 'find') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-green-900 to-teal-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-green-900/80 border-green-400/30">
          <CardContent className="p-6 text-center">
            <h2 className="text-lg font-bold text-white mb-4">
              {language === 'en' ? 'Identify Cell Parts' : language === 'hi' ? '‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§≠‡§æ‡§ó‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç' : '‡¨ï‡≠ã‡¨∑ ‡¨Ö‡¨Ç‡¨∂ ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ü ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'}
            </h2>
            
            <p className="text-green-200 mb-4 text-sm">
              {language === 'en' ? 'Tap each part to learn about it!' : 
               language === 'hi' ? '‡§á‡§∏‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§≠‡§æ‡§ó ‡§™‡§∞ ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç!' : 
               '‡¨è‡¨π‡¨æ ‡¨¨‡¨ø‡¨∑‡≠ü‡¨∞‡≠á ‡¨ú‡¨æ‡¨£‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨Ö‡¨Ç‡¨∂‡¨∞‡≠á ‡¨ü‡≠ç‡≠ü‡¨æ‡¨™ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!'}
            </p>

            <div className="space-y-3 mb-6">
              {cellParts.map((part) => {
                const isFound = foundParts.includes(part.id);
                return (
                  <motion.button
                    key={part.id}
                    onClick={() => findPart(part.id)}
                    className={`w-full p-4 rounded-lg border-2 transition-all duration-300 ${
                      isFound 
                        ? 'bg-green-500/50 border-green-300 cursor-default' 
                        : 'bg-green-800/50 border-green-400 hover:bg-green-700/50 hover:scale-105'
                    }`}
                    whileTap={{ scale: 0.95 }}
                    disabled={isFound}
                  >
                    <div className="flex items-center gap-3">
                      <span className="text-2xl">{part.emoji}</span>
                      <div className="text-left flex-1">
                        <p className="text-white font-bold text-sm">{part.name[language]}</p>
                        {isFound && (
                          <motion.p
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            className="text-green-200 text-xs mt-1"
                          >
                            {part.function[language]}
                          </motion.p>
                        )}
                      </div>
                      {isFound && (
                        <CheckCircle className="w-5 h-5 text-green-300" />
                      )}
                    </div>
                  </motion.button>
                );
              })}
            </div>

            <div className="text-green-200 text-sm">
              {language === 'en' ? `Found: ${foundParts.length}/${cellParts.length} parts` : 
               language === 'hi' ? `‡§Æ‡§ø‡§≤‡•á: ${foundParts.length}/${cellParts.length} ‡§≠‡§æ‡§ó` : 
               `‡¨Æ‡¨ø‡¨≥‡¨ø‡¨≤‡¨æ: ${foundParts.length}/${cellParts.length} ‡¨Ö‡¨Ç‡¨∂`}
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Complete Phase
  if (phase === 'complete') {
    return (
      <div className="min-h-screen bg-gradient-to-b from-green-900 to-teal-900 p-4 flex items-center justify-center">
        <Card className="w-full max-w-sm bg-green-900/80 border-green-400/30">
          <CardContent className="p-6 text-center">
            <div className="text-6xl mb-4">üèÜ</div>
            
            <h2 className="text-xl font-bold text-white mb-4">
              {language === 'en' ? 'Biology Expert!' : language === 'hi' ? '‡§ú‡•Ä‡§µ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û!' : '‡¨ú‡≠Ä‡¨¨ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨¨‡¨ø‡¨∂‡≠á‡¨∑‡¨ú‡≠ç‡¨û!'}
            </h2>
            
            <div className="bg-yellow-400/20 rounded-lg p-3 mb-4">
              <div className="flex items-center justify-center gap-2">
                <Star className="w-5 h-5 text-yellow-400" />
                <span className="text-yellow-400 font-bold">{score} Points</span>
              </div>
              <p className="text-yellow-200 text-xs mt-2">
                {language === 'en' ? 'You successfully identified all cell parts!' : 
                 language === 'hi' ? '‡§Ü‡§™‡§®‡•á ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§∏‡§≠‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§ï‡§æ ‡§≠‡§æ‡§ó‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•Ä!' : 
                 '‡¨Ü‡¨™‡¨£ ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨ï‡≠ã‡¨∑ ‡¨Ö‡¨Ç‡¨∂ ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ü ‡¨ï‡¨∞‡¨ø‡¨õ‡¨®‡≠ç‡¨§‡¨ø!'}
              </p>
            </div>

            {/* Knowledge Summary */}
            <div className="bg-green-800/50 rounded-lg p-3 mb-4">
              <h3 className="text-green-200 font-bold text-sm mb-2">
                {language === 'en' ? 'üß† What You Learned:' : language === 'hi' ? 'üß† ‡§Ü‡§™‡§®‡•á ‡§ï‡•ç‡§Ø‡§æ ‡§∏‡•Ä‡§ñ‡§æ:' : 'üß† ‡¨Ü‡¨™‡¨£ ‡¨ï‡¨£ ‡¨∂‡¨ø‡¨ñ‡¨ø‡¨≤‡≠á:'}
              </h3>
              <ul className="text-green-100 text-xs space-y-1 text-left">
                {cellParts.map((part) => (
                  <li key={part.id} className="flex items-start gap-2">
                    <span>{part.emoji}</span>
                    <span>{part.name[language]}: {part.function[language]}</span>
                  </li>
                ))}
              </ul>
            </div>
            
            <Button onClick={finish} className="w-full bg-green-500 hover:bg-green-600">
              {language === 'en' ? 'Continue Learning' : language === 'hi' ? '‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç' : '‡¨∂‡¨ø‡¨ñ‡¨ø‡¨¨‡¨æ ‡¨ú‡¨æ‡¨∞‡¨ø ‡¨∞‡¨ñ‡¨®‡≠ç‡¨§‡≠Å'}
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return null;
}