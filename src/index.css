/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: oklch(.971 .013 17.38);
    --color-red-100: oklch(.936 .032 17.717);
    --color-red-200: oklch(.885 .062 18.334);
    --color-red-300: oklch(.808 .114 19.571);
    --color-red-400: oklch(.704 .191 22.216);
    --color-red-500: oklch(.637 .237 25.331);
    --color-red-600: oklch(.577 .245 27.325);
    --color-red-700: oklch(.505 .213 27.518);
    --color-red-800: oklch(.444 .177 26.899);
    --color-red-900: oklch(.396 .141 25.723);
    --color-orange-50: oklch(.98 .016 73.684);
    --color-orange-100: oklch(.954 .038 75.164);
    --color-orange-200: oklch(.901 .076 70.697);
    --color-orange-300: oklch(.837 .128 66.29);
    --color-orange-400: oklch(.75 .183 55.934);
    --color-orange-500: oklch(.705 .213 47.604);
    --color-orange-600: oklch(.646 .222 41.116);
    --color-orange-700: oklch(.553 .195 38.402);
    --color-orange-800: oklch(.47 .157 37.304);
    --color-orange-900: oklch(.408 .123 38.172);
    --color-amber-50: oklch(.987 .022 95.277);
    --color-amber-100: oklch(.962 .059 95.617);
    --color-amber-200: oklch(.924 .12 95.746);
    --color-amber-300: oklch(.879 .169 91.605);
    --color-amber-400: oklch(.828 .189 84.429);
    --color-amber-500: oklch(.769 .188 70.08);
    --color-amber-600: oklch(.666 .179 58.318);
    --color-amber-700: oklch(.555 .163 48.998);
    --color-amber-800: oklch(.473 .137 46.201);
    --color-amber-900: oklch(.414 .112 45.904);
    --color-yellow-50: oklch(.987 .026 102.212);
    --color-yellow-100: oklch(.973 .071 103.193);
    --color-yellow-200: oklch(.945 .129 101.54);
    --color-yellow-300: oklch(.905 .182 98.111);
    --color-yellow-400: oklch(.852 .199 91.936);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-yellow-600: oklch(.681 .162 75.834);
    --color-yellow-700: oklch(.554 .135 66.442);
    --color-yellow-800: oklch(.476 .114 61.907);
    --color-yellow-900: oklch(.421 .095 57.708);
    --color-lime-500: oklch(.768 .233 130.85);
    --color-lime-600: oklch(.648 .2 131.684);
    --color-green-50: oklch(.982 .018 155.826);
    --color-green-100: oklch(.962 .044 156.743);
    --color-green-200: oklch(.925 .084 155.995);
    --color-green-300: oklch(.871 .15 154.449);
    --color-green-400: oklch(.792 .209 151.711);
    --color-green-500: oklch(.723 .219 149.579);
    --color-green-600: oklch(.627 .194 149.214);
    --color-green-700: oklch(.527 .154 150.069);
    --color-green-800: oklch(.448 .119 151.328);
    --color-green-900: oklch(.393 .095 152.535);
    --color-emerald-50: oklch(.979 .021 166.113);
    --color-emerald-100: oklch(.95 .052 163.051);
    --color-emerald-200: oklch(.905 .093 164.15);
    --color-emerald-300: oklch(.845 .143 164.978);
    --color-emerald-400: oklch(.765 .177 163.223);
    --color-emerald-500: oklch(.696 .17 162.48);
    --color-emerald-600: oklch(.596 .145 163.225);
    --color-emerald-700: oklch(.508 .118 165.612);
    --color-emerald-800: oklch(.432 .095 166.913);
    --color-emerald-900: oklch(.378 .077 168.94);
    --color-teal-50: oklch(.984 .014 180.72);
    --color-teal-100: oklch(.953 .051 180.801);
    --color-teal-200: oklch(.91 .096 180.426);
    --color-teal-300: oklch(.855 .138 181.071);
    --color-teal-400: oklch(.777 .152 181.912);
    --color-teal-500: oklch(.704 .14 182.503);
    --color-teal-600: oklch(.6 .118 184.704);
    --color-teal-700: oklch(.511 .096 186.391);
    --color-teal-800: oklch(.437 .078 188.216);
    --color-teal-900: oklch(.386 .063 188.416);
    --color-cyan-50: oklch(.984 .019 200.873);
    --color-cyan-100: oklch(.956 .045 203.388);
    --color-cyan-200: oklch(.917 .08 205.041);
    --color-cyan-300: oklch(.865 .127 207.078);
    --color-cyan-400: oklch(.789 .154 211.53);
    --color-cyan-500: oklch(.715 .143 215.221);
    --color-cyan-600: oklch(.609 .126 221.723);
    --color-cyan-700: oklch(.52 .105 223.128);
    --color-cyan-800: oklch(.45 .085 224.283);
    --color-sky-50: oklch(.977 .013 236.62);
    --color-sky-500: oklch(.685 .169 237.323);
    --color-sky-600: oklch(.588 .158 241.966);
    --color-blue-50: oklch(.97 .014 254.604);
    --color-blue-100: oklch(.932 .032 255.585);
    --color-blue-200: oklch(.882 .059 254.128);
    --color-blue-300: oklch(.809 .105 251.813);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-blue-700: oklch(.488 .243 264.376);
    --color-blue-800: oklch(.424 .199 265.638);
    --color-blue-900: oklch(.379 .146 265.522);
    --color-indigo-50: oklch(.962 .018 272.314);
    --color-indigo-100: oklch(.93 .034 272.788);
    --color-indigo-200: oklch(.87 .065 274.039);
    --color-indigo-300: oklch(.785 .115 274.713);
    --color-indigo-400: oklch(.673 .182 276.935);
    --color-indigo-500: oklch(.585 .233 277.117);
    --color-indigo-600: oklch(.511 .262 276.966);
    --color-indigo-700: oklch(.457 .24 277.023);
    --color-indigo-800: oklch(.398 .195 277.366);
    --color-indigo-900: oklch(.359 .144 278.697);
    --color-violet-50: oklch(.969 .016 293.756);
    --color-violet-100: oklch(.943 .029 294.588);
    --color-violet-200: oklch(.894 .057 293.283);
    --color-violet-300: oklch(.811 .111 293.571);
    --color-violet-400: oklch(.702 .183 293.541);
    --color-violet-500: oklch(.606 .25 292.717);
    --color-violet-600: oklch(.541 .281 293.009);
    --color-violet-700: oklch(.491 .27 292.581);
    --color-violet-800: oklch(.432 .232 292.759);
    --color-violet-900: oklch(.38 .189 293.745);
    --color-purple-50: oklch(.977 .014 308.299);
    --color-purple-100: oklch(.946 .033 307.174);
    --color-purple-200: oklch(.902 .063 306.703);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-purple-700: oklch(.496 .265 301.924);
    --color-purple-800: oklch(.438 .218 303.724);
    --color-purple-900: oklch(.381 .176 304.987);
    --color-fuchsia-50: oklch(.977 .017 320.058);
    --color-fuchsia-500: oklch(.667 .295 322.15);
    --color-fuchsia-600: oklch(.591 .293 322.896);
    --color-pink-50: oklch(.971 .014 343.198);
    --color-pink-100: oklch(.948 .028 342.258);
    --color-pink-200: oklch(.899 .061 343.231);
    --color-pink-300: oklch(.823 .12 346.018);
    --color-pink-400: oklch(.718 .202 349.761);
    --color-pink-500: oklch(.656 .241 354.308);
    --color-pink-600: oklch(.592 .249 .584);
    --color-pink-700: oklch(.525 .223 3.958);
    --color-pink-900: oklch(.408 .153 2.432);
    --color-rose-50: oklch(.969 .015 12.422);
    --color-rose-200: oklch(.892 .058 10.001);
    --color-rose-400: oklch(.712 .194 13.428);
    --color-rose-500: oklch(.645 .246 16.439);
    --color-rose-600: oklch(.586 .253 17.585);
    --color-rose-700: oklch(.514 .222 16.935);
    --color-slate-50: oklch(.984 .003 247.858);
    --color-slate-100: oklch(.968 .007 247.896);
    --color-slate-200: oklch(.929 .013 255.508);
    --color-slate-300: oklch(.869 .022 252.894);
    --color-slate-400: oklch(.704 .04 256.788);
    --color-slate-500: oklch(.554 .046 257.417);
    --color-slate-600: oklch(.446 .043 257.281);
    --color-slate-700: oklch(.372 .044 257.287);
    --color-slate-800: oklch(.279 .041 260.031);
    --color-slate-900: oklch(.208 .042 265.755);
    --color-gray-50: oklch(.985 .002 247.839);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --tracking-tight: -.025em;
    --tracking-wide: .025em;
    --tracking-wider: .05em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-relaxed: 1.625;
    --radius-xs: .125rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --drop-shadow-sm: 0 1px 2px #00000026;
    --drop-shadow-md: 0 3px 3px #0000001f;
    --drop-shadow-lg: 0 4px 4px #00000026;
    --ease-out: cubic-bezier(0, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, .2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .invisible {
    visibility: hidden;
  }

  .visible {
    visibility: visible;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .sticky {
    position: sticky;
  }

  .-inset-2 {
    inset: calc(var(--spacing) * -2);
  }

  .-inset-4 {
    inset: calc(var(--spacing) * -4);
  }

  .-inset-px {
    inset: -1px;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-0\.5 {
    inset: calc(var(--spacing) * .5);
  }

  .inset-1 {
    inset: calc(var(--spacing) * 1);
  }

  .inset-2 {
    inset: calc(var(--spacing) * 2);
  }

  .inset-4 {
    inset: calc(var(--spacing) * 4);
  }

  .inset-8 {
    inset: calc(var(--spacing) * 8);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .-top-1 {
    top: calc(var(--spacing) * -1);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-3 {
    top: calc(var(--spacing) * -3);
  }

  .-top-4 {
    top: calc(var(--spacing) * -4);
  }

  .-top-6 {
    top: calc(var(--spacing) * -6);
  }

  .-top-8 {
    top: calc(var(--spacing) * -8);
  }

  .-top-16 {
    top: calc(var(--spacing) * -16);
  }

  .-top-24 {
    top: calc(var(--spacing) * -24);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-0\.5 {
    top: calc(var(--spacing) * .5);
  }

  .top-1 {
    top: calc(var(--spacing) * 1);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-1\/3 {
    top: 33.3333%;
  }

  .top-1\/4 {
    top: 25%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-3 {
    top: calc(var(--spacing) * 3);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-6 {
    top: calc(var(--spacing) * 6);
  }

  .top-8 {
    top: calc(var(--spacing) * 8);
  }

  .top-10 {
    top: calc(var(--spacing) * 10);
  }

  .top-12 {
    top: calc(var(--spacing) * 12);
  }

  .top-16 {
    top: calc(var(--spacing) * 16);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .top-24 {
    top: calc(var(--spacing) * 24);
  }

  .top-32 {
    top: calc(var(--spacing) * 32);
  }

  .top-40 {
    top: calc(var(--spacing) * 40);
  }

  .top-44 {
    top: calc(var(--spacing) * 44);
  }

  .top-48 {
    top: calc(var(--spacing) * 48);
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .top-full {
    top: 100%;
  }

  .-right-1 {
    right: calc(var(--spacing) * -1);
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .-right-4 {
    right: calc(var(--spacing) * -4);
  }

  .-right-6 {
    right: calc(var(--spacing) * -6);
  }

  .-right-8 {
    right: calc(var(--spacing) * -8);
  }

  .-right-12 {
    right: calc(var(--spacing) * -12);
  }

  .-right-16 {
    right: calc(var(--spacing) * -16);
  }

  .-right-20 {
    right: calc(var(--spacing) * -20);
  }

  .-right-24 {
    right: calc(var(--spacing) * -24);
  }

  .-right-32 {
    right: calc(var(--spacing) * -32);
  }

  .-right-48 {
    right: calc(var(--spacing) * -48);
  }

  .-right-64 {
    right: calc(var(--spacing) * -64);
  }

  .-right-80 {
    right: calc(var(--spacing) * -80);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-1\/2 {
    right: 50%;
  }

  .right-1\/3 {
    right: 33.3333%;
  }

  .right-1\/4 {
    right: 25%;
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-6 {
    right: calc(var(--spacing) * 6);
  }

  .right-8 {
    right: calc(var(--spacing) * 8);
  }

  .right-10 {
    right: calc(var(--spacing) * 10);
  }

  .right-12 {
    right: calc(var(--spacing) * 12);
  }

  .right-16 {
    right: calc(var(--spacing) * 16);
  }

  .right-20 {
    right: calc(var(--spacing) * 20);
  }

  .right-24 {
    right: calc(var(--spacing) * 24);
  }

  .right-32 {
    right: calc(var(--spacing) * 32);
  }

  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }

  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }

  .-bottom-3 {
    bottom: calc(var(--spacing) * -3);
  }

  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }

  .-bottom-8 {
    bottom: calc(var(--spacing) * -8);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-1\/4 {
    bottom: 25%;
  }

  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }

  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }

  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }

  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }

  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }

  .bottom-16 {
    bottom: calc(var(--spacing) * 16);
  }

  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }

  .bottom-28 {
    bottom: calc(var(--spacing) * 28);
  }

  .bottom-32 {
    bottom: calc(var(--spacing) * 32);
  }

  .-left-1 {
    left: calc(var(--spacing) * -1);
  }

  .-left-2 {
    left: calc(var(--spacing) * -2);
  }

  .-left-3 {
    left: calc(var(--spacing) * -3);
  }

  .-left-6 {
    left: calc(var(--spacing) * -6);
  }

  .-left-24 {
    left: calc(var(--spacing) * -24);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-1\/3 {
    left: 33.3333%;
  }

  .left-1\/4 {
    left: 25%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .left-6 {
    left: calc(var(--spacing) * 6);
  }

  .left-8 {
    left: calc(var(--spacing) * 8);
  }

  .left-10 {
    left: calc(var(--spacing) * 10);
  }

  .left-12 {
    left: calc(var(--spacing) * 12);
  }

  .left-14 {
    left: calc(var(--spacing) * 14);
  }

  .left-16 {
    left: calc(var(--spacing) * 16);
  }

  .left-18 {
    left: calc(var(--spacing) * 18);
  }

  .left-20 {
    left: calc(var(--spacing) * 20);
  }

  .left-24 {
    left: calc(var(--spacing) * 24);
  }

  .left-40 {
    left: calc(var(--spacing) * 40);
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .isolate {
    isolation: isolate;
  }

  .-z-10 {
    z-index: calc(10 * -1);
  }

  .z-0 {
    z-index: 0;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-25 {
    z-index: 25;
  }

  .z-30 {
    z-index: 30;
  }

  .z-40 {
    z-index: 40;
  }

  .z-50 {
    z-index: 50;
  }

  .order-1 {
    order: 1;
  }

  .order-2 {
    order: 2;
  }

  .order-3 {
    order: 3;
  }

  .col-span-2 {
    grid-column: span 2 / span 2;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .m-0\.5 {
    margin: calc(var(--spacing) * .5);
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-6 {
    margin-inline: calc(var(--spacing) * 6);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .-mt-1 {
    margin-top: calc(var(--spacing) * -1);
  }

  .-mt-24 {
    margin-top: calc(var(--spacing) * -24);
  }

  .-mt-40 {
    margin-top: calc(var(--spacing) * -40);
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }

  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }

  .ml-5 {
    margin-left: calc(var(--spacing) * 5);
  }

  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }

  .ml-10 {
    margin-left: calc(var(--spacing) * 10);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-18 {
    height: calc(var(--spacing) * 18);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-22 {
    height: calc(var(--spacing) * 22);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-28 {
    height: calc(var(--spacing) * 28);
  }

  .h-30 {
    height: calc(var(--spacing) * 30);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-36 {
    height: calc(var(--spacing) * 36);
  }

  .h-40 {
    height: calc(var(--spacing) * 40);
  }

  .h-44 {
    height: calc(var(--spacing) * 44);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-60 {
    height: calc(var(--spacing) * 60);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-72 {
    height: calc(var(--spacing) * 72);
  }

  .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-\[1\.15rem\] {
    height: 1.15rem;
  }

  .h-\[350px\] {
    height: 350px;
  }

  .h-\[400px\] {
    height: 400px;
  }

  .h-\[440px\] {
    height: 440px;
  }

  .h-\[500px\] {
    height: 500px;
  }

  .h-\[600px\] {
    height: 600px;
  }

  .h-\[calc\(100\%-1px\)\] {
    height: calc(100% - 1px);
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .max-h-32 {
    max-height: calc(var(--spacing) * 32);
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[80vh\] {
    max-height: 80vh;
  }

  .min-h-4 {
    min-height: calc(var(--spacing) * 4);
  }

  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }

  .min-h-\[3rem\] {
    min-height: 3rem;
  }

  .min-h-\[48px\] {
    min-height: 48px;
  }

  .min-h-\[80vh\] {
    min-height: 80vh;
  }

  .min-h-\[220px\] {
    min-height: 220px;
  }

  .min-h-\[300px\] {
    min-height: 300px;
  }

  .min-h-\[400px\] {
    min-height: 400px;
  }

  .min-h-\[500px\] {
    min-height: 500px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0\.5 {
    width: calc(var(--spacing) * .5);
  }

  .w-1 {
    width: calc(var(--spacing) * 1);
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-14 {
    width: calc(var(--spacing) * 14);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-18 {
    width: calc(var(--spacing) * 18);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-22 {
    width: calc(var(--spacing) * 22);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-28 {
    width: calc(var(--spacing) * 28);
  }

  .w-30 {
    width: calc(var(--spacing) * 30);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-36 {
    width: calc(var(--spacing) * 36);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-44 {
    width: calc(var(--spacing) * 44);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-60 {
    width: calc(var(--spacing) * 60);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[350px\] {
    width: 350px;
  }

  .w-\[400px\] {
    width: 400px;
  }

  .w-\[440px\] {
    width: 440px;
  }

  .w-\[500px\] {
    width: 500px;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }

  .max-w-48 {
    max-width: calc(var(--spacing) * 48);
  }

  .max-w-\[200px\] {
    max-width: 200px;
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-16 {
    min-width: calc(var(--spacing) * 16);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[48px\] {
    min-width: 48px;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .flex-grow, .grow {
    flex-grow: 1;
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .origin-\(--radix-tooltip-content-transform-origin\) {
    transform-origin: var(--radix-tooltip-content-transform-origin);
  }

  .origin-left {
    transform-origin: 0;
  }

  .origin-top {
    transform-origin: top;
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-1\/2 {
    --tw-translate-x: calc(1 / 2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * 4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-110 {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-x-\[-1\] {
    --tw-scale-x: -1;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .-rotate-8 {
    rotate: -8deg;
  }

  .-rotate-90 {
    rotate: -90deg;
  }

  .rotate-12 {
    rotate: 12deg;
  }

  .rotate-20 {
    rotate: 20deg;
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .rotate-90 {
    rotate: 90deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .-skew-x-12 {
    --tw-skew-x: skewX(calc(12deg * -1));
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-\[shimmer_2s_infinite\] {
    animation: 2s infinite shimmer;
  }

  .animate-\[shimmer_3s_infinite\] {
    animation: 3s infinite shimmer;
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-in {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .animate-ping {
    animation: var(--animate-ping);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-crosshair {
    cursor: crosshair;
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-grab {
    cursor: grab;
  }

  .cursor-move {
    cursor: move;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-none {
    touch-action: none;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }

  .list-inside {
    list-style-position: inside;
  }

  .list-decimal {
    list-style-type: decimal;
  }

  .list-disc {
    list-style-type: disc;
  }

  .appearance-none {
    appearance: none;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  .grid-cols-\[0_1fr\] {
    grid-template-columns: 0 1fr;
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-around {
    justify-content: space-around;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .justify-items-start {
    justify-items: start;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  :where(.space-y-0\.5 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * .5) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * .5) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-10 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1\.5 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  .gap-y-0\.5 {
    row-gap: calc(var(--spacing) * .5);
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }

  .rounded-\[2\.5rem\] {
    border-radius: 2.5rem;
  }

  .rounded-\[2px\] {
    border-radius: 2px;
  }

  .rounded-\[2rem\] {
    border-radius: 2rem;
  }

  .rounded-\[3rem\] {
    border-radius: 3rem;
  }

  .rounded-\[4px\] {
    border-radius: 4px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-sm {
    border-radius: calc(var(--radius)  - 4px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-t-\[2rem\] {
    border-top-left-radius: 2rem;
    border-top-right-radius: 2rem;
  }

  .rounded-l-full {
    border-top-left-radius: 3.40282e38px;
    border-bottom-left-radius: 3.40282e38px;
  }

  .rounded-r-full {
    border-top-right-radius: 3.40282e38px;
    border-bottom-right-radius: 3.40282e38px;
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-6 {
    border-style: var(--tw-border-style);
    border-width: 6px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }

  .border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }

  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-amber-200 {
    border-color: var(--color-amber-200);
  }

  .border-amber-300 {
    border-color: var(--color-amber-300);
  }

  .border-amber-300\/40 {
    border-color: color-mix(in srgb, oklch(.879 .169 91.605) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-300\/40 {
      border-color: color-mix(in oklab, var(--color-amber-300) 40%, transparent);
    }
  }

  .border-amber-600 {
    border-color: var(--color-amber-600);
  }

  .border-amber-600\/20 {
    border-color: color-mix(in srgb, oklch(.666 .179 58.318) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-600\/20 {
      border-color: color-mix(in oklab, var(--color-amber-600) 20%, transparent);
    }
  }

  .border-amber-600\/30 {
    border-color: color-mix(in srgb, oklch(.666 .179 58.318) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-600\/30 {
      border-color: color-mix(in oklab, var(--color-amber-600) 30%, transparent);
    }
  }

  .border-amber-600\/40 {
    border-color: color-mix(in srgb, oklch(.666 .179 58.318) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-600\/40 {
      border-color: color-mix(in oklab, var(--color-amber-600) 40%, transparent);
    }
  }

  .border-amber-700 {
    border-color: var(--color-amber-700);
  }

  .border-amber-700\/30 {
    border-color: color-mix(in srgb, oklch(.555 .163 48.998) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-700\/30 {
      border-color: color-mix(in oklab, var(--color-amber-700) 30%, transparent);
    }
  }

  .border-amber-800\/50 {
    border-color: color-mix(in srgb, oklch(.473 .137 46.201) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-800\/50 {
      border-color: color-mix(in oklab, var(--color-amber-800) 50%, transparent);
    }
  }

  .border-blue-200 {
    border-color: var(--color-blue-200);
  }

  .border-blue-300 {
    border-color: var(--color-blue-300);
  }

  .border-blue-300\/40 {
    border-color: color-mix(in srgb, oklch(.809 .105 251.813) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-300\/40 {
      border-color: color-mix(in oklab, var(--color-blue-300) 40%, transparent);
    }
  }

  .border-blue-300\/50 {
    border-color: color-mix(in srgb, oklch(.809 .105 251.813) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-300\/50 {
      border-color: color-mix(in oklab, var(--color-blue-300) 50%, transparent);
    }
  }

  .border-blue-400 {
    border-color: var(--color-blue-400);
  }

  .border-blue-400\/20 {
    border-color: color-mix(in srgb, oklch(.707 .165 254.624) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-400\/20 {
      border-color: color-mix(in oklab, var(--color-blue-400) 20%, transparent);
    }
  }

  .border-blue-400\/30 {
    border-color: color-mix(in srgb, oklch(.707 .165 254.624) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-400\/30 {
      border-color: color-mix(in oklab, var(--color-blue-400) 30%, transparent);
    }
  }

  .border-blue-400\/50 {
    border-color: color-mix(in srgb, oklch(.707 .165 254.624) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-400\/50 {
      border-color: color-mix(in oklab, var(--color-blue-400) 50%, transparent);
    }
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-blue-500\/30 {
    border-color: color-mix(in srgb, oklch(.623 .214 259.815) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-500\/30 {
      border-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
    }
  }

  .border-blue-600 {
    border-color: var(--color-blue-600);
  }

  .border-blue-600\/30 {
    border-color: color-mix(in srgb, oklch(.546 .245 262.881) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-600\/30 {
      border-color: color-mix(in oklab, var(--color-blue-600) 30%, transparent);
    }
  }

  .border-blue-600\/40 {
    border-color: color-mix(in srgb, oklch(.546 .245 262.881) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-600\/40 {
      border-color: color-mix(in oklab, var(--color-blue-600) 40%, transparent);
    }
  }

  .border-blue-600\/50 {
    border-color: color-mix(in srgb, oklch(.546 .245 262.881) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-600\/50 {
      border-color: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
    }
  }

  .border-blue-700 {
    border-color: var(--color-blue-700);
  }

  .border-blue-700\/30 {
    border-color: color-mix(in srgb, oklch(.488 .243 264.376) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-700\/30 {
      border-color: color-mix(in oklab, var(--color-blue-700) 30%, transparent);
    }
  }

  .border-current {
    border-color: currentColor;
  }

  .border-cyan-200 {
    border-color: var(--color-cyan-200);
  }

  .border-cyan-300 {
    border-color: var(--color-cyan-300);
  }

  .border-cyan-400 {
    border-color: var(--color-cyan-400);
  }

  .border-cyan-400\/20 {
    border-color: color-mix(in srgb, oklch(.789 .154 211.53) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-cyan-400\/20 {
      border-color: color-mix(in oklab, var(--color-cyan-400) 20%, transparent);
    }
  }

  .border-cyan-400\/30 {
    border-color: color-mix(in srgb, oklch(.789 .154 211.53) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-cyan-400\/30 {
      border-color: color-mix(in oklab, var(--color-cyan-400) 30%, transparent);
    }
  }

  .border-cyan-400\/50 {
    border-color: color-mix(in srgb, oklch(.789 .154 211.53) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-cyan-400\/50 {
      border-color: color-mix(in oklab, var(--color-cyan-400) 50%, transparent);
    }
  }

  .border-cyan-500\/30 {
    border-color: color-mix(in srgb, oklch(.715 .143 215.221) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-cyan-500\/30 {
      border-color: color-mix(in oklab, var(--color-cyan-500) 30%, transparent);
    }
  }

  .border-emerald-200 {
    border-color: var(--color-emerald-200);
  }

  .border-emerald-200\/50 {
    border-color: color-mix(in srgb, oklch(.905 .093 164.15) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-200\/50 {
      border-color: color-mix(in oklab, var(--color-emerald-200) 50%, transparent);
    }
  }

  .border-emerald-300 {
    border-color: var(--color-emerald-300);
  }

  .border-emerald-400\/30 {
    border-color: color-mix(in srgb, oklch(.765 .177 163.223) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-400\/30 {
      border-color: color-mix(in oklab, var(--color-emerald-400) 30%, transparent);
    }
  }

  .border-emerald-400\/40 {
    border-color: color-mix(in srgb, oklch(.765 .177 163.223) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-400\/40 {
      border-color: color-mix(in oklab, var(--color-emerald-400) 40%, transparent);
    }
  }

  .border-emerald-400\/50 {
    border-color: color-mix(in srgb, oklch(.765 .177 163.223) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-400\/50 {
      border-color: color-mix(in oklab, var(--color-emerald-400) 50%, transparent);
    }
  }

  .border-gray-100 {
    border-color: var(--color-gray-100);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-200\/50 {
    border-color: color-mix(in srgb, oklch(.928 .006 264.531) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-200\/50 {
      border-color: color-mix(in oklab, var(--color-gray-200) 50%, transparent);
    }
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-gray-400 {
    border-color: var(--color-gray-400);
  }

  .border-gray-400\/30 {
    border-color: color-mix(in srgb, oklch(.707 .022 261.325) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-400\/30 {
      border-color: color-mix(in oklab, var(--color-gray-400) 30%, transparent);
    }
  }

  .border-gray-400\/50 {
    border-color: color-mix(in srgb, oklch(.707 .022 261.325) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-400\/50 {
      border-color: color-mix(in oklab, var(--color-gray-400) 50%, transparent);
    }
  }

  .border-gray-500 {
    border-color: var(--color-gray-500);
  }

  .border-gray-600 {
    border-color: var(--color-gray-600);
  }

  .border-gray-700 {
    border-color: var(--color-gray-700);
  }

  .border-gray-800 {
    border-color: var(--color-gray-800);
  }

  .border-green-200 {
    border-color: var(--color-green-200);
  }

  .border-green-300 {
    border-color: var(--color-green-300);
  }

  .border-green-300\/40 {
    border-color: color-mix(in srgb, oklch(.871 .15 154.449) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-300\/40 {
      border-color: color-mix(in oklab, var(--color-green-300) 40%, transparent);
    }
  }

  .border-green-300\/50 {
    border-color: color-mix(in srgb, oklch(.871 .15 154.449) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-300\/50 {
      border-color: color-mix(in oklab, var(--color-green-300) 50%, transparent);
    }
  }

  .border-green-400 {
    border-color: var(--color-green-400);
  }

  .border-green-400\/30 {
    border-color: color-mix(in srgb, oklch(.792 .209 151.711) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-400\/30 {
      border-color: color-mix(in oklab, var(--color-green-400) 30%, transparent);
    }
  }

  .border-green-400\/40 {
    border-color: color-mix(in srgb, oklch(.792 .209 151.711) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-400\/40 {
      border-color: color-mix(in oklab, var(--color-green-400) 40%, transparent);
    }
  }

  .border-green-400\/50 {
    border-color: color-mix(in srgb, oklch(.792 .209 151.711) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-400\/50 {
      border-color: color-mix(in oklab, var(--color-green-400) 50%, transparent);
    }
  }

  .border-green-500 {
    border-color: var(--color-green-500);
  }

  .border-green-500\/30 {
    border-color: color-mix(in srgb, oklch(.723 .219 149.579) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/30 {
      border-color: color-mix(in oklab, var(--color-green-500) 30%, transparent);
    }
  }

  .border-green-500\/50 {
    border-color: color-mix(in srgb, oklch(.723 .219 149.579) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/50 {
      border-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
    }
  }

  .border-green-600 {
    border-color: var(--color-green-600);
  }

  .border-green-600\/40 {
    border-color: color-mix(in srgb, oklch(.627 .194 149.214) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-600\/40 {
      border-color: color-mix(in oklab, var(--color-green-600) 40%, transparent);
    }
  }

  .border-green-700\/30 {
    border-color: color-mix(in srgb, oklch(.527 .154 150.069) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-700\/30 {
      border-color: color-mix(in oklab, var(--color-green-700) 30%, transparent);
    }
  }

  .border-indigo-200\/50 {
    border-color: color-mix(in srgb, oklch(.87 .065 274.039) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-indigo-200\/50 {
      border-color: color-mix(in oklab, var(--color-indigo-200) 50%, transparent);
    }
  }

  .border-indigo-300 {
    border-color: var(--color-indigo-300);
  }

  .border-indigo-400 {
    border-color: var(--color-indigo-400);
  }

  .border-indigo-400\/30 {
    border-color: color-mix(in srgb, oklch(.673 .182 276.935) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-indigo-400\/30 {
      border-color: color-mix(in oklab, var(--color-indigo-400) 30%, transparent);
    }
  }

  .border-indigo-500\/30 {
    border-color: color-mix(in srgb, oklch(.585 .233 277.117) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-indigo-500\/30 {
      border-color: color-mix(in oklab, var(--color-indigo-500) 30%, transparent);
    }
  }

  .border-indigo-600 {
    border-color: var(--color-indigo-600);
  }

  .border-indigo-600\/30 {
    border-color: color-mix(in srgb, oklch(.511 .262 276.966) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-indigo-600\/30 {
      border-color: color-mix(in oklab, var(--color-indigo-600) 30%, transparent);
    }
  }

  .border-input {
    border-color: var(--input);
  }

  .border-orange-200 {
    border-color: var(--color-orange-200);
  }

  .border-orange-200\/50 {
    border-color: color-mix(in srgb, oklch(.901 .076 70.697) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-200\/50 {
      border-color: color-mix(in oklab, var(--color-orange-200) 50%, transparent);
    }
  }

  .border-orange-300 {
    border-color: var(--color-orange-300);
  }

  .border-orange-300\/40 {
    border-color: color-mix(in srgb, oklch(.837 .128 66.29) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-300\/40 {
      border-color: color-mix(in oklab, var(--color-orange-300) 40%, transparent);
    }
  }

  .border-orange-400 {
    border-color: var(--color-orange-400);
  }

  .border-orange-400\/30 {
    border-color: color-mix(in srgb, oklch(.75 .183 55.934) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-400\/30 {
      border-color: color-mix(in oklab, var(--color-orange-400) 30%, transparent);
    }
  }

  .border-orange-400\/50 {
    border-color: color-mix(in srgb, oklch(.75 .183 55.934) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-400\/50 {
      border-color: color-mix(in oklab, var(--color-orange-400) 50%, transparent);
    }
  }

  .border-orange-500\/30 {
    border-color: color-mix(in srgb, oklch(.705 .213 47.604) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-500\/30 {
      border-color: color-mix(in oklab, var(--color-orange-500) 30%, transparent);
    }
  }

  .border-orange-700\/30 {
    border-color: color-mix(in srgb, oklch(.553 .195 38.402) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-700\/30 {
      border-color: color-mix(in oklab, var(--color-orange-700) 30%, transparent);
    }
  }

  .border-pink-200\/50 {
    border-color: color-mix(in srgb, oklch(.899 .061 343.231) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-pink-200\/50 {
      border-color: color-mix(in oklab, var(--color-pink-200) 50%, transparent);
    }
  }

  .border-pink-400\/30 {
    border-color: color-mix(in srgb, oklch(.718 .202 349.761) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-pink-400\/30 {
      border-color: color-mix(in oklab, var(--color-pink-400) 30%, transparent);
    }
  }

  .border-primary {
    border-color: var(--primary);
  }

  .border-purple-200 {
    border-color: var(--color-purple-200);
  }

  .border-purple-200\/50 {
    border-color: color-mix(in srgb, oklch(.902 .063 306.703) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-200\/50 {
      border-color: color-mix(in oklab, var(--color-purple-200) 50%, transparent);
    }
  }

  .border-purple-300 {
    border-color: var(--color-purple-300);
  }

  .border-purple-300\/40 {
    border-color: color-mix(in srgb, oklch(.827 .119 306.383) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-300\/40 {
      border-color: color-mix(in oklab, var(--color-purple-300) 40%, transparent);
    }
  }

  .border-purple-400 {
    border-color: var(--color-purple-400);
  }

  .border-purple-400\/30 {
    border-color: color-mix(in srgb, oklch(.714 .203 305.504) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-400\/30 {
      border-color: color-mix(in oklab, var(--color-purple-400) 30%, transparent);
    }
  }

  .border-purple-400\/50 {
    border-color: color-mix(in srgb, oklch(.714 .203 305.504) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-400\/50 {
      border-color: color-mix(in oklab, var(--color-purple-400) 50%, transparent);
    }
  }

  .border-purple-500 {
    border-color: var(--color-purple-500);
  }

  .border-purple-500\/30 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/30 {
      border-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .border-purple-600\/30 {
    border-color: color-mix(in srgb, oklch(.558 .288 302.321) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-600\/30 {
      border-color: color-mix(in oklab, var(--color-purple-600) 30%, transparent);
    }
  }

  .border-purple-600\/40 {
    border-color: color-mix(in srgb, oklch(.558 .288 302.321) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-600\/40 {
      border-color: color-mix(in oklab, var(--color-purple-600) 40%, transparent);
    }
  }

  .border-purple-600\/50 {
    border-color: color-mix(in srgb, oklch(.558 .288 302.321) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-600\/50 {
      border-color: color-mix(in oklab, var(--color-purple-600) 50%, transparent);
    }
  }

  .border-purple-700\/30 {
    border-color: color-mix(in srgb, oklch(.496 .265 301.924) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-700\/30 {
      border-color: color-mix(in oklab, var(--color-purple-700) 30%, transparent);
    }
  }

  .border-red-100 {
    border-color: var(--color-red-100);
  }

  .border-red-300 {
    border-color: var(--color-red-300);
  }

  .border-red-300\/40 {
    border-color: color-mix(in srgb, oklch(.808 .114 19.571) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-300\/40 {
      border-color: color-mix(in oklab, var(--color-red-300) 40%, transparent);
    }
  }

  .border-red-300\/50 {
    border-color: color-mix(in srgb, oklch(.808 .114 19.571) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-300\/50 {
      border-color: color-mix(in oklab, var(--color-red-300) 50%, transparent);
    }
  }

  .border-red-400 {
    border-color: var(--color-red-400);
  }

  .border-red-400\/30 {
    border-color: color-mix(in srgb, oklch(.704 .191 22.216) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-400\/30 {
      border-color: color-mix(in oklab, var(--color-red-400) 30%, transparent);
    }
  }

  .border-red-400\/50 {
    border-color: color-mix(in srgb, oklch(.704 .191 22.216) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-400\/50 {
      border-color: color-mix(in oklab, var(--color-red-400) 50%, transparent);
    }
  }

  .border-red-400\/60 {
    border-color: color-mix(in srgb, oklch(.704 .191 22.216) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-400\/60 {
      border-color: color-mix(in oklab, var(--color-red-400) 60%, transparent);
    }
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-red-500\/30 {
    border-color: color-mix(in srgb, oklch(.637 .237 25.331) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/30 {
      border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
    }
  }

  .border-red-500\/50 {
    border-color: color-mix(in srgb, oklch(.637 .237 25.331) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/50 {
      border-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
    }
  }

  .border-red-600 {
    border-color: var(--color-red-600);
  }

  .border-red-600\/50 {
    border-color: color-mix(in srgb, oklch(.577 .245 27.325) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-600\/50 {
      border-color: color-mix(in oklab, var(--color-red-600) 50%, transparent);
    }
  }

  .border-red-700 {
    border-color: var(--color-red-700);
  }

  .border-slate-200 {
    border-color: var(--color-slate-200);
  }

  .border-slate-300 {
    border-color: var(--color-slate-300);
  }

  .border-slate-300\/40 {
    border-color: color-mix(in srgb, oklch(.869 .022 252.894) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-300\/40 {
      border-color: color-mix(in oklab, var(--color-slate-300) 40%, transparent);
    }
  }

  .border-slate-400\/20 {
    border-color: color-mix(in srgb, oklch(.704 .04 256.788) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-400\/20 {
      border-color: color-mix(in oklab, var(--color-slate-400) 20%, transparent);
    }
  }

  .border-slate-400\/50 {
    border-color: color-mix(in srgb, oklch(.704 .04 256.788) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-400\/50 {
      border-color: color-mix(in oklab, var(--color-slate-400) 50%, transparent);
    }
  }

  .border-slate-500 {
    border-color: var(--color-slate-500);
  }

  .border-slate-500\/30 {
    border-color: color-mix(in srgb, oklch(.554 .046 257.417) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-500\/30 {
      border-color: color-mix(in oklab, var(--color-slate-500) 30%, transparent);
    }
  }

  .border-slate-500\/50 {
    border-color: color-mix(in srgb, oklch(.554 .046 257.417) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-500\/50 {
      border-color: color-mix(in oklab, var(--color-slate-500) 50%, transparent);
    }
  }

  .border-slate-600 {
    border-color: var(--color-slate-600);
  }

  .border-slate-600\/30 {
    border-color: color-mix(in srgb, oklch(.446 .043 257.281) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-600\/30 {
      border-color: color-mix(in oklab, var(--color-slate-600) 30%, transparent);
    }
  }

  .border-slate-600\/50 {
    border-color: color-mix(in srgb, oklch(.446 .043 257.281) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-600\/50 {
      border-color: color-mix(in oklab, var(--color-slate-600) 50%, transparent);
    }
  }

  .border-slate-700 {
    border-color: var(--color-slate-700);
  }

  .border-slate-700\/30 {
    border-color: color-mix(in srgb, oklch(.372 .044 257.287) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-700\/30 {
      border-color: color-mix(in oklab, var(--color-slate-700) 30%, transparent);
    }
  }

  .border-slate-700\/50 {
    border-color: color-mix(in srgb, oklch(.372 .044 257.287) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-700\/50 {
      border-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
    }
  }

  .border-teal-200 {
    border-color: var(--color-teal-200);
  }

  .border-teal-300 {
    border-color: var(--color-teal-300);
  }

  .border-teal-400 {
    border-color: var(--color-teal-400);
  }

  .border-teal-400\/30 {
    border-color: color-mix(in srgb, oklch(.777 .152 181.912) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-teal-400\/30 {
      border-color: color-mix(in oklab, var(--color-teal-400) 30%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-violet-200 {
    border-color: var(--color-violet-200);
  }

  .border-violet-200\/50 {
    border-color: color-mix(in srgb, oklch(.894 .057 293.283) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-200\/50 {
      border-color: color-mix(in oklab, var(--color-violet-200) 50%, transparent);
    }
  }

  .border-violet-300 {
    border-color: var(--color-violet-300);
  }

  .border-violet-400 {
    border-color: var(--color-violet-400);
  }

  .border-violet-400\/30 {
    border-color: color-mix(in srgb, oklch(.702 .183 293.541) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-400\/30 {
      border-color: color-mix(in oklab, var(--color-violet-400) 30%, transparent);
    }
  }

  .border-white {
    border-color: var(--color-white);
  }

  .border-white\/10 {
    border-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-white\/30 {
    border-color: #ffffff4d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/30 {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }

  .border-white\/50 {
    border-color: #ffffff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/50 {
      border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }

  .border-white\/60 {
    border-color: #fff9;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/60 {
      border-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }

  .border-yellow-200 {
    border-color: var(--color-yellow-200);
  }

  .border-yellow-300 {
    border-color: var(--color-yellow-300);
  }

  .border-yellow-400 {
    border-color: var(--color-yellow-400);
  }

  .border-yellow-400\/30 {
    border-color: color-mix(in srgb, oklch(.852 .199 91.936) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-400\/30 {
      border-color: color-mix(in oklab, var(--color-yellow-400) 30%, transparent);
    }
  }

  .border-yellow-400\/50 {
    border-color: color-mix(in srgb, oklch(.852 .199 91.936) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-400\/50 {
      border-color: color-mix(in oklab, var(--color-yellow-400) 50%, transparent);
    }
  }

  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }

  .border-yellow-500\/20 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/20 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .border-yellow-500\/30 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/30 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 30%, transparent);
    }
  }

  .border-yellow-500\/50 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/50 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 50%, transparent);
    }
  }

  .border-yellow-600 {
    border-color: var(--color-yellow-600);
  }

  .border-t-transparent {
    border-top-color: #0000;
  }

  .bg-\[rgba\(113\,87\,234\,1\)\] {
    background-color: #7157ea;
  }

  .bg-amber-50 {
    background-color: var(--color-amber-50);
  }

  .bg-amber-100\/50 {
    background-color: color-mix(in srgb, oklch(.962 .059 95.617) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-amber-100\/50 {
      background-color: color-mix(in oklab, var(--color-amber-100) 50%, transparent);
    }
  }

  .bg-amber-100\/80 {
    background-color: color-mix(in srgb, oklch(.962 .059 95.617) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-amber-100\/80 {
      background-color: color-mix(in oklab, var(--color-amber-100) 80%, transparent);
    }
  }

  .bg-amber-100\/90 {
    background-color: color-mix(in srgb, oklch(.962 .059 95.617) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-amber-100\/90 {
      background-color: color-mix(in oklab, var(--color-amber-100) 90%, transparent);
    }
  }

  .bg-amber-500 {
    background-color: var(--color-amber-500);
  }

  .bg-amber-500\/20 {
    background-color: color-mix(in srgb, oklch(.769 .188 70.08) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-amber-500\/20 {
      background-color: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
    }
  }

  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/20 {
    background-color: #0003;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/20 {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .bg-black\/30 {
    background-color: #0000004d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/30 {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }

  .bg-black\/40 {
    background-color: #0006;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/40 {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-black\/60 {
    background-color: #0009;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/60 {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }

  .bg-black\/80 {
    background-color: #000c;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/80 {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }

  .bg-black\/90 {
    background-color: #000000e6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/90 {
      background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-100\/20 {
    background-color: color-mix(in srgb, oklch(.932 .032 255.585) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-100\/20 {
      background-color: color-mix(in oklab, var(--color-blue-100) 20%, transparent);
    }
  }

  .bg-blue-100\/50 {
    background-color: color-mix(in srgb, oklch(.932 .032 255.585) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-100\/50 {
      background-color: color-mix(in oklab, var(--color-blue-100) 50%, transparent);
    }
  }

  .bg-blue-100\/60 {
    background-color: color-mix(in srgb, oklch(.932 .032 255.585) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-100\/60 {
      background-color: color-mix(in oklab, var(--color-blue-100) 60%, transparent);
    }
  }

  .bg-blue-100\/80 {
    background-color: color-mix(in srgb, oklch(.932 .032 255.585) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-100\/80 {
      background-color: color-mix(in oklab, var(--color-blue-100) 80%, transparent);
    }
  }

  .bg-blue-200 {
    background-color: var(--color-blue-200);
  }

  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }

  .bg-blue-400 {
    background-color: var(--color-blue-400);
  }

  .bg-blue-400\/20 {
    background-color: color-mix(in srgb, oklch(.707 .165 254.624) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-400\/20 {
      background-color: color-mix(in oklab, var(--color-blue-400) 20%, transparent);
    }
  }

  .bg-blue-400\/30 {
    background-color: color-mix(in srgb, oklch(.707 .165 254.624) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-400\/30 {
      background-color: color-mix(in oklab, var(--color-blue-400) 30%, transparent);
    }
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-500\/10 {
    background-color: color-mix(in srgb, oklch(.623 .214 259.815) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/10 {
      background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
  }

  .bg-blue-500\/20 {
    background-color: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/20 {
      background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .bg-blue-500\/30 {
    background-color: color-mix(in srgb, oklch(.623 .214 259.815) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/30 {
      background-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
    }
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-blue-600\/20 {
    background-color: color-mix(in srgb, oklch(.546 .245 262.881) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-600\/20 {
      background-color: color-mix(in oklab, var(--color-blue-600) 20%, transparent);
    }
  }

  .bg-blue-800\/20 {
    background-color: color-mix(in srgb, oklch(.424 .199 265.638) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-800\/20 {
      background-color: color-mix(in oklab, var(--color-blue-800) 20%, transparent);
    }
  }

  .bg-blue-800\/30 {
    background-color: color-mix(in srgb, oklch(.424 .199 265.638) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-800\/30 {
      background-color: color-mix(in oklab, var(--color-blue-800) 30%, transparent);
    }
  }

  .bg-blue-900\/30 {
    background-color: color-mix(in srgb, oklch(.379 .146 265.522) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-900\/30 {
      background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
    }
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-current {
    background-color: currentColor;
  }

  .bg-cyan-100 {
    background-color: var(--color-cyan-100);
  }

  .bg-cyan-300 {
    background-color: var(--color-cyan-300);
  }

  .bg-cyan-400 {
    background-color: var(--color-cyan-400);
  }

  .bg-cyan-400\/10 {
    background-color: color-mix(in srgb, oklch(.789 .154 211.53) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-400\/10 {
      background-color: color-mix(in oklab, var(--color-cyan-400) 10%, transparent);
    }
  }

  .bg-cyan-400\/20 {
    background-color: color-mix(in srgb, oklch(.789 .154 211.53) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-400\/20 {
      background-color: color-mix(in oklab, var(--color-cyan-400) 20%, transparent);
    }
  }

  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }

  .bg-cyan-500\/10 {
    background-color: color-mix(in srgb, oklch(.715 .143 215.221) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-500\/10 {
      background-color: color-mix(in oklab, var(--color-cyan-500) 10%, transparent);
    }
  }

  .bg-cyan-500\/20 {
    background-color: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-500\/20 {
      background-color: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
    }
  }

  .bg-cyan-500\/30 {
    background-color: color-mix(in srgb, oklch(.715 .143 215.221) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-500\/30 {
      background-color: color-mix(in oklab, var(--color-cyan-500) 30%, transparent);
    }
  }

  .bg-cyan-600\/20 {
    background-color: color-mix(in srgb, oklch(.609 .126 221.723) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-600\/20 {
      background-color: color-mix(in oklab, var(--color-cyan-600) 20%, transparent);
    }
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-emerald-100 {
    background-color: var(--color-emerald-100);
  }

  .bg-emerald-500 {
    background-color: var(--color-emerald-500);
  }

  .bg-emerald-900\/30 {
    background-color: color-mix(in srgb, oklch(.378 .077 168.94) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-emerald-900\/30 {
      background-color: color-mix(in oklab, var(--color-emerald-900) 30%, transparent);
    }
  }

  .bg-emerald-900\/80 {
    background-color: color-mix(in srgb, oklch(.378 .077 168.94) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-emerald-900\/80 {
      background-color: color-mix(in oklab, var(--color-emerald-900) 80%, transparent);
    }
  }

  .bg-emerald-900\/90 {
    background-color: color-mix(in srgb, oklch(.378 .077 168.94) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-emerald-900\/90 {
      background-color: color-mix(in oklab, var(--color-emerald-900) 90%, transparent);
    }
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-100\/30 {
    background-color: color-mix(in srgb, oklch(.967 .003 264.542) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-100\/30 {
      background-color: color-mix(in oklab, var(--color-gray-100) 30%, transparent);
    }
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-200\/60 {
    background-color: color-mix(in srgb, oklch(.928 .006 264.531) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-200\/60 {
      background-color: color-mix(in oklab, var(--color-gray-200) 60%, transparent);
    }
  }

  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }

  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }

  .bg-gray-500\/20 {
    background-color: color-mix(in srgb, oklch(.551 .027 264.364) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-500\/20 {
      background-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
    }
  }

  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }

  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }

  .bg-gray-700\/50 {
    background-color: color-mix(in srgb, oklch(.373 .034 259.733) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-700\/50 {
      background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-gray-800\/50 {
    background-color: color-mix(in srgb, oklch(.278 .033 256.848) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-800\/50 {
      background-color: color-mix(in oklab, var(--color-gray-800) 50%, transparent);
    }
  }

  .bg-gray-800\/60 {
    background-color: color-mix(in srgb, oklch(.278 .033 256.848) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-800\/60 {
      background-color: color-mix(in oklab, var(--color-gray-800) 60%, transparent);
    }
  }

  .bg-gray-800\/80 {
    background-color: color-mix(in srgb, oklch(.278 .033 256.848) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-800\/80 {
      background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
    }
  }

  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }

  .bg-gray-900\/50 {
    background-color: color-mix(in srgb, oklch(.21 .034 264.665) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-900\/50 {
      background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
    }
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-100\/50 {
    background-color: color-mix(in srgb, oklch(.962 .044 156.743) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-100\/50 {
      background-color: color-mix(in oklab, var(--color-green-100) 50%, transparent);
    }
  }

  .bg-green-100\/60 {
    background-color: color-mix(in srgb, oklch(.962 .044 156.743) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-100\/60 {
      background-color: color-mix(in oklab, var(--color-green-100) 60%, transparent);
    }
  }

  .bg-green-100\/80 {
    background-color: color-mix(in srgb, oklch(.962 .044 156.743) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-100\/80 {
      background-color: color-mix(in oklab, var(--color-green-100) 80%, transparent);
    }
  }

  .bg-green-200 {
    background-color: var(--color-green-200);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-400\/20 {
    background-color: color-mix(in srgb, oklch(.792 .209 151.711) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-400\/20 {
      background-color: color-mix(in oklab, var(--color-green-400) 20%, transparent);
    }
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-green-500\/20 {
    background-color: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/20 {
      background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }

  .bg-green-500\/50 {
    background-color: color-mix(in srgb, oklch(.723 .219 149.579) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/50 {
      background-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
    }
  }

  .bg-green-600 {
    background-color: var(--color-green-600);
  }

  .bg-green-600\/20 {
    background-color: color-mix(in srgb, oklch(.627 .194 149.214) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-600\/20 {
      background-color: color-mix(in oklab, var(--color-green-600) 20%, transparent);
    }
  }

  .bg-green-700\/30 {
    background-color: color-mix(in srgb, oklch(.527 .154 150.069) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-700\/30 {
      background-color: color-mix(in oklab, var(--color-green-700) 30%, transparent);
    }
  }

  .bg-green-800\/20 {
    background-color: color-mix(in srgb, oklch(.448 .119 151.328) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-800\/20 {
      background-color: color-mix(in oklab, var(--color-green-800) 20%, transparent);
    }
  }

  .bg-green-800\/30 {
    background-color: color-mix(in srgb, oklch(.448 .119 151.328) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-800\/30 {
      background-color: color-mix(in oklab, var(--color-green-800) 30%, transparent);
    }
  }

  .bg-green-800\/50 {
    background-color: color-mix(in srgb, oklch(.448 .119 151.328) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-800\/50 {
      background-color: color-mix(in oklab, var(--color-green-800) 50%, transparent);
    }
  }

  .bg-green-800\/80 {
    background-color: color-mix(in srgb, oklch(.448 .119 151.328) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-800\/80 {
      background-color: color-mix(in oklab, var(--color-green-800) 80%, transparent);
    }
  }

  .bg-green-900\/30 {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/30 {
      background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
    }
  }

  .bg-green-900\/50 {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/50 {
      background-color: color-mix(in oklab, var(--color-green-900) 50%, transparent);
    }
  }

  .bg-green-900\/80 {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/80 {
      background-color: color-mix(in oklab, var(--color-green-900) 80%, transparent);
    }
  }

  .bg-green-900\/90 {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/90 {
      background-color: color-mix(in oklab, var(--color-green-900) 90%, transparent);
    }
  }

  .bg-indigo-100 {
    background-color: var(--color-indigo-100);
  }

  .bg-indigo-400 {
    background-color: var(--color-indigo-400);
  }

  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }

  .bg-indigo-500\/20 {
    background-color: color-mix(in srgb, oklch(.585 .233 277.117) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-indigo-500\/20 {
      background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
    }
  }

  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }

  .bg-indigo-800\/60 {
    background-color: color-mix(in srgb, oklch(.398 .195 277.366) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-indigo-800\/60 {
      background-color: color-mix(in oklab, var(--color-indigo-800) 60%, transparent);
    }
  }

  .bg-indigo-900\/30 {
    background-color: color-mix(in srgb, oklch(.359 .144 278.697) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-indigo-900\/30 {
      background-color: color-mix(in oklab, var(--color-indigo-900) 30%, transparent);
    }
  }

  .bg-indigo-900\/90 {
    background-color: color-mix(in srgb, oklch(.359 .144 278.697) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-indigo-900\/90 {
      background-color: color-mix(in oklab, var(--color-indigo-900) 90%, transparent);
    }
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }

  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }

  .bg-orange-100\/50 {
    background-color: color-mix(in srgb, oklch(.954 .038 75.164) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-100\/50 {
      background-color: color-mix(in oklab, var(--color-orange-100) 50%, transparent);
    }
  }

  .bg-orange-100\/80 {
    background-color: color-mix(in srgb, oklch(.954 .038 75.164) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-100\/80 {
      background-color: color-mix(in oklab, var(--color-orange-100) 80%, transparent);
    }
  }

  .bg-orange-300 {
    background-color: var(--color-orange-300);
  }

  .bg-orange-400 {
    background-color: var(--color-orange-400);
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-orange-500\/10 {
    background-color: color-mix(in srgb, oklch(.705 .213 47.604) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-500\/10 {
      background-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
    }
  }

  .bg-orange-500\/20 {
    background-color: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-500\/20 {
      background-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }

  .bg-orange-900\/30 {
    background-color: color-mix(in srgb, oklch(.408 .123 38.172) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-900\/30 {
      background-color: color-mix(in oklab, var(--color-orange-900) 30%, transparent);
    }
  }

  .bg-pink-400 {
    background-color: var(--color-pink-400);
  }

  .bg-pink-400\/10 {
    background-color: color-mix(in srgb, oklch(.718 .202 349.761) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-400\/10 {
      background-color: color-mix(in oklab, var(--color-pink-400) 10%, transparent);
    }
  }

  .bg-pink-400\/20 {
    background-color: color-mix(in srgb, oklch(.718 .202 349.761) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-400\/20 {
      background-color: color-mix(in oklab, var(--color-pink-400) 20%, transparent);
    }
  }

  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }

  .bg-pink-500\/10 {
    background-color: color-mix(in srgb, oklch(.656 .241 354.308) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-500\/10 {
      background-color: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
  }

  .bg-pink-900\/30 {
    background-color: color-mix(in srgb, oklch(.408 .153 2.432) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-900\/30 {
      background-color: color-mix(in oklab, var(--color-pink-900) 30%, transparent);
    }
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-primary\/20 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .bg-purple-50 {
    background-color: var(--color-purple-50);
  }

  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }

  .bg-purple-100\/50 {
    background-color: color-mix(in srgb, oklch(.946 .033 307.174) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-100\/50 {
      background-color: color-mix(in oklab, var(--color-purple-100) 50%, transparent);
    }
  }

  .bg-purple-100\/60 {
    background-color: color-mix(in srgb, oklch(.946 .033 307.174) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-100\/60 {
      background-color: color-mix(in oklab, var(--color-purple-100) 60%, transparent);
    }
  }

  .bg-purple-200 {
    background-color: var(--color-purple-200);
  }

  .bg-purple-400 {
    background-color: var(--color-purple-400);
  }

  .bg-purple-400\/20 {
    background-color: color-mix(in srgb, oklch(.714 .203 305.504) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-400\/20 {
      background-color: color-mix(in oklab, var(--color-purple-400) 20%, transparent);
    }
  }

  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }

  .bg-purple-500\/10 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/10 {
      background-color: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .bg-purple-500\/20 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/20 {
      background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .bg-purple-500\/30 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/30 {
      background-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }

  .bg-purple-600\/20 {
    background-color: color-mix(in srgb, oklch(.558 .288 302.321) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-600\/20 {
      background-color: color-mix(in oklab, var(--color-purple-600) 20%, transparent);
    }
  }

  .bg-purple-600\/50 {
    background-color: color-mix(in srgb, oklch(.558 .288 302.321) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-600\/50 {
      background-color: color-mix(in oklab, var(--color-purple-600) 50%, transparent);
    }
  }

  .bg-purple-700\/30 {
    background-color: color-mix(in srgb, oklch(.496 .265 301.924) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-700\/30 {
      background-color: color-mix(in oklab, var(--color-purple-700) 30%, transparent);
    }
  }

  .bg-purple-800\/50 {
    background-color: color-mix(in srgb, oklch(.438 .218 303.724) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-800\/50 {
      background-color: color-mix(in oklab, var(--color-purple-800) 50%, transparent);
    }
  }

  .bg-purple-800\/80 {
    background-color: color-mix(in srgb, oklch(.438 .218 303.724) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-800\/80 {
      background-color: color-mix(in oklab, var(--color-purple-800) 80%, transparent);
    }
  }

  .bg-purple-900\/30 {
    background-color: color-mix(in srgb, oklch(.381 .176 304.987) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-900\/30 {
      background-color: color-mix(in oklab, var(--color-purple-900) 30%, transparent);
    }
  }

  .bg-purple-900\/80 {
    background-color: color-mix(in srgb, oklch(.381 .176 304.987) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-900\/80 {
      background-color: color-mix(in oklab, var(--color-purple-900) 80%, transparent);
    }
  }

  .bg-purple-900\/90 {
    background-color: color-mix(in srgb, oklch(.381 .176 304.987) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-900\/90 {
      background-color: color-mix(in oklab, var(--color-purple-900) 90%, transparent);
    }
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-100 {
    background-color: var(--color-red-100);
  }

  .bg-red-100\/20 {
    background-color: color-mix(in srgb, oklch(.936 .032 17.717) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-100\/20 {
      background-color: color-mix(in oklab, var(--color-red-100) 20%, transparent);
    }
  }

  .bg-red-100\/50 {
    background-color: color-mix(in srgb, oklch(.936 .032 17.717) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-100\/50 {
      background-color: color-mix(in oklab, var(--color-red-100) 50%, transparent);
    }
  }

  .bg-red-100\/60 {
    background-color: color-mix(in srgb, oklch(.936 .032 17.717) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-100\/60 {
      background-color: color-mix(in oklab, var(--color-red-100) 60%, transparent);
    }
  }

  .bg-red-300 {
    background-color: var(--color-red-300);
  }

  .bg-red-400 {
    background-color: var(--color-red-400);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-500\/10 {
    background-color: color-mix(in srgb, oklch(.637 .237 25.331) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/10 {
      background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
  }

  .bg-red-500\/20 {
    background-color: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/20 {
      background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .bg-red-600 {
    background-color: var(--color-red-600);
  }

  .bg-red-600\/20 {
    background-color: color-mix(in srgb, oklch(.577 .245 27.325) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-600\/20 {
      background-color: color-mix(in oklab, var(--color-red-600) 20%, transparent);
    }
  }

  .bg-red-800\/50 {
    background-color: color-mix(in srgb, oklch(.444 .177 26.899) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-800\/50 {
      background-color: color-mix(in oklab, var(--color-red-800) 50%, transparent);
    }
  }

  .bg-red-900\/20 {
    background-color: color-mix(in srgb, oklch(.396 .141 25.723) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-900\/20 {
      background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }

  .bg-red-900\/50 {
    background-color: color-mix(in srgb, oklch(.396 .141 25.723) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-900\/50 {
      background-color: color-mix(in oklab, var(--color-red-900) 50%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-slate-50 {
    background-color: var(--color-slate-50);
  }

  .bg-slate-50\/50 {
    background-color: color-mix(in srgb, oklch(.984 .003 247.858) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-50\/50 {
      background-color: color-mix(in oklab, var(--color-slate-50) 50%, transparent);
    }
  }

  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }

  .bg-slate-100\/80 {
    background-color: color-mix(in srgb, oklch(.968 .007 247.896) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-100\/80 {
      background-color: color-mix(in oklab, var(--color-slate-100) 80%, transparent);
    }
  }

  .bg-slate-200 {
    background-color: var(--color-slate-200);
  }

  .bg-slate-300 {
    background-color: var(--color-slate-300);
  }

  .bg-slate-400 {
    background-color: var(--color-slate-400);
  }

  .bg-slate-500\/20 {
    background-color: color-mix(in srgb, oklch(.554 .046 257.417) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-500\/20 {
      background-color: color-mix(in oklab, var(--color-slate-500) 20%, transparent);
    }
  }

  .bg-slate-600 {
    background-color: var(--color-slate-600);
  }

  .bg-slate-700 {
    background-color: var(--color-slate-700);
  }

  .bg-slate-700\/50 {
    background-color: color-mix(in srgb, oklch(.372 .044 257.287) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-700\/50 {
      background-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
    }
  }

  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }

  .bg-slate-800\/40 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/40 {
      background-color: color-mix(in oklab, var(--color-slate-800) 40%, transparent);
    }
  }

  .bg-slate-800\/50 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/50 {
      background-color: color-mix(in oklab, var(--color-slate-800) 50%, transparent);
    }
  }

  .bg-slate-800\/60 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/60 {
      background-color: color-mix(in oklab, var(--color-slate-800) 60%, transparent);
    }
  }

  .bg-slate-800\/80 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/80 {
      background-color: color-mix(in oklab, var(--color-slate-800) 80%, transparent);
    }
  }

  .bg-slate-800\/90 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/90 {
      background-color: color-mix(in oklab, var(--color-slate-800) 90%, transparent);
    }
  }

  .bg-slate-800\/95 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 95%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/95 {
      background-color: color-mix(in oklab, var(--color-slate-800) 95%, transparent);
    }
  }

  .bg-slate-900\/50 {
    background-color: color-mix(in srgb, oklch(.208 .042 265.755) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/50 {
      background-color: color-mix(in oklab, var(--color-slate-900) 50%, transparent);
    }
  }

  .bg-slate-900\/90 {
    background-color: color-mix(in srgb, oklch(.208 .042 265.755) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/90 {
      background-color: color-mix(in oklab, var(--color-slate-900) 90%, transparent);
    }
  }

  .bg-teal-50 {
    background-color: var(--color-teal-50);
  }

  .bg-teal-300 {
    background-color: var(--color-teal-300);
  }

  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }

  .bg-teal-800\/50 {
    background-color: color-mix(in srgb, oklch(.437 .078 188.216) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-800\/50 {
      background-color: color-mix(in oklab, var(--color-teal-800) 50%, transparent);
    }
  }

  .bg-teal-800\/80 {
    background-color: color-mix(in srgb, oklch(.437 .078 188.216) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-800\/80 {
      background-color: color-mix(in oklab, var(--color-teal-800) 80%, transparent);
    }
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-violet-50 {
    background-color: var(--color-violet-50);
  }

  .bg-violet-100 {
    background-color: var(--color-violet-100);
  }

  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }

  .bg-violet-900\/30 {
    background-color: color-mix(in srgb, oklch(.38 .189 293.745) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-900\/30 {
      background-color: color-mix(in oklab, var(--color-violet-900) 30%, transparent);
    }
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-white\/5 {
    background-color: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .bg-white\/10 {
    background-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .bg-white\/15 {
    background-color: #ffffff26;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/15 {
      background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }

  .bg-white\/20 {
    background-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/20 {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .bg-white\/30 {
    background-color: #ffffff4d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/30 {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }

  .bg-white\/40 {
    background-color: #fff6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/40 {
      background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }

  .bg-white\/50 {
    background-color: #ffffff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/50 {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }

  .bg-white\/60 {
    background-color: #fff9;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/60 {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }

  .bg-white\/70 {
    background-color: #ffffffb3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/70 {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .bg-white\/80 {
    background-color: #fffc;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/80 {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }

  .bg-white\/90 {
    background-color: #ffffffe6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/90 {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  .bg-white\/95 {
    background-color: #fffffff2;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/95 {
      background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
  }

  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }

  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }

  .bg-yellow-100\/80 {
    background-color: color-mix(in srgb, oklch(.973 .071 103.193) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-100\/80 {
      background-color: color-mix(in oklab, var(--color-yellow-100) 80%, transparent);
    }
  }

  .bg-yellow-300 {
    background-color: var(--color-yellow-300);
  }

  .bg-yellow-400 {
    background-color: var(--color-yellow-400);
  }

  .bg-yellow-400\/20 {
    background-color: color-mix(in srgb, oklch(.852 .199 91.936) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-400\/20 {
      background-color: color-mix(in oklab, var(--color-yellow-400) 20%, transparent);
    }
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-yellow-500\/20 {
    background-color: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-500\/20 {
      background-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .bg-yellow-600 {
    background-color: var(--color-yellow-600);
  }

  .bg-yellow-800\/20 {
    background-color: color-mix(in srgb, oklch(.476 .114 61.907) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-800\/20 {
      background-color: color-mix(in oklab, var(--color-yellow-800) 20%, transparent);
    }
  }

  .bg-yellow-800\/30 {
    background-color: color-mix(in srgb, oklch(.476 .114 61.907) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-800\/30 {
      background-color: color-mix(in oklab, var(--color-yellow-800) 30%, transparent);
    }
  }

  .bg-yellow-900\/30 {
    background-color: color-mix(in srgb, oklch(.421 .095 57.708) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-900\/30 {
      background-color: color-mix(in oklab, var(--color-yellow-900) 30%, transparent);
    }
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-bl {
    --tw-gradient-position: to bottom left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-amber-50 {
    --tw-gradient-from: var(--color-amber-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-50\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.987 .022 95.277) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-50\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-50) 95%, transparent);
    }
  }

  .from-amber-100\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .059 95.617) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-100\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-100) 30%, transparent);
    }
  }

  .from-amber-100\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .059 95.617) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-100\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-100) 80%, transparent);
    }
  }

  .from-amber-100\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .059 95.617) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-100\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-100) 90%, transparent);
    }
  }

  .from-amber-100\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .059 95.617) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-100\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-100) 95%, transparent);
    }
  }

  .from-amber-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.924 .12 95.746) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-200) 30%, transparent);
    }
  }

  .from-amber-200\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.924 .12 95.746) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-200\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-200) 80%, transparent);
    }
  }

  .from-amber-300 {
    --tw-gradient-from: var(--color-amber-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-400 {
    --tw-gradient-from: var(--color-amber-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-500 {
    --tw-gradient-from: var(--color-amber-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-600 {
    --tw-gradient-from: var(--color-amber-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-900\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.414 .112 45.904) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-amber-900\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-900) 20%, transparent);
    }
  }

  .from-black\/20 {
    --tw-gradient-from: #0003;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-black\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .from-blue-50 {
    --tw-gradient-from: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-50\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.97 .014 254.604) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-50\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-50) 95%, transparent);
    }
  }

  .from-blue-100 {
    --tw-gradient-from: var(--color-blue-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-100\/0 {
    --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 0%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-100\/0 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 0%, transparent);
    }
  }

  .from-blue-100\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-100\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 50%, transparent);
    }
  }

  .from-blue-100\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-100\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 60%, transparent);
    }
  }

  .from-blue-100\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-100\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 80%, transparent);
    }
  }

  .from-blue-100\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-100\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 95%, transparent);
    }
  }

  .from-blue-200 {
    --tw-gradient-from: var(--color-blue-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.882 .059 254.128) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-200) 30%, transparent);
    }
  }

  .from-blue-300 {
    --tw-gradient-from: var(--color-blue-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-400 {
    --tw-gradient-from: var(--color-blue-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-400\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.707 .165 254.624) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-400\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-400) 20%, transparent);
    }
  }

  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .from-blue-600 {
    --tw-gradient-from: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-900 {
    --tw-gradient-from: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-50 {
    --tw-gradient-from: var(--color-cyan-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-50\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.984 .019 200.873) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-50\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-50) 30%, transparent);
    }
  }

  .from-cyan-50\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.984 .019 200.873) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-50\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-50) 60%, transparent);
    }
  }

  .from-cyan-100\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.956 .045 203.388) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-100\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-100) 50%, transparent);
    }
  }

  .from-cyan-200 {
    --tw-gradient-from: var(--color-cyan-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.917 .08 205.041) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-200) 30%, transparent);
    }
  }

  .from-cyan-200\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(.917 .08 205.041) 70%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-200\/70 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-200) 70%, transparent);
    }
  }

  .from-cyan-300 {
    --tw-gradient-from: var(--color-cyan-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-300\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.865 .127 207.078) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-300\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-300) 40%, transparent);
    }
  }

  .from-cyan-300\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.865 .127 207.078) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-300\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-300) 90%, transparent);
    }
  }

  .from-cyan-400 {
    --tw-gradient-from: var(--color-cyan-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-400\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.789 .154 211.53) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-400\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-400) 60%, transparent);
    }
  }

  .from-cyan-500 {
    --tw-gradient-from: var(--color-cyan-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.715 .143 215.221) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-500\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 10%, transparent);
    }
  }

  .from-cyan-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
    }
  }

  .from-cyan-500\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.715 .143 215.221) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-500\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 50%, transparent);
    }
  }

  .from-cyan-600 {
    --tw-gradient-from: var(--color-cyan-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-600\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.609 .126 221.723) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-600\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-600) 30%, transparent);
    }
  }

  .from-emerald-50 {
    --tw-gradient-from: var(--color-emerald-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-100 {
    --tw-gradient-from: var(--color-emerald-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.905 .093 164.15) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-emerald-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-200) 30%, transparent);
    }
  }

  .from-emerald-400 {
    --tw-gradient-from: var(--color-emerald-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-500 {
    --tw-gradient-from: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.696 .17 162.48) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-emerald-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    }
  }

  .from-emerald-600 {
    --tw-gradient-from: var(--color-emerald-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-700 {
    --tw-gradient-from: var(--color-emerald-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-fuchsia-600 {
    --tw-gradient-from: var(--color-fuchsia-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-50 {
    --tw-gradient-from: var(--color-gray-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-100 {
    --tw-gradient-from: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-400 {
    --tw-gradient-from: var(--color-gray-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-400\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.707 .022 261.325) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-gray-400\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-400) 40%, transparent);
    }
  }

  .from-gray-500 {
    --tw-gradient-from: var(--color-gray-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.551 .027 264.364) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-gray-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
    }
  }

  .from-gray-600 {
    --tw-gradient-from: var(--color-gray-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-800 {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-900 {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-50 {
    --tw-gradient-from: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-50\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.982 .018 155.826) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-50\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-50) 95%, transparent);
    }
  }

  .from-green-100 {
    --tw-gradient-from: var(--color-green-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-100\/0 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .044 156.743) 0%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-100\/0 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-100) 0%, transparent);
    }
  }

  .from-green-100\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .044 156.743) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-100\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-100) 60%, transparent);
    }
  }

  .from-green-200 {
    --tw-gradient-from: var(--color-green-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.925 .084 155.995) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-200) 30%, transparent);
    }
  }

  .from-green-200\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.925 .084 155.995) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-200\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-200) 80%, transparent);
    }
  }

  .from-green-400 {
    --tw-gradient-from: var(--color-green-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }

  .from-green-600 {
    --tw-gradient-from: var(--color-green-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .194 149.214) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-600\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-600) 20%, transparent);
    }
  }

  .from-green-900 {
    --tw-gradient-from: var(--color-green-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-50 {
    --tw-gradient-from: var(--color-indigo-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-50\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.962 .018 272.314) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-indigo-50\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-50) 90%, transparent);
    }
  }

  .from-indigo-100 {
    --tw-gradient-from: var(--color-indigo-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.87 .065 274.039) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-indigo-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-200) 30%, transparent);
    }
  }

  .from-indigo-400 {
    --tw-gradient-from: var(--color-indigo-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-500 {
    --tw-gradient-from: var(--color-indigo-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.585 .233 277.117) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-indigo-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
    }
  }

  .from-indigo-600 {
    --tw-gradient-from: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-700 {
    --tw-gradient-from: var(--color-indigo-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-800 {
    --tw-gradient-from: var(--color-indigo-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-900 {
    --tw-gradient-from: var(--color-indigo-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-900\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.359 .144 278.697) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-indigo-900\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-900) 50%, transparent);
    }
  }

  .from-lime-500 {
    --tw-gradient-from: var(--color-lime-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-lime-600 {
    --tw-gradient-from: var(--color-lime-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-50 {
    --tw-gradient-from: var(--color-orange-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-100 {
    --tw-gradient-from: var(--color-orange-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-100\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.954 .038 75.164) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-100\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-100) 95%, transparent);
    }
  }

  .from-orange-200 {
    --tw-gradient-from: var(--color-orange-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.901 .076 70.697) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-200) 30%, transparent);
    }
  }

  .from-orange-200\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.901 .076 70.697) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-200\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-200) 40%, transparent);
    }
  }

  .from-orange-300 {
    --tw-gradient-from: var(--color-orange-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-300\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.837 .128 66.29) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-300\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-300) 60%, transparent);
    }
  }

  .from-orange-400 {
    --tw-gradient-from: var(--color-orange-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-400\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.75 .183 55.934) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-400\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-400) 30%, transparent);
    }
  }

  .from-orange-400\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.75 .183 55.934) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-400\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-400) 90%, transparent);
    }
  }

  .from-orange-500 {
    --tw-gradient-from: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .from-orange-600 {
    --tw-gradient-from: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-700 {
    --tw-gradient-from: var(--color-orange-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-900 {
    --tw-gradient-from: var(--color-orange-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-100 {
    --tw-gradient-from: var(--color-pink-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.899 .061 343.231) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-pink-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-pink-200) 30%, transparent);
    }
  }

  .from-pink-400 {
    --tw-gradient-from: var(--color-pink-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-500 {
    --tw-gradient-from: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.656 .241 354.308) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-pink-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
    }
  }

  .from-pink-600 {
    --tw-gradient-from: var(--color-pink-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-700 {
    --tw-gradient-from: var(--color-pink-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-50 {
    --tw-gradient-from: var(--color-purple-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-50\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.977 .014 308.299) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-50\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-50) 95%, transparent);
    }
  }

  .from-purple-100 {
    --tw-gradient-from: var(--color-purple-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-100\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.946 .033 307.174) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-100\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-100) 60%, transparent);
    }
  }

  .from-purple-100\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.946 .033 307.174) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-100\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-100) 80%, transparent);
    }
  }

  .from-purple-100\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.946 .033 307.174) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-100\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-100) 95%, transparent);
    }
  }

  .from-purple-200 {
    --tw-gradient-from: var(--color-purple-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.902 .063 306.703) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-200) 30%, transparent);
    }
  }

  .from-purple-200\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.902 .063 306.703) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-200\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-200) 80%, transparent);
    }
  }

  .from-purple-400 {
    --tw-gradient-from: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .from-purple-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.558 .288 302.321) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-600\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-600) 20%, transparent);
    }
  }

  .from-purple-700 {
    --tw-gradient-from: var(--color-purple-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-900 {
    --tw-gradient-from: var(--color-purple-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-50 {
    --tw-gradient-from: var(--color-red-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-100\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.936 .032 17.717) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-100\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-100) 50%, transparent);
    }
  }

  .from-red-200 {
    --tw-gradient-from: var(--color-red-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.885 .062 18.334) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-200) 30%, transparent);
    }
  }

  .from-red-400 {
    --tw-gradient-from: var(--color-red-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-500 {
    --tw-gradient-from: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .from-red-600 {
    --tw-gradient-from: var(--color-red-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-rose-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.892 .058 10.001) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-rose-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-rose-200) 30%, transparent);
    }
  }

  .from-rose-400 {
    --tw-gradient-from: var(--color-rose-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-rose-500 {
    --tw-gradient-from: var(--color-rose-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-rose-600 {
    --tw-gradient-from: var(--color-rose-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-50 {
    --tw-gradient-from: var(--color-sky-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-600 {
    --tw-gradient-from: var(--color-sky-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-100 {
    --tw-gradient-from: var(--color-slate-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-600 {
    --tw-gradient-from: var(--color-slate-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-700 {
    --tw-gradient-from: var(--color-slate-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-800 {
    --tw-gradient-from: var(--color-slate-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-800\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.279 .041 260.031) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-800\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-800) 50%, transparent);
    }
  }

  .from-slate-800\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.279 .041 260.031) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-800\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-800) 60%, transparent);
    }
  }

  .from-slate-800\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.279 .041 260.031) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-800\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-800) 80%, transparent);
    }
  }

  .from-slate-900 {
    --tw-gradient-from: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-900\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.208 .042 265.755) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-900\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-900) 20%, transparent);
    }
  }

  .from-slate-900\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.208 .042 265.755) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-900\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-900) 80%, transparent);
    }
  }

  .from-slate-900\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.208 .042 265.755) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-900\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-900) 90%, transparent);
    }
  }

  .from-slate-900\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.208 .042 265.755) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-900\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-900) 95%, transparent);
    }
  }

  .from-teal-50 {
    --tw-gradient-from: var(--color-teal-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-teal-400 {
    --tw-gradient-from: var(--color-teal-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-teal-500 {
    --tw-gradient-from: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-teal-600 {
    --tw-gradient-from: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-50 {
    --tw-gradient-from: var(--color-violet-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-100 {
    --tw-gradient-from: var(--color-violet-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.894 .057 293.283) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-200) 30%, transparent);
    }
  }

  .from-violet-400 {
    --tw-gradient-from: var(--color-violet-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-500 {
    --tw-gradient-from: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .from-violet-600 {
    --tw-gradient-from: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-700 {
    --tw-gradient-from: var(--color-violet-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-white\/10 {
    --tw-gradient-from: #ffffff1a;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .from-white\/20 {
    --tw-gradient-from: #fff3;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .from-white\/40 {
    --tw-gradient-from: #fff6;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }

  .from-white\/70 {
    --tw-gradient-from: #ffffffb3;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/70 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .from-yellow-50 {
    --tw-gradient-from: var(--color-yellow-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-200 {
    --tw-gradient-from: var(--color-yellow-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-200\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.945 .129 101.54) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-yellow-200\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-yellow-200) 30%, transparent);
    }
  }

  .from-yellow-400 {
    --tw-gradient-from: var(--color-yellow-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-500 {
    --tw-gradient-from: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-yellow-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .from-yellow-600 {
    --tw-gradient-from: var(--color-yellow-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-amber-50 {
    --tw-gradient-via: var(--color-amber-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-amber-900 {
    --tw-gradient-via: var(--color-amber-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-50 {
    --tw-gradient-via: var(--color-blue-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-50\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.97 .014 254.604) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-blue-50\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-50) 30%, transparent);
    }
  }

  .via-blue-100 {
    --tw-gradient-via: var(--color-blue-100);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-100\/50 {
    --tw-gradient-via: color-mix(in srgb, oklch(.932 .032 255.585) 50%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-blue-100\/50 {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-100) 50%, transparent);
    }
  }

  .via-blue-200\/70 {
    --tw-gradient-via: color-mix(in srgb, oklch(.882 .059 254.128) 70%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-blue-200\/70 {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-200) 70%, transparent);
    }
  }

  .via-blue-200\/80 {
    --tw-gradient-via: color-mix(in srgb, oklch(.882 .059 254.128) 80%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-blue-200\/80 {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-200) 80%, transparent);
    }
  }

  .via-blue-300 {
    --tw-gradient-via: var(--color-blue-300);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-300\/50 {
    --tw-gradient-via: color-mix(in srgb, oklch(.809 .105 251.813) 50%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-blue-300\/50 {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-300) 50%, transparent);
    }
  }

  .via-blue-400 {
    --tw-gradient-via: var(--color-blue-400);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-500 {
    --tw-gradient-via: var(--color-blue-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-600 {
    --tw-gradient-via: var(--color-blue-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-blue-900 {
    --tw-gradient-via: var(--color-blue-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-cyan-50 {
    --tw-gradient-via: var(--color-cyan-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-cyan-100 {
    --tw-gradient-via: var(--color-cyan-100);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-cyan-100\/95 {
    --tw-gradient-via: color-mix(in srgb, oklch(.956 .045 203.388) 95%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-cyan-100\/95 {
      --tw-gradient-via: color-mix(in oklab, var(--color-cyan-100) 95%, transparent);
    }
  }

  .via-cyan-300 {
    --tw-gradient-via: var(--color-cyan-300);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-cyan-400\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.789 .154 211.53) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-cyan-400\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-cyan-400) 30%, transparent);
    }
  }

  .via-cyan-400\/50 {
    --tw-gradient-via: color-mix(in srgb, oklch(.789 .154 211.53) 50%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-cyan-400\/50 {
      --tw-gradient-via: color-mix(in oklab, var(--color-cyan-400) 50%, transparent);
    }
  }

  .via-cyan-600 {
    --tw-gradient-via: var(--color-cyan-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-emerald-50 {
    --tw-gradient-via: var(--color-emerald-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-emerald-900 {
    --tw-gradient-via: var(--color-emerald-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-gray-600 {
    --tw-gradient-via: var(--color-gray-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-gray-700 {
    --tw-gradient-via: var(--color-gray-700);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-gray-800 {
    --tw-gradient-via: var(--color-gray-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-gray-900 {
    --tw-gradient-via: var(--color-gray-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-green-50 {
    --tw-gradient-via: var(--color-green-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-green-500 {
    --tw-gradient-via: var(--color-green-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-green-600 {
    --tw-gradient-via: var(--color-green-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-green-800 {
    --tw-gradient-via: var(--color-green-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-indigo-50 {
    --tw-gradient-via: var(--color-indigo-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-indigo-800\/60 {
    --tw-gradient-via: color-mix(in srgb, oklch(.398 .195 277.366) 60%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-indigo-800\/60 {
      --tw-gradient-via: color-mix(in oklab, var(--color-indigo-800) 60%, transparent);
    }
  }

  .via-indigo-900 {
    --tw-gradient-via: var(--color-indigo-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-orange-50 {
    --tw-gradient-via: var(--color-orange-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-orange-100\/95 {
    --tw-gradient-via: color-mix(in srgb, oklch(.954 .038 75.164) 95%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-orange-100\/95 {
      --tw-gradient-via: color-mix(in oklab, var(--color-orange-100) 95%, transparent);
    }
  }

  .via-orange-400\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.75 .183 55.934) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-orange-400\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-orange-400) 30%, transparent);
    }
  }

  .via-orange-400\/50 {
    --tw-gradient-via: color-mix(in srgb, oklch(.75 .183 55.934) 50%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-orange-400\/50 {
      --tw-gradient-via: color-mix(in oklab, var(--color-orange-400) 50%, transparent);
    }
  }

  .via-orange-400\/60 {
    --tw-gradient-via: color-mix(in srgb, oklch(.75 .183 55.934) 60%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-orange-400\/60 {
      --tw-gradient-via: color-mix(in oklab, var(--color-orange-400) 60%, transparent);
    }
  }

  .via-orange-500 {
    --tw-gradient-via: var(--color-orange-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-orange-600 {
    --tw-gradient-via: var(--color-orange-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-pink-50 {
    --tw-gradient-via: var(--color-pink-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-pink-100\/95 {
    --tw-gradient-via: color-mix(in srgb, oklch(.948 .028 342.258) 95%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-pink-100\/95 {
      --tw-gradient-via: color-mix(in oklab, var(--color-pink-100) 95%, transparent);
    }
  }

  .via-pink-600\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.592 .249 .584) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-pink-600\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-pink-600) 20%, transparent);
    }
  }

  .via-purple-50 {
    --tw-gradient-via: var(--color-purple-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-400\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.714 .203 305.504) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-400\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-400) 30%, transparent);
    }
  }

  .via-purple-500 {
    --tw-gradient-via: var(--color-purple-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-600 {
    --tw-gradient-via: var(--color-purple-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-900 {
    --tw-gradient-via: var(--color-purple-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-900\/50 {
    --tw-gradient-via: color-mix(in srgb, oklch(.381 .176 304.987) 50%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-900\/50 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-900) 50%, transparent);
    }
  }

  .via-red-300\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.808 .114 19.571) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-red-300\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-red-300) 20%, transparent);
    }
  }

  .via-red-400\/40 {
    --tw-gradient-via: color-mix(in srgb, oklch(.704 .191 22.216) 40%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-red-400\/40 {
      --tw-gradient-via: color-mix(in oklab, var(--color-red-400) 40%, transparent);
    }
  }

  .via-red-500 {
    --tw-gradient-via: var(--color-red-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-red-500\/70 {
    --tw-gradient-via: color-mix(in srgb, oklch(.637 .237 25.331) 70%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-red-500\/70 {
      --tw-gradient-via: color-mix(in oklab, var(--color-red-500) 70%, transparent);
    }
  }

  .via-red-600 {
    --tw-gradient-via: var(--color-red-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-red-700 {
    --tw-gradient-via: var(--color-red-700);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-rose-50 {
    --tw-gradient-via: var(--color-rose-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-slate-400\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.704 .04 256.788) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-slate-400\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-slate-400) 20%, transparent);
    }
  }

  .via-slate-500 {
    --tw-gradient-via: var(--color-slate-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-slate-700\/80 {
    --tw-gradient-via: color-mix(in srgb, oklch(.372 .044 257.287) 80%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-slate-700\/80 {
      --tw-gradient-via: color-mix(in oklab, var(--color-slate-700) 80%, transparent);
    }
  }

  .via-slate-800 {
    --tw-gradient-via: var(--color-slate-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-slate-800\/95 {
    --tw-gradient-via: color-mix(in srgb, oklch(.279 .041 260.031) 95%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-slate-800\/95 {
      --tw-gradient-via: color-mix(in oklab, var(--color-slate-800) 95%, transparent);
    }
  }

  .via-slate-900 {
    --tw-gradient-via: var(--color-slate-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-teal-50 {
    --tw-gradient-via: var(--color-teal-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-teal-900 {
    --tw-gradient-via: var(--color-teal-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white\/20 {
    --tw-gradient-via: #fff3;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-white\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .via-white\/40 {
    --tw-gradient-via: #fff6;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-white\/40 {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }

  .via-yellow-50 {
    --tw-gradient-via: var(--color-yellow-50);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-yellow-200 {
    --tw-gradient-via: var(--color-yellow-200);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-yellow-400\/80 {
    --tw-gradient-via: color-mix(in srgb, oklch(.852 .199 91.936) 80%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-yellow-400\/80 {
      --tw-gradient-via: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }

  .to-amber-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.924 .12 95.746) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-amber-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-amber-200) 30%, transparent);
    }
  }

  .to-amber-500 {
    --tw-gradient-to: var(--color-amber-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-amber-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.769 .188 70.08) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-amber-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
    }
  }

  .to-amber-600 {
    --tw-gradient-to: var(--color-amber-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-black {
    --tw-gradient-to: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-black\/10 {
    --tw-gradient-to: #0000001a;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-black\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }

  .to-black\/30 {
    --tw-gradient-to: #0000004d;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-black\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }

  .to-blue-50 {
    --tw-gradient-to: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-50\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.97 .014 254.604) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-50\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 60%, transparent);
    }
  }

  .to-blue-100 {
    --tw-gradient-to: var(--color-blue-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-100\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.932 .032 255.585) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-100\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-100) 50%, transparent);
    }
  }

  .to-blue-200 {
    --tw-gradient-to: var(--color-blue-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.882 .059 254.128) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-200) 30%, transparent);
    }
  }

  .to-blue-300 {
    --tw-gradient-to: var(--color-blue-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-400 {
    --tw-gradient-to: var(--color-blue-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .to-blue-500\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.623 .214 259.815) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-500\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
    }
  }

  .to-blue-600 {
    --tw-gradient-to: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-600\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.546 .245 262.881) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-600\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 30%, transparent);
    }
  }

  .to-blue-700 {
    --tw-gradient-to: var(--color-blue-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-800 {
    --tw-gradient-to: var(--color-blue-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-900 {
    --tw-gradient-to: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-50 {
    --tw-gradient-to: var(--color-cyan-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-50\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.984 .019 200.873) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-50\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-50) 95%, transparent);
    }
  }

  .to-cyan-100 {
    --tw-gradient-to: var(--color-cyan-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-100\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.956 .045 203.388) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-100\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-100) 50%, transparent);
    }
  }

  .to-cyan-100\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.956 .045 203.388) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-100\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-100) 60%, transparent);
    }
  }

  .to-cyan-100\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.956 .045 203.388) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-100\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-100) 80%, transparent);
    }
  }

  .to-cyan-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.917 .08 205.041) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-200) 30%, transparent);
    }
  }

  .to-cyan-400 {
    --tw-gradient-to: var(--color-cyan-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-500 {
    --tw-gradient-to: var(--color-cyan-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
    }
  }

  .to-cyan-600 {
    --tw-gradient-to: var(--color-cyan-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-50 {
    --tw-gradient-to: var(--color-emerald-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-50\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.979 .021 166.113) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-50\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-50) 95%, transparent);
    }
  }

  .to-emerald-100\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.95 .052 163.051) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-100\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-100) 60%, transparent);
    }
  }

  .to-emerald-200\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.905 .093 164.15) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-200\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-200) 80%, transparent);
    }
  }

  .to-emerald-500 {
    --tw-gradient-to: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.696 .17 162.48) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    }
  }

  .to-emerald-600 {
    --tw-gradient-to: var(--color-emerald-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-700\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.508 .118 165.612) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-700\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-700) 20%, transparent);
    }
  }

  .to-emerald-900 {
    --tw-gradient-to: var(--color-emerald-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-fuchsia-50 {
    --tw-gradient-to: var(--color-fuchsia-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-fuchsia-500 {
    --tw-gradient-to: var(--color-fuchsia-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-100 {
    --tw-gradient-to: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-300 {
    --tw-gradient-to: var(--color-gray-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-600 {
    --tw-gradient-to: var(--color-gray-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-800 {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-900 {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-50 {
    --tw-gradient-to: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-100 {
    --tw-gradient-to: var(--color-green-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-100\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.962 .044 156.743) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-green-100\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-green-100) 50%, transparent);
    }
  }

  .to-green-200 {
    --tw-gradient-to: var(--color-green-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-400 {
    --tw-gradient-to: var(--color-green-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-500 {
    --tw-gradient-to: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-600 {
    --tw-gradient-to: var(--color-green-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-700 {
    --tw-gradient-to: var(--color-green-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-800 {
    --tw-gradient-to: var(--color-green-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-50 {
    --tw-gradient-to: var(--color-indigo-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-50\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.962 .018 272.314) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-50\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-50) 30%, transparent);
    }
  }

  .to-indigo-100 {
    --tw-gradient-to: var(--color-indigo-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.87 .065 274.039) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-200) 30%, transparent);
    }
  }

  .to-indigo-500 {
    --tw-gradient-to: var(--color-indigo-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.585 .233 277.117) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
    }
  }

  .to-indigo-600 {
    --tw-gradient-to: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-700 {
    --tw-gradient-to: var(--color-indigo-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-900 {
    --tw-gradient-to: var(--color-indigo-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-900\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(.359 .144 278.697) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-900\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-900) 90%, transparent);
    }
  }

  .to-indigo-900\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.359 .144 278.697) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-900\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-900) 95%, transparent);
    }
  }

  .to-lime-500 {
    --tw-gradient-to: var(--color-lime-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-lime-600 {
    --tw-gradient-to: var(--color-lime-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-50 {
    --tw-gradient-to: var(--color-orange-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-50\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.98 .016 73.684) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-50\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-50) 95%, transparent);
    }
  }

  .to-orange-100\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.954 .038 75.164) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-100\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-100) 30%, transparent);
    }
  }

  .to-orange-100\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.954 .038 75.164) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-100\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-100) 50%, transparent);
    }
  }

  .to-orange-100\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.954 .038 75.164) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-100\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-100) 80%, transparent);
    }
  }

  .to-orange-100\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(.954 .038 75.164) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-100\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-100) 90%, transparent);
    }
  }

  .to-orange-100\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.954 .038 75.164) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-100\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-100) 95%, transparent);
    }
  }

  .to-orange-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.901 .076 70.697) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-200) 30%, transparent);
    }
  }

  .to-orange-400 {
    --tw-gradient-to: var(--color-orange-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500 {
    --tw-gradient-to: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.705 .213 47.604) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
    }
  }

  .to-orange-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .to-orange-600 {
    --tw-gradient-to: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-600\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.646 .222 41.116) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-600\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-600) 20%, transparent);
    }
  }

  .to-orange-700 {
    --tw-gradient-to: var(--color-orange-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-900\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.408 .123 38.172) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-900\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
    }
  }

  .to-pink-50 {
    --tw-gradient-to: var(--color-pink-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-50\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.971 .014 343.198) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-50\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-50) 95%, transparent);
    }
  }

  .to-pink-100 {
    --tw-gradient-to: var(--color-pink-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-100\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.948 .028 342.258) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-100\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-100) 80%, transparent);
    }
  }

  .to-pink-100\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.948 .028 342.258) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-100\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-100) 95%, transparent);
    }
  }

  .to-pink-200 {
    --tw-gradient-to: var(--color-pink-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.899 .061 343.231) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-200) 30%, transparent);
    }
  }

  .to-pink-400 {
    --tw-gradient-to: var(--color-pink-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-500 {
    --tw-gradient-to: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
    }
  }

  .to-pink-600 {
    --tw-gradient-to: var(--color-pink-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-900 {
    --tw-gradient-to: var(--color-pink-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-50 {
    --tw-gradient-to: var(--color-purple-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-50\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(.977 .014 308.299) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-50\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-50) 90%, transparent);
    }
  }

  .to-purple-100 {
    --tw-gradient-to: var(--color-purple-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-100\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.946 .033 307.174) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-100\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-100) 60%, transparent);
    }
  }

  .to-purple-200 {
    --tw-gradient-to: var(--color-purple-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.902 .063 306.703) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-200) 30%, transparent);
    }
  }

  .to-purple-300 {
    --tw-gradient-to: var(--color-purple-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-400 {
    --tw-gradient-to: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-400\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.714 .203 305.504) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-400\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-400) 20%, transparent);
    }
  }

  .to-purple-500 {
    --tw-gradient-to: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-700 {
    --tw-gradient-to: var(--color-purple-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-800 {
    --tw-gradient-to: var(--color-purple-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-900 {
    --tw-gradient-to: var(--color-purple-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-900\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.381 .176 304.987) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-900\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-900) 50%, transparent);
    }
  }

  .to-red-50 {
    --tw-gradient-to: var(--color-red-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-100 {
    --tw-gradient-to: var(--color-red-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-100\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.936 .032 17.717) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-red-100\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-red-100) 95%, transparent);
    }
  }

  .to-red-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.885 .062 18.334) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-red-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-red-200) 30%, transparent);
    }
  }

  .to-red-400 {
    --tw-gradient-to: var(--color-red-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-500 {
    --tw-gradient-to: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-red-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .to-red-600 {
    --tw-gradient-to: var(--color-red-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-700 {
    --tw-gradient-to: var(--color-red-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-900 {
    --tw-gradient-to: var(--color-red-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-rose-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.892 .058 10.001) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-rose-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-200) 30%, transparent);
    }
  }

  .to-rose-500 {
    --tw-gradient-to: var(--color-rose-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-rose-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.645 .246 16.439) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-rose-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-500) 20%, transparent);
    }
  }

  .to-rose-600 {
    --tw-gradient-to: var(--color-rose-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-sky-500 {
    --tw-gradient-to: var(--color-sky-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-200 {
    --tw-gradient-to: var(--color-slate-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-500 {
    --tw-gradient-to: var(--color-slate-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.554 .046 257.417) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-500) 20%, transparent);
    }
  }

  .to-slate-600 {
    --tw-gradient-to: var(--color-slate-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-700\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.372 .044 257.287) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-700\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-700) 80%, transparent);
    }
  }

  .to-slate-800 {
    --tw-gradient-to: var(--color-slate-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-800\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.279 .041 260.031) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-800\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-800) 20%, transparent);
    }
  }

  .to-slate-800\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.279 .041 260.031) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-800\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-800) 80%, transparent);
    }
  }

  .to-slate-800\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.279 .041 260.031) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-800\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-800) 95%, transparent);
    }
  }

  .to-slate-900 {
    --tw-gradient-to: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-900\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.208 .042 265.755) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-900\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-900) 50%, transparent);
    }
  }

  .to-slate-900\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.208 .042 265.755) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-slate-900\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-slate-900) 60%, transparent);
    }
  }

  .to-teal-50 {
    --tw-gradient-to: var(--color-teal-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-100\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(.953 .051 180.801) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-100\/95 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-100) 95%, transparent);
    }
  }

  .to-teal-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.91 .096 180.426) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-200) 30%, transparent);
    }
  }

  .to-teal-500 {
    --tw-gradient-to: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
    }
  }

  .to-teal-600 {
    --tw-gradient-to: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-700 {
    --tw-gradient-to: var(--color-teal-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-900 {
    --tw-gradient-to: var(--color-teal-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-100\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.943 .029 294.588) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-violet-100\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-violet-100) 60%, transparent);
    }
  }

  .to-violet-200\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.894 .057 293.283) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-violet-200\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-violet-200) 30%, transparent);
    }
  }

  .to-violet-200\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.894 .057 293.283) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-violet-200\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-violet-200) 80%, transparent);
    }
  }

  .to-violet-500 {
    --tw-gradient-to: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-violet-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .to-violet-600 {
    --tw-gradient-to: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-white\/5 {
    --tw-gradient-to: #ffffff0d;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-white\/5 {
      --tw-gradient-to: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .to-yellow-50 {
    --tw-gradient-to: var(--color-yellow-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-200\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.945 .129 101.54) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-yellow-200\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-200) 80%, transparent);
    }
  }

  .to-yellow-400 {
    --tw-gradient-to: var(--color-yellow-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-400\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.852 .199 91.936) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-yellow-400\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-400) 30%, transparent);
    }
  }

  .to-yellow-500 {
    --tw-gradient-to: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-yellow-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .to-yellow-600 {
    --tw-gradient-to: var(--color-yellow-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-700 {
    --tw-gradient-to: var(--color-yellow-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-900 {
    --tw-gradient-to: var(--color-yellow-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    background-clip: text;
  }

  .fill-amber-600 {
    fill: var(--color-amber-600);
  }

  .fill-amber-700 {
    fill: var(--color-amber-700);
  }

  .fill-blue-300 {
    fill: var(--color-blue-300);
  }

  .fill-blue-700 {
    fill: var(--color-blue-700);
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-gray-600 {
    fill: var(--color-gray-600);
  }

  .fill-gray-700 {
    fill: var(--color-gray-700);
  }

  .fill-gray-800 {
    fill: var(--color-gray-800);
  }

  .fill-green-300 {
    fill: var(--color-green-300);
  }

  .fill-green-600 {
    fill: var(--color-green-600);
  }

  .fill-green-700 {
    fill: var(--color-green-700);
  }

  .fill-indigo-600 {
    fill: var(--color-indigo-600);
  }

  .fill-indigo-700 {
    fill: var(--color-indigo-700);
  }

  .fill-primary {
    fill: var(--primary);
  }

  .fill-purple-600 {
    fill: var(--color-purple-600);
  }

  .fill-purple-700 {
    fill: var(--color-purple-700);
  }

  .fill-red-300 {
    fill: var(--color-red-300);
  }

  .fill-red-500 {
    fill: var(--color-red-500);
  }

  .fill-red-600 {
    fill: var(--color-red-600);
  }

  .fill-red-700 {
    fill: var(--color-red-700);
  }

  .fill-slate-300 {
    fill: var(--color-slate-300);
  }

  .fill-slate-400 {
    fill: var(--color-slate-400);
  }

  .fill-slate-700 {
    fill: var(--color-slate-700);
  }

  .fill-teal-700 {
    fill: var(--color-teal-700);
  }

  .fill-white {
    fill: var(--color-white);
  }

  .fill-yellow-300 {
    fill: var(--color-yellow-300);
  }

  .fill-yellow-400 {
    fill: var(--color-yellow-400);
  }

  .fill-yellow-700 {
    fill: var(--color-yellow-700);
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-\[3px\] {
    padding: 3px;
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }

  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }

  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }

  .pt-32 {
    padding-top: calc(var(--spacing) * 32);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }

  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }

  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .text-right {
    text-align: right;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-8xl {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }

  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }

  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }

  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }

  .text-balance {
    text-wrap: balance;
  }

  .whitespace-normal {
    white-space: normal;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-\[rgba\(17\,181\,241\,1\)\] {
    color: #11b5f1;
  }

  .text-amber-100 {
    color: var(--color-amber-100);
  }

  .text-amber-200 {
    color: var(--color-amber-200);
  }

  .text-amber-300 {
    color: var(--color-amber-300);
  }

  .text-amber-400 {
    color: var(--color-amber-400);
  }

  .text-amber-500 {
    color: var(--color-amber-500);
  }

  .text-amber-600 {
    color: var(--color-amber-600);
  }

  .text-amber-700 {
    color: var(--color-amber-700);
  }

  .text-amber-800 {
    color: var(--color-amber-800);
  }

  .text-amber-900 {
    color: var(--color-amber-900);
  }

  .text-black {
    color: var(--color-black);
  }

  .text-blue-100 {
    color: var(--color-blue-100);
  }

  .text-blue-200 {
    color: var(--color-blue-200);
  }

  .text-blue-300 {
    color: var(--color-blue-300);
  }

  .text-blue-400 {
    color: var(--color-blue-400);
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-blue-600 {
    color: var(--color-blue-600);
  }

  .text-blue-700 {
    color: var(--color-blue-700);
  }

  .text-blue-800 {
    color: var(--color-blue-800);
  }

  .text-blue-900 {
    color: var(--color-blue-900);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-current {
    color: currentColor;
  }

  .text-cyan-200 {
    color: var(--color-cyan-200);
  }

  .text-cyan-300 {
    color: var(--color-cyan-300);
  }

  .text-cyan-400 {
    color: var(--color-cyan-400);
  }

  .text-cyan-700 {
    color: var(--color-cyan-700);
  }

  .text-cyan-800 {
    color: var(--color-cyan-800);
  }

  .text-destructive {
    color: var(--destructive);
  }

  .text-emerald-200 {
    color: var(--color-emerald-200);
  }

  .text-emerald-300 {
    color: var(--color-emerald-300);
  }

  .text-emerald-600 {
    color: var(--color-emerald-600);
  }

  .text-emerald-700 {
    color: var(--color-emerald-700);
  }

  .text-emerald-800 {
    color: var(--color-emerald-800);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-gray-200 {
    color: var(--color-gray-200);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-100 {
    color: var(--color-green-100);
  }

  .text-green-200 {
    color: var(--color-green-200);
  }

  .text-green-300 {
    color: var(--color-green-300);
  }

  .text-green-300\/10 {
    color: color-mix(in srgb, oklch(.871 .15 154.449) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-green-300\/10 {
      color: color-mix(in oklab, var(--color-green-300) 10%, transparent);
    }
  }

  .text-green-300\/20 {
    color: color-mix(in srgb, oklch(.871 .15 154.449) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-green-300\/20 {
      color: color-mix(in oklab, var(--color-green-300) 20%, transparent);
    }
  }

  .text-green-400 {
    color: var(--color-green-400);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-700 {
    color: var(--color-green-700);
  }

  .text-green-800 {
    color: var(--color-green-800);
  }

  .text-green-900 {
    color: var(--color-green-900);
  }

  .text-indigo-100 {
    color: var(--color-indigo-100);
  }

  .text-indigo-200 {
    color: var(--color-indigo-200);
  }

  .text-indigo-300 {
    color: var(--color-indigo-300);
  }

  .text-indigo-600 {
    color: var(--color-indigo-600);
  }

  .text-indigo-700 {
    color: var(--color-indigo-700);
  }

  .text-indigo-800 {
    color: var(--color-indigo-800);
  }

  .text-indigo-900 {
    color: var(--color-indigo-900);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-orange-100 {
    color: var(--color-orange-100);
  }

  .text-orange-200 {
    color: var(--color-orange-200);
  }

  .text-orange-300 {
    color: var(--color-orange-300);
  }

  .text-orange-400 {
    color: var(--color-orange-400);
  }

  .text-orange-500 {
    color: var(--color-orange-500);
  }

  .text-orange-600 {
    color: var(--color-orange-600);
  }

  .text-orange-700 {
    color: var(--color-orange-700);
  }

  .text-orange-800 {
    color: var(--color-orange-800);
  }

  .text-orange-900 {
    color: var(--color-orange-900);
  }

  .text-pink-200 {
    color: var(--color-pink-200);
  }

  .text-pink-300 {
    color: var(--color-pink-300);
  }

  .text-pink-600 {
    color: var(--color-pink-600);
  }

  .text-pink-700 {
    color: var(--color-pink-700);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-purple-100 {
    color: var(--color-purple-100);
  }

  .text-purple-200 {
    color: var(--color-purple-200);
  }

  .text-purple-300 {
    color: var(--color-purple-300);
  }

  .text-purple-400 {
    color: var(--color-purple-400);
  }

  .text-purple-400\/40 {
    color: color-mix(in srgb, oklch(.714 .203 305.504) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-400\/40 {
      color: color-mix(in oklab, var(--color-purple-400) 40%, transparent);
    }
  }

  .text-purple-500 {
    color: var(--color-purple-500);
  }

  .text-purple-600 {
    color: var(--color-purple-600);
  }

  .text-purple-700 {
    color: var(--color-purple-700);
  }

  .text-purple-800 {
    color: var(--color-purple-800);
  }

  .text-purple-900 {
    color: var(--color-purple-900);
  }

  .text-red-100 {
    color: var(--color-red-100);
  }

  .text-red-200 {
    color: var(--color-red-200);
  }

  .text-red-300 {
    color: var(--color-red-300);
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-700 {
    color: var(--color-red-700);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-red-900 {
    color: var(--color-red-900);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-slate-200 {
    color: var(--color-slate-200);
  }

  .text-slate-300 {
    color: var(--color-slate-300);
  }

  .text-slate-400 {
    color: var(--color-slate-400);
  }

  .text-slate-500 {
    color: var(--color-slate-500);
  }

  .text-slate-600 {
    color: var(--color-slate-600);
  }

  .text-slate-700 {
    color: var(--color-slate-700);
  }

  .text-slate-800 {
    color: var(--color-slate-800);
  }

  .text-teal-200 {
    color: var(--color-teal-200);
  }

  .text-teal-500 {
    color: var(--color-teal-500);
  }

  .text-teal-700 {
    color: var(--color-teal-700);
  }

  .text-teal-800 {
    color: var(--color-teal-800);
  }

  .text-teal-900 {
    color: var(--color-teal-900);
  }

  .text-transparent {
    color: #0000;
  }

  .text-violet-200 {
    color: var(--color-violet-200);
  }

  .text-violet-300 {
    color: var(--color-violet-300);
  }

  .text-violet-600 {
    color: var(--color-violet-600);
  }

  .text-violet-700 {
    color: var(--color-violet-700);
  }

  .text-violet-800 {
    color: var(--color-violet-800);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-white\/5 {
    color: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/5 {
      color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .text-white\/10 {
    color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/10 {
      color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .text-white\/20 {
    color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/20 {
      color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .text-white\/50 {
    color: #ffffff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/50 {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }

  .text-white\/70 {
    color: #ffffffb3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/70 {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .text-white\/80 {
    color: #fffc;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/80 {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }

  .text-white\/90 {
    color: #ffffffe6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/90 {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  .text-yellow-100 {
    color: var(--color-yellow-100);
  }

  .text-yellow-200 {
    color: var(--color-yellow-200);
  }

  .text-yellow-300 {
    color: var(--color-yellow-300);
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .text-yellow-500 {
    color: var(--color-yellow-500);
  }

  .text-yellow-600 {
    color: var(--color-yellow-600);
  }

  .text-yellow-700 {
    color: var(--color-yellow-700);
  }

  .text-yellow-800 {
    color: var(--color-yellow-800);
  }

  .text-yellow-900 {
    color: var(--color-yellow-900);
  }

  .capitalize {
    text-transform: capitalize;
  }

  .lowercase {
    text-transform: lowercase;
  }

  .uppercase {
    text-transform: uppercase;
  }

  .italic {
    font-style: italic;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .placeholder-white\/50::placeholder {
    color: #ffffff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .placeholder-white\/50::placeholder {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-10 {
    opacity: .1;
  }

  .opacity-15 {
    opacity: .15;
  }

  .opacity-20 {
    opacity: .2;
  }

  .opacity-30 {
    opacity: .3;
  }

  .opacity-40 {
    opacity: .4;
  }

  .opacity-45 {
    opacity: .45;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-60 {
    opacity: .6;
  }

  .opacity-70 {
    opacity: .7;
  }

  .opacity-75 {
    opacity: .75;
  }

  .opacity-80 {
    opacity: .8;
  }

  .opacity-90 {
    opacity: .9;
  }

  .opacity-100 {
    opacity: 1;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-blue-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.707 .165 254.624) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-blue-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-blue-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.623 .214 259.815) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-blue-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-cyan-400\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(.789 .154 211.53) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-cyan-400\/20 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-cyan-400) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-cyan-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.789 .154 211.53) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-cyan-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-cyan-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-cyan-500\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-cyan-500\/20 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-cyan-500) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-cyan-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.715 .143 215.221) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-cyan-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-cyan-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-gray-500\/30 {
    --tw-shadow-color: color-mix(in srgb, oklch(.551 .027 264.364) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-gray-500\/30 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-500) 30%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-green-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.792 .209 151.711) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-green-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-green-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-green-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.723 .219 149.579) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-green-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-green-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-indigo-200 {
    --tw-shadow-color: oklch(.87 .065 274.039);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-indigo-200 {
      --tw-shadow-color: color-mix(in oklab, var(--color-indigo-200) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-orange-500\/30 {
    --tw-shadow-color: color-mix(in srgb, oklch(.705 .213 47.604) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-orange-500\/30 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-orange-500) 30%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-orange-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.705 .213 47.604) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-orange-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-orange-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-purple-500\/25 {
    --tw-shadow-color: color-mix(in srgb, oklch(.627 .265 303.9) 25%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-purple-500\/25 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-500) 25%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-purple-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.627 .265 303.9) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-purple-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-purple-600\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.558 .288 302.321) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-purple-600\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-600) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-red-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.704 .191 22.216) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-red-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-red-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .ring-blue-400 {
    --tw-ring-color: var(--color-blue-400);
  }

  .ring-cyan-400 {
    --tw-ring-color: var(--color-cyan-400);
  }

  .ring-green-400 {
    --tw-ring-color: var(--color-green-400);
  }

  .ring-indigo-200 {
    --tw-ring-color: var(--color-indigo-200);
  }

  .ring-orange-400 {
    --tw-ring-color: var(--color-orange-400);
  }

  .ring-ring\/50 {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-ring\/50 {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .ring-yellow-400 {
    --tw-ring-color: var(--color-yellow-400);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-2xl {
    --tw-blur: blur(var(--blur-2xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-lg {
    --tw-blur: blur(var(--blur-lg));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-md {
    --tw-blur: blur(var(--blur-md));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .brightness-70 {
    --tw-brightness: brightness(70%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .brightness-90 {
    --tw-brightness: brightness(90%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .brightness-110 {
    --tw-brightness: brightness(110%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .brightness-125 {
    --tw-brightness: brightness(125%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow {
    --tw-drop-shadow-size: drop-shadow(0 1px 2px var(--tw-drop-shadow-color, #0000001a)) drop-shadow(0 1px 1px var(--tw-drop-shadow-color, #0000000f));
    --tw-drop-shadow: drop-shadow(0 1px 2px #0000001a) drop-shadow(0 1px 1px #0000000f);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-lg {
    --tw-drop-shadow-size: drop-shadow(0 4px 4px var(--tw-drop-shadow-color, #00000026));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-md {
    --tw-drop-shadow-size: drop-shadow(0 3px 3px var(--tw-drop-shadow-color, #0000001f));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-md));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-sm {
    --tw-drop-shadow-size: drop-shadow(0 1px 2px var(--tw-drop-shadow-color, #00000026));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-sm));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .delay-300 {
    transition-delay: .3s;
  }

  .delay-500 {
    transition-delay: .5s;
  }

  .delay-700 {
    transition-delay: .7s;
  }

  .delay-1000 {
    transition-delay: 1s;
  }

  .delay-1500 {
    transition-delay: 1.5s;
  }

  .delay-2000 {
    transition-delay: 2s;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .duration-600 {
    --tw-duration: .6s;
    transition-duration: .6s;
  }

  .duration-700 {
    --tw-duration: .7s;
    transition-duration: .7s;
  }

  .duration-800 {
    --tw-duration: .8s;
    transition-duration: .8s;
  }

  .duration-1000 {
    --tw-duration: 1s;
    transition-duration: 1s;
  }

  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }

  .delay-300 {
    animation-delay: .3s;
  }

  .delay-500 {
    animation-delay: .5s;
  }

  .delay-700 {
    animation-delay: .7s;
  }

  .delay-1000 {
    animation-delay: 1s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .delay-1500 {
    animation-delay: 1.5s;
  }

  .delay-2000 {
    animation-delay: 2s;
  }

  .fade-in, .fade-in-0 {
    --tw-enter-opacity: 0;
  }

  .paused {
    animation-play-state: paused;
  }

  .zoom-in-95 {
    --tw-enter-scale: .95;
  }

  @media (hover: hover) {
    .group-hover\:translate-x-2:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-105:is(:where(.group):hover *) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-110:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:animate-bounce:is(:where(.group):hover *) {
      animation: var(--animate-bounce);
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-slate-600:is(:where(.group):hover *) {
      background-color: var(--color-slate-600);
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-gradient-to-br:is(:where(.group):hover *) {
      --tw-gradient-position: to bottom right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }

  @media (hover: hover) {
    .group-hover\:from-blue-100\/30:is(:where(.group):hover *) {
      --tw-gradient-from: color-mix(in srgb, oklch(.932 .032 255.585) 30%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:from-blue-100\/30:is(:where(.group):hover *) {
        --tw-gradient-from: color-mix(in oklab, var(--color-blue-100) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:from-green-100\/30:is(:where(.group):hover *) {
      --tw-gradient-from: color-mix(in srgb, oklch(.962 .044 156.743) 30%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:from-green-100\/30:is(:where(.group):hover *) {
        --tw-gradient-from: color-mix(in oklab, var(--color-green-100) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:from-white:is(:where(.group):hover *) {
      --tw-gradient-from: var(--color-white);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .group-hover\:to-blue-100\/80:is(:where(.group):hover *) {
      --tw-gradient-to: color-mix(in srgb, oklch(.932 .032 255.585) 80%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:to-blue-100\/80:is(:where(.group):hover *) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-100) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:to-gray-50:is(:where(.group):hover *) {
      --tw-gradient-to: var(--color-gray-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .group-hover\:to-green-100\/80:is(:where(.group):hover *) {
      --tw-gradient-to: color-mix(in srgb, oklch(.962 .044 156.743) 80%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:to-green-100\/80:is(:where(.group):hover *) {
        --tw-gradient-to: color-mix(in oklab, var(--color-green-100) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-cyan-200:is(:where(.group):hover *) {
      color: var(--color-cyan-200);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-gray-100:is(:where(.group):hover *) {
      color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-gray-500:is(:where(.group):hover *) {
      color: var(--color-gray-500);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-gray-800:is(:where(.group):hover *) {
      color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-white\/80:is(:where(.group):hover *) {
      color: #fffc;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:text-white\/80:is(:where(.group):hover *) {
        color: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-yellow-200:is(:where(.group):hover *) {
      color: var(--color-yellow-200);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-20:is(:where(.group):hover *) {
      opacity: .2;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-30:is(:where(.group):hover *) {
      opacity: .3;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-2xl:is(:where(.group):hover *) {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-lg:is(:where(.group):hover *) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-xl:is(:where(.group):hover *) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
    background-color: var(--primary);
  }

  .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
    color: var(--primary-foreground);
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  @media (hover: hover) {
    .hover\:-translate-y-1:hover {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-102:hover {
      --tw-scale-x: 102%;
      --tw-scale-y: 102%;
      --tw-scale-z: 102%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-110:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-125:hover {
      --tw-scale-x: 125%;
      --tw-scale-y: 125%;
      --tw-scale-z: 125%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-\[1\.02\]:hover {
      scale: 1.02;
    }
  }

  @media (hover: hover) {
    .hover\:rotate-1:hover {
      rotate: 1deg;
    }
  }

  @media (hover: hover) {
    .hover\:border-blue-300:hover {
      border-color: var(--color-blue-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-blue-400:hover {
      border-color: var(--color-blue-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-blue-400\/60:hover {
      border-color: color-mix(in srgb, oklch(.707 .165 254.624) 60%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-blue-400\/60:hover {
        border-color: color-mix(in oklab, var(--color-blue-400) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-cyan-400:hover {
      border-color: var(--color-cyan-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-emerald-400:hover {
      border-color: var(--color-emerald-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-gray-300:hover {
      border-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-green-400:hover {
      border-color: var(--color-green-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-indigo-300:hover {
      border-color: var(--color-indigo-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-indigo-300\/50:hover {
      border-color: color-mix(in srgb, oklch(.785 .115 274.713) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-indigo-300\/50:hover {
        border-color: color-mix(in oklab, var(--color-indigo-300) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-indigo-400:hover {
      border-color: var(--color-indigo-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-orange-300:hover {
      border-color: var(--color-orange-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-orange-400:hover {
      border-color: var(--color-orange-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-purple-300:hover {
      border-color: var(--color-purple-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-purple-400:hover {
      border-color: var(--color-purple-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-purple-400\/60:hover {
      border-color: color-mix(in srgb, oklch(.714 .203 305.504) 60%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-purple-400\/60:hover {
        border-color: color-mix(in oklab, var(--color-purple-400) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-red-400:hover {
      border-color: var(--color-red-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-red-500:hover {
      border-color: var(--color-red-500);
    }
  }

  @media (hover: hover) {
    .hover\:border-slate-500:hover {
      border-color: var(--color-slate-500);
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-300:hover {
      border-color: var(--color-violet-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-white\/40:hover {
      border-color: #fff6;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-white\/40:hover {
        border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-white\/50:hover {
      border-color: #ffffff80;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-white\/50:hover {
        border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-amber-200\/50:hover {
      background-color: color-mix(in srgb, oklch(.924 .12 95.746) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-amber-200\/50:hover {
        background-color: color-mix(in oklab, var(--color-amber-200) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-amber-200\/80:hover {
      background-color: color-mix(in srgb, oklch(.924 .12 95.746) 80%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-amber-200\/80:hover {
        background-color: color-mix(in oklab, var(--color-amber-200) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-50:hover {
      background-color: var(--color-blue-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-100:hover {
      background-color: var(--color-blue-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-200:hover {
      background-color: var(--color-blue-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.623 .214 259.815) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-blue-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-600:hover {
      background-color: var(--color-blue-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-current\/20:hover {
      background-color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-current\/20:hover {
        background-color: color-mix(in oklab, currentcolor 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-cyan-50:hover {
      background-color: var(--color-cyan-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-cyan-500\/20:hover {
      background-color: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-cyan-500\/20:hover {
        background-color: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-cyan-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.715 .143 215.221) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-cyan-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-cyan-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-cyan-600:hover {
      background-color: var(--color-cyan-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-emerald-50:hover {
      background-color: var(--color-emerald-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-300:hover {
      background-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-400:hover {
      background-color: var(--color-gray-400);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-700:hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-700\/50:hover {
      background-color: color-mix(in srgb, oklch(.373 .034 259.733) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-gray-700\/50:hover {
        background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-50:hover {
      background-color: var(--color-green-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-100:hover {
      background-color: var(--color-green-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.723 .219 149.579) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-green-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-green-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-600:hover {
      background-color: var(--color-green-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-700:hover {
      background-color: var(--color-green-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-700\/50:hover {
      background-color: color-mix(in srgb, oklch(.527 .154 150.069) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-green-700\/50:hover {
        background-color: color-mix(in oklab, var(--color-green-700) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-indigo-50:hover {
      background-color: var(--color-indigo-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-indigo-400\/30:hover {
      background-color: color-mix(in srgb, oklch(.673 .182 276.935) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-indigo-400\/30:hover {
        background-color: color-mix(in oklab, var(--color-indigo-400) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-indigo-700:hover {
      background-color: var(--color-indigo-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-50:hover {
      background-color: var(--color-orange-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-100:hover {
      background-color: var(--color-orange-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.705 .213 47.604) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-orange-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-orange-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-600:hover {
      background-color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-700:hover {
      background-color: var(--color-orange-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-pink-600:hover {
      background-color: var(--color-pink-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/5:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/5:hover {
        background-color: color-mix(in oklab, var(--primary) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-50:hover {
      background-color: var(--color-purple-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-500\/20:hover {
      background-color: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-purple-500\/20:hover {
        background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-purple-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-600:hover {
      background-color: var(--color-purple-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-700:hover {
      background-color: var(--color-purple-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-100\/80:hover {
      background-color: color-mix(in srgb, oklch(.936 .032 17.717) 80%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-red-100\/80:hover {
        background-color: color-mix(in oklab, var(--color-red-100) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.637 .237 25.331) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-red-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-600:hover {
      background-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-700:hover {
      background-color: var(--color-red-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-800\/30:hover {
      background-color: color-mix(in srgb, oklch(.444 .177 26.899) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-red-800\/30:hover {
        background-color: color-mix(in oklab, var(--color-red-800) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-50:hover {
      background-color: var(--color-slate-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-600:hover {
      background-color: var(--color-slate-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-600\/50:hover {
      background-color: color-mix(in srgb, oklch(.446 .043 257.281) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-slate-600\/50:hover {
        background-color: color-mix(in oklab, var(--color-slate-600) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-700:hover {
      background-color: var(--color-slate-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-700\/50:hover {
      background-color: color-mix(in srgb, oklch(.372 .044 257.287) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-slate-700\/50:hover {
        background-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-700\/60:hover {
      background-color: color-mix(in srgb, oklch(.372 .044 257.287) 60%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-slate-700\/60:hover {
        background-color: color-mix(in oklab, var(--color-slate-700) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-teal-600:hover {
      background-color: var(--color-teal-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-teal-700:hover {
      background-color: var(--color-teal-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-50:hover {
      background-color: var(--color-violet-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-white:hover {
      background-color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/10:hover {
      background-color: #ffffff1a;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/10:hover {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/15:hover {
      background-color: #ffffff26;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/15:hover {
        background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/20:hover {
      background-color: #fff3;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/20:hover {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/30:hover {
      background-color: #ffffff4d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/30:hover {
        background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/90:hover {
      background-color: #ffffffe6;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/90:hover {
        background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-yellow-500\/30:hover {
      background-color: color-mix(in srgb, oklch(.795 .184 86.047) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-yellow-500\/30:hover {
        background-color: color-mix(in oklab, var(--color-yellow-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-yellow-700:hover {
      background-color: var(--color-yellow-700);
    }
  }

  @media (hover: hover) {
    .hover\:from-amber-600:hover {
      --tw-gradient-from: var(--color-amber-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-blue-400:hover {
      --tw-gradient-from: var(--color-blue-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-blue-600:hover {
      --tw-gradient-from: var(--color-blue-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-blue-700:hover {
      --tw-gradient-from: var(--color-blue-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-cyan-400:hover {
      --tw-gradient-from: var(--color-cyan-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-emerald-500:hover {
      --tw-gradient-from: var(--color-emerald-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-emerald-600:hover {
      --tw-gradient-from: var(--color-emerald-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-green-400:hover {
      --tw-gradient-from: var(--color-green-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-green-500:hover {
      --tw-gradient-from: var(--color-green-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-green-600:hover {
      --tw-gradient-from: var(--color-green-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-green-700:hover {
      --tw-gradient-from: var(--color-green-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-indigo-600:hover {
      --tw-gradient-from: var(--color-indigo-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-orange-400:hover {
      --tw-gradient-from: var(--color-orange-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-orange-600:hover {
      --tw-gradient-from: var(--color-orange-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-pink-600:hover {
      --tw-gradient-from: var(--color-pink-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-purple-50:hover {
      --tw-gradient-from: var(--color-purple-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-purple-600:hover {
      --tw-gradient-from: var(--color-purple-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-purple-700:hover {
      --tw-gradient-from: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-red-600:hover {
      --tw-gradient-from: var(--color-red-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-rose-600:hover {
      --tw-gradient-from: var(--color-rose-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-slate-800:hover {
      --tw-gradient-from: var(--color-slate-800);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-violet-400:hover {
      --tw-gradient-from: var(--color-violet-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-violet-600:hover {
      --tw-gradient-from: var(--color-violet-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-yellow-500:hover {
      --tw-gradient-from: var(--color-yellow-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-yellow-600:hover {
      --tw-gradient-from: var(--color-yellow-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-amber-700:hover {
      --tw-gradient-to: var(--color-amber-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-black:hover {
      --tw-gradient-to: var(--color-black);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-50:hover {
      --tw-gradient-to: var(--color-blue-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-400:hover {
      --tw-gradient-to: var(--color-blue-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-600:hover {
      --tw-gradient-to: var(--color-blue-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-700:hover {
      --tw-gradient-to: var(--color-blue-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-cyan-600:hover {
      --tw-gradient-to: var(--color-cyan-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-cyan-700:hover {
      --tw-gradient-to: var(--color-cyan-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-emerald-400:hover {
      --tw-gradient-to: var(--color-emerald-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-emerald-600:hover {
      --tw-gradient-to: var(--color-emerald-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-emerald-700:hover {
      --tw-gradient-to: var(--color-emerald-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-green-700:hover {
      --tw-gradient-to: var(--color-green-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-indigo-400:hover {
      --tw-gradient-to: var(--color-indigo-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-indigo-600:hover {
      --tw-gradient-to: var(--color-indigo-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-indigo-700:hover {
      --tw-gradient-to: var(--color-indigo-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-orange-600:hover {
      --tw-gradient-to: var(--color-orange-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-orange-700:hover {
      --tw-gradient-to: var(--color-orange-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-pink-600:hover {
      --tw-gradient-to: var(--color-pink-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-pink-700:hover {
      --tw-gradient-to: var(--color-pink-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-400:hover {
      --tw-gradient-to: var(--color-purple-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-600:hover {
      --tw-gradient-to: var(--color-purple-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-700:hover {
      --tw-gradient-to: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-red-400:hover {
      --tw-gradient-to: var(--color-red-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-red-600:hover {
      --tw-gradient-to: var(--color-red-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-red-700:hover {
      --tw-gradient-to: var(--color-red-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-rose-700:hover {
      --tw-gradient-to: var(--color-rose-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-teal-600:hover {
      --tw-gradient-to: var(--color-teal-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-teal-700:hover {
      --tw-gradient-to: var(--color-teal-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-violet-700:hover {
      --tw-gradient-to: var(--color-violet-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-700:hover {
      color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-900:hover {
      color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-green-600:hover {
      color: var(--color-green-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-slate-200:hover {
      color: var(--color-slate-200);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-90:hover {
      opacity: .9;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-2xl:hover {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0_0_30px_rgba\(255\,255\,255\,0\.3\)\]:hover {
      --tw-shadow: 0 0 30px var(--tw-shadow-color, #ffffff4d);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-sm:hover {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:ring-4:hover {
      --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-cyan-500\/25:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.715 .143 215.221) 25%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-cyan-500\/25:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-cyan-500) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:shadow-orange-500\/30:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.705 .213 47.604) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-orange-500\/30:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-orange-500) 30%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:shadow-orange-500\/50:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.705 .213 47.604) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-orange-500\/50:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-orange-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:shadow-purple-400\/30:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.714 .203 305.504) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-purple-400\/30:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-400) 30%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:brightness-110:hover {
      --tw-brightness: brightness(110%);
      filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-4:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-hidden:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus-visible\:outline-hidden:focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-ring:focus-visible {
    outline-color: var(--ring);
  }

  .active\:cursor-grabbing:active {
    cursor: grabbing;
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\]:has( > svg) {
    grid-template-columns: calc(var(--spacing) * 4) 1fr;
  }

  .has-\[\>svg\]\:gap-x-3:has( > svg) {
    column-gap: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[orientation\=horizontal\]\:h-4[data-orientation="horizontal"] {
    height: calc(var(--spacing) * 4);
  }

  .data-\[orientation\=horizontal\]\:h-full[data-orientation="horizontal"] {
    height: 100%;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:min-h-44[data-orientation="vertical"] {
    min-height: calc(var(--spacing) * 44);
  }

  .data-\[orientation\=vertical\]\:w-1\.5[data-orientation="vertical"] {
    width: calc(var(--spacing) * 1.5);
  }

  .data-\[orientation\=vertical\]\:w-auto[data-orientation="vertical"] {
    width: auto;
  }

  .data-\[orientation\=vertical\]\:w-full[data-orientation="vertical"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:flex-col[data-orientation="vertical"] {
    flex-direction: column;
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }

  :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
    color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
      color: color-mix(in oklab, var(--destructive) 90%, transparent);
    }
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--spacing) * 2);
  }

  .data-\[state\=active\]\:bg-card[data-state="active"] {
    background-color: var(--card);
  }

  .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\][data-state="checked"] {
    --tw-translate-x: calc(100% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=checked\]\:border-primary[data-state="checked"] {
    border-color: var(--primary);
  }

  .data-\[state\=checked\]\:bg-amber-500[data-state="checked"] {
    background-color: var(--color-amber-500);
  }

  .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
    background-color: var(--primary);
  }

  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
    color: var(--primary-foreground);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=unchecked\]\:bg-switch-background[data-state="unchecked"] {
    background-color: var(--switch-background);
  }

  @media (width >= 40rem) {
    .sm\:mt-3 {
      margin-top: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:mr-2 {
      margin-right: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 40rem) {
    .sm\:mb-2 {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:flex {
      display: flex;
    }
  }

  @media (width >= 40rem) {
    .sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:inline {
      display: inline;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-4 {
      height: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-5 {
      height: calc(var(--spacing) * 5);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-7 {
      height: calc(var(--spacing) * 7);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-12 {
      height: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-4 {
      width: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-5 {
      width: calc(var(--spacing) * 5);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-7 {
      width: calc(var(--spacing) * 7);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-12 {
      width: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
  }

  @media (width >= 40rem) {
    .sm\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 40rem) {
    .sm\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:items-center {
      align-items: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-3 {
      gap: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-4 {
      gap: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-x-2 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-x-3 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 40rem) {
    .sm\:px-4 {
      padding-inline: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-3 {
      padding-block: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-8 {
      padding-block: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-24 {
      padding-block: calc(var(--spacing) * 24);
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-base {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:mt-4 {
      margin-top: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 48rem) {
    .md\:mr-2 {
      margin-right: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:mb-2 {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:mb-8 {
      margin-bottom: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:h-4 {
      height: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 48rem) {
    .md\:h-6 {
      height: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:h-8 {
      height: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:h-10 {
      height: calc(var(--spacing) * 10);
    }
  }

  @media (width >= 48rem) {
    .md\:h-12 {
      height: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:h-20 {
      height: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 48rem) {
    .md\:h-32 {
      height: calc(var(--spacing) * 32);
    }
  }

  @media (width >= 48rem) {
    .md\:min-h-\[600px\] {
      min-height: 600px;
    }
  }

  @media (width >= 48rem) {
    .md\:w-4 {
      width: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 48rem) {
    .md\:w-6 {
      width: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:w-8 {
      width: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:w-10 {
      width: calc(var(--spacing) * 10);
    }
  }

  @media (width >= 48rem) {
    .md\:w-12 {
      width: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:w-20 {
      width: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 48rem) {
    .md\:w-32 {
      width: calc(var(--spacing) * 32);
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:items-center {
      align-items: center;
    }
  }

  @media (width >= 48rem) {
    .md\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 48rem) {
    .md\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 48rem) {
    .md\:gap-2 {
      gap: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:gap-10 {
      gap: calc(var(--spacing) * 10);
    }
  }

  @media (width >= 48rem) {
    .md\:gap-12 {
      gap: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-6 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-8 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-0 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-2 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-3 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-6 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:rounded-3xl {
      border-radius: var(--radius-3xl);
    }
  }

  @media (width >= 48rem) {
    .md\:rounded-xl {
      border-radius: calc(var(--radius)  + 4px);
    }
  }

  @media (width >= 48rem) {
    .md\:p-2 {
      padding: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:p-3 {
      padding: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 48rem) {
    .md\:p-4 {
      padding: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 48rem) {
    .md\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:px-3 {
      padding-inline: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 48rem) {
    .md\:px-4 {
      padding-inline: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 48rem) {
    .md\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:py-3 {
      padding-block: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 48rem) {
    .md\:py-6 {
      padding-block: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:pb-6 {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:text-right {
      text-align: right;
    }
  }

  @media (width >= 48rem) {
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-base {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:order-1 {
      order: 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:order-2 {
      order: 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (width >= 64rem) {
    .lg\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 64rem) {
    .lg\:block {
      display: block;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-7 {
      grid-template-columns: repeat(7, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 64rem) {
    .lg\:items-center {
      align-items: center;
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-start {
      justify-content: flex-start;
    }
  }

  @media (width >= 64rem) {
    .lg\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:text-left {
      text-align: left;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:text-muted-foreground:is(.dark *) {
    color: var(--muted-foreground);
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:border-input:is(.dark *)[data-state="active"] {
    border-color: var(--input);
  }

  .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:text-foreground:is(.dark *)[data-state="active"] {
    color: var(--foreground);
  }

  .dark\:data-\[state\=checked\]\:bg-primary:is(.dark *)[data-state="checked"] {
    background-color: var(--primary);
  }

  .dark\:data-\[state\=checked\]\:bg-primary-foreground:is(.dark *)[data-state="checked"] {
    background-color: var(--primary-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-card-foreground:is(.dark *)[data-state="unchecked"] {
    background-color: var(--card-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
      background-color: color-mix(in oklab, var(--input) 80%, transparent);
    }
  }

  .\[\&_p\]\:leading-relaxed p {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--spacing) * 2);
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  .\[\&\>svg\]\:size-4 > svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>svg\]\:translate-y-0\.5 > svg {
    --tw-translate-y: calc(var(--spacing) * .5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>svg\]\:text-current > svg {
    color: currentColor;
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }
}

:root {
  --font-size: 16px;
  --background: #fff;
  --foreground: oklch(.145 0 0);
  --card: #fff;
  --card-foreground: oklch(.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(.145 0 0);
  --primary: #030213;
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(.95 .0058 264.53);
  --secondary-foreground: #030213;
  --muted: #ececf0;
  --muted-foreground: #717182;
  --accent: #e9ebef;
  --accent-foreground: #030213;
  --destructive: #d4183d;
  --destructive-foreground: #fff;
  --border: #0000001a;
  --input: transparent;
  --input-background: #f3f3f5;
  --switch-background: #cbced4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: oklch(.708 0 0);
  --chart-1: oklch(.646 .222 41.116);
  --chart-2: oklch(.6 .118 184.704);
  --chart-3: oklch(.398 .07 227.392);
  --chart-4: oklch(.828 .189 84.429);
  --chart-5: oklch(.769 .188 70.08);
  --radius: .625rem;
  --sidebar: oklch(.985 0 0);
  --sidebar-foreground: oklch(.145 0 0);
  --sidebar-primary: #030213;
  --sidebar-primary-foreground: oklch(.985 0 0);
  --sidebar-accent: oklch(.97 0 0);
  --sidebar-accent-foreground: oklch(.205 0 0);
  --sidebar-border: oklch(.922 0 0);
  --sidebar-ring: oklch(.708 0 0);
}

.dark {
  --background: oklch(.145 0 0);
  --foreground: oklch(.985 0 0);
  --card: oklch(.145 0 0);
  --card-foreground: oklch(.985 0 0);
  --popover: oklch(.145 0 0);
  --popover-foreground: oklch(.985 0 0);
  --primary: oklch(.985 0 0);
  --primary-foreground: oklch(.205 0 0);
  --secondary: oklch(.269 0 0);
  --secondary-foreground: oklch(.985 0 0);
  --muted: oklch(.269 0 0);
  --muted-foreground: oklch(.708 0 0);
  --accent: oklch(.269 0 0);
  --accent-foreground: oklch(.985 0 0);
  --destructive: oklch(.396 .141 25.723);
  --destructive-foreground: oklch(.637 .237 25.331);
  --border: oklch(.269 0 0);
  --input: oklch(.269 0 0);
  --ring: oklch(.439 0 0);
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --chart-1: oklch(.488 .243 264.376);
  --chart-2: oklch(.696 .17 162.48);
  --chart-3: oklch(.769 .188 70.08);
  --chart-4: oklch(.627 .265 303.9);
  --chart-5: oklch(.645 .246 16.439);
  --sidebar: oklch(.205 0 0);
  --sidebar-foreground: oklch(.985 0 0);
  --sidebar-primary: oklch(.488 .243 264.376);
  --sidebar-primary-foreground: oklch(.985 0 0);
  --sidebar-accent: oklch(.269 0 0);
  --sidebar-accent-foreground: oklch(.985 0 0);
  --sidebar-border: oklch(.269 0 0);
  --sidebar-ring: oklch(.439 0 0);
}

html {
  font-size: var(--font-size);
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes morph {
  0% {
    transform: scale(1)rotate(0);
  }

  50% {
    transform: scale(1.1)rotate(180deg);
  }

  100% {
    transform: scale(1)rotate(360deg);
  }
}

@keyframes pulse-glow {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 5px #3b82f680;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 20px #3b82f6cc;
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }

  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

@keyframes return-to-market {
  0% {
    filter: brightness(.8);
    transform: scale(1.2)rotate(5deg);
  }

  50% {
    filter: brightness(1.2);
    transform: scale(.9)rotate(-5deg);
  }

  100% {
    filter: brightness();
    transform: scale(1)rotate(0);
  }
}

@keyframes bounce-back {
  0% {
    transform: translateX(0)translateY(0);
  }

  30% {
    transform: translateX(-20px)translateY(-10px)rotate(-10deg);
  }

  60% {
    transform: translateX(10px)translateY(-5px)rotate(5deg);
  }

  100% {
    transform: translateX(0)translateY(0)rotate(0);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 10px #22c55e80;
  }

  50% {
    box-shadow: 0 0 30px #22c55ee6, 0 0 40px #22c55e99;
  }
}

@keyframes confetti {
  0% {
    opacity: 1;
    transform: translateY(0)rotate(0);
  }

  100% {
    opacity: 0;
    transform: translateY(-500px)rotate(720deg);
  }
}

@keyframes treasure-shine {
  0%, 100% {
    filter: brightness();
    transform: scale(1);
  }

  50% {
    filter: brightness(1.3) drop-shadow(0 0 20px gold);
    transform: scale(1.1);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }
}

@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0);
  }

  50% {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-fade-in {
  animation: .6s ease-out forwards fade-in;
}

.animate-slide-down {
  animation: .8s ease-out forwards slide-down;
}

.animate-morph {
  animation: 2s ease-in-out infinite morph;
}

.animate-pulse-glow {
  animation: 2s ease-in-out infinite pulse-glow;
}

.animate-shake {
  animation: .5s ease-in-out shake;
}

.animate-return-to-market {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) return-to-market;
}

.animate-bounce-back {
  animation: .6s ease-out bounce-back;
}

.animate-glow {
  animation: 2s ease-in-out infinite glow;
}

.animate-confetti {
  animation: 3s ease-out infinite confetti;
}

.animate-treasure-shine {
  animation: 2s ease-in-out infinite treasure-shine;
}

.animate-float {
  animation: 3s ease-in-out infinite float;
}

.animate-sparkle {
  animation: 1.5s ease-in-out infinite sparkle;
}

.cave-gradient {
  background: linear-gradient(135deg, #1f2937 0%, #374151 25%, #4b5563 50%, #6b7280 75%, #9ca3af 100%);
}

.treasure-gradient {
  background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 25%, #d97706 50%, #b45309 75%, #92400e 100%);
}

.gem-sparkle {
  position: relative;
  overflow: hidden;
}

.gem-sparkle:before {
  content: "";
  border-radius: inherit;
  background: linear-gradient(45deg, #0000, #ffffff4d, #0000);
  animation: 2s ease-in-out infinite sparkle;
  position: absolute;
  inset: -2px;
}

.drag-item {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
}

.drag-item:hover {
  filter: brightness(1.2);
  transform: scale(1.1)rotate(5deg);
}

.drop-zone {
  transition: all .3s;
}

.drop-zone:hover {
  transform: scale(1.02);
  box-shadow: 0 0 20px #22c55e4d;
}

.drop-zone.drag-over {
  background-color: #22c55e33;
  border-color: #22c55e;
  transform: scale(1.05);
}

.drop-zone-hover {
  background-color: #22c55e4d !important;
  border-color: #22c55e !important;
  transform: scale(1.08) !important;
  box-shadow: 0 0 20px #22c55e80 !important;
}

.venn-region {
  cursor: pointer;
  transition: all .2s;
}

.venn-region:hover {
  filter: brightness(1.2);
  stroke-width: 3px;
}

.venn-region.selected {
  filter: brightness(1.5);
  stroke: #10b981;
  stroke-width: 4px;
}

.adventure-button {
  transition: all .3s;
  position: relative;
  overflow: hidden;
}

.adventure-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px #0003;
}

.adventure-button:before {
  content: "";
  background: linear-gradient(90deg, #0000, #fff3, #0000);
  width: 100%;
  height: 100%;
  transition: left .5s;
  position: absolute;
  top: 0;
  left: -100%;
}

.adventure-button:hover:before {
  left: 100%;
}

@keyframes magnetic-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 10px #06b6d44d;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 25px #06b6d4cc, 0 0 35px #06b6d466;
  }
}

@keyframes magnetic-field {
  0% {
    opacity: .2;
    transform: scale(.8)rotate(0);
  }

  50% {
    opacity: .8;
    transform: scale(1.2)rotate(180deg);
  }

  100% {
    opacity: .2;
    transform: scale(.8)rotate(360deg);
  }
}

@keyframes magnetic-attract {
  0% {
    transform: translateX(0)translateY(0)scale(1);
  }

  50% {
    transform: translateX(10px)translateY(-5px)scale(1.1);
  }

  100% {
    transform: translateX(20px)translateY(-10px)scale(1.05);
  }
}

@keyframes magnetic-snap {
  0% {
    filter: brightness();
    transform: scale(1);
  }

  50% {
    filter: brightness(1.5);
    transform: scale(1.3);
  }

  100% {
    filter: brightness();
    transform: scale(1);
  }
}

.animate-magnetic-pulse {
  animation: 1s ease-in-out infinite magnetic-pulse;
}

.animate-magnetic-field {
  animation: 2s ease-in-out infinite magnetic-field;
}

.animate-magnetic-attract {
  animation: .5s ease-out forwards magnetic-attract;
}

.animate-magnetic-snap {
  animation: .3s ease-out magnetic-snap;
}

.magnetic-drop-zone {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
  position: relative;
}

.magnetic-drop-zone.attracting {
  background: linear-gradient(135deg, #06b6d44d, #0ea5e966);
  border-color: #06b6d4;
  transform: scale(1.05);
  box-shadow: 0 0 20px #06b6d466, inset 0 0 20px #06b6d433;
}

.magnetic-drop-zone.attracting:before {
  content: "";
  border-radius: inherit;
  border: 2px dashed #06b6d4cc;
  animation: 2s linear infinite magnetic-field;
  position: absolute;
  inset: -4px;
}

@keyframes magnetic-lines {
  0%, 100% {
    opacity: .2;
    transform: scaleY(1)translateX(0);
  }

  50% {
    opacity: .8;
    transform: scaleY(1.5)translateX(5px);
  }
}

.magnetic-lines {
  animation: 1.5s ease-in-out infinite magnetic-lines;
}

.delay-100 {
  animation-delay: .1s;
}

.delay-200 {
  animation-delay: .2s;
}

.delay-300 {
  animation-delay: .3s;
}

.delay-400 {
  animation-delay: .4s;
}

.delay-500 {
  animation-delay: .5s;
}

.delay-600 {
  animation-delay: .6s;
}

@keyframes space-drift {
  0% {
    transform: translateX(0)translateY(0)rotate(0);
  }

  25% {
    transform: translateX(20px)translateY(-10px)rotate(90deg);
  }

  50% {
    transform: translateX(-15px)translateY(15px)rotate(180deg);
  }

  75% {
    transform: translateX(-20px)translateY(-5px)rotate(270deg);
  }

  100% {
    transform: translateX(0)translateY(0)rotate(360deg);
  }
}

@keyframes nebula-flow {
  0%, 100% {
    opacity: .3;
    transform: scale(1)rotate(0);
  }

  33% {
    opacity: .6;
    transform: scale(1.2)rotate(120deg);
  }

  66% {
    opacity: .4;
    transform: scale(.8)rotate(240deg);
  }
}

@keyframes star-twinkle {
  0%, 100% {
    opacity: .3;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.3);
  }
}

@keyframes shooting-star {
  0% {
    opacity: 0;
    transform: translateX(-100px)translateY(-50px);
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateX(300px)translateY(200px);
  }
}

@keyframes meteor-fall {
  0% {
    opacity: 0;
    transform: translateX(-50px)translateY(-50px)rotate(0);
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateX(300px)translateY(400px)rotate(360deg);
  }
}

@keyframes planet-orbit {
  0% {
    transform: rotate(0)translateX(100px)rotate(0);
  }

  100% {
    transform: rotate(360deg)translateX(100px)rotate(-360deg);
  }
}

@keyframes cosmic-pulse {
  0%, 100% {
    opacity: .2;
    transform: scale(.8);
  }

  50% {
    opacity: .8;
    transform: scale(1.5);
  }
}

@keyframes solar-flare {
  0% {
    opacity: 0;
    transform: scaleX(0)rotate(0);
  }

  20% {
    opacity: .8;
    transform: scaleX(1)rotate(45deg);
  }

  80% {
    opacity: .8;
    transform: scaleX(1)rotate(135deg);
  }

  100% {
    opacity: 0;
    transform: scaleX(0)rotate(180deg);
  }
}

@keyframes comet-trail {
  0% {
    opacity: 0;
    transform: translateX(-200px)translateY(0);
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateX(calc(100vw + 200px))translateY(-100px);
  }
}

.animate-space-drift {
  animation: 20s ease-in-out infinite space-drift;
}

.animate-nebula-flow {
  animation: 15s ease-in-out infinite nebula-flow;
}

.animate-star-twinkle {
  animation: 3s ease-in-out infinite star-twinkle;
}

.animate-shooting-star {
  animation: 2s ease-out infinite shooting-star;
}

.animate-meteor-fall {
  animation: 4s ease-in infinite meteor-fall;
}

.animate-cosmic-pulse {
  animation: 4s ease-in-out infinite cosmic-pulse;
}

.animate-solar-flare {
  animation: 6s ease-out infinite solar-flare;
}

.animate-comet-trail {
  animation: 12s ease-in infinite comet-trail;
}

.bg-space-nebula-1 {
  background: radial-gradient(circle, #8b45134d 0%, #4b008233 50%, #0000 100%);
}

.bg-space-nebula-2 {
  background: radial-gradient(circle, #1e90ff4d 0%, #8a2be233 50%, #0000 100%);
}

.bg-space-nebula-3 {
  background: radial-gradient(circle, #ff14934d 0%, #00bfff33 50%, #0000 100%);
}

.sa-hud {
  -webkit-backdrop-filter: blur(16px);
  background: linear-gradient(90deg, #0f172af2, #1e293bf2);
  border-bottom: 1px solid #47556980;
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
}

.sa-bottom-nav {
  -webkit-backdrop-filter: blur(16px);
  background: linear-gradient(90deg, #0f172af2, #1e293bf2);
  border-top: 1px solid #47556980;
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
}

@keyframes sa-hud-slide-down {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sa-hud-slide-up {
  from {
    opacity: 0;
    transform: translateY(100%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sa-progress-pulse {
  0%, 100% {
    opacity: .8;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

@keyframes sa-energy-flow {
  0% {
    background-position: 0%;
  }

  50% {
    background-position: 100%;
  }

  100% {
    background-position: 0%;
  }
}

.sa-hud-enter {
  animation: .6s cubic-bezier(.4, 0, .2, 1) forwards sa-hud-slide-down;
}

.sa-bottom-nav-enter {
  animation: .6s cubic-bezier(.4, 0, .2, 1) forwards sa-hud-slide-up;
}

.sa-progress-active {
  animation: 2s ease-in-out infinite sa-progress-pulse;
}

.sa-energy-active {
  background-size: 200% 200%;
  animation: 3s ease-in-out infinite sa-energy-flow;
}

.sa-button-primary {
  background: linear-gradient(135deg, #06b6d4, #3b82f6);
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
  position: relative;
  overflow: hidden;
}

.sa-button-primary:before {
  content: "";
  background: linear-gradient(90deg, #0000, #ffffff4d, #0000);
  width: 100%;
  height: 100%;
  transition: left .6s cubic-bezier(.4, 0, .2, 1);
  position: absolute;
  top: 0;
  left: -100%;
}

.sa-button-primary:hover:before {
  left: 100%;
}

.sa-button-primary:hover {
  transform: translateY(-2px)scale(1.02);
  box-shadow: 0 10px 30px #06b6d466;
}

@media (width <= 768px) {
  .sa-hud, .sa-bottom-nav {
    padding: .75rem 1rem;
  }

  .sa-hud h2 {
    max-width: 150px;
    font-size: 1rem;
  }
}

@media (width <= 480px) {
  .sa-hud, .sa-bottom-nav {
    padding: .5rem .75rem;
  }

  .sa-hud h2 {
    max-width: 120px;
    font-size: .875rem;
  }
}

@keyframes timer-tick {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes stage-activate {
  0% {
    opacity: .7;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.1);
  }

  100% {
    opacity: 1;
    transform: scale(1.05);
  }
}

@keyframes stage-complete {
  0% {
    transform: scale(1);
  }

  25% {
    transform: scale(1.2)rotate(5deg);
  }

  50% {
    transform: scale(1.1)rotate(-3deg);
  }

  75% {
    transform: scale(1.15)rotate(2deg);
  }

  100% {
    transform: scale(1)rotate(0);
  }
}

@keyframes progress-fill {
  from {
    stroke-dashoffset: var(--circumference);
  }

  to {
    stroke-dashoffset: calc(var(--circumference)  - (var(--progress) / 100) * var(--circumference));
  }
}

@keyframes checkpoint-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 10px #06b6d44d;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 20px #06b6d499, 0 0 30px #06b6d44d;
  }
}

@keyframes fast-mode-glow {
  0%, 100% {
    box-shadow: 0 0 15px #f59e0b66;
  }

  50% {
    box-shadow: 0 0 25px #f59e0bb3, 0 0 35px #f59e0b66;
  }
}

@keyframes warning-pulse {
  0%, 100% {
    color: #ef4444;
    transform: scale(1);
  }

  50% {
    color: #dc2626;
    transform: scale(1.1);
  }
}

@keyframes pace-popup-enter {
  0% {
    opacity: 0;
    transform: translateY(-20px)scale(.8);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

.animate-timer-tick {
  animation: 1s ease-in-out timer-tick;
}

.animate-stage-activate {
  animation: .6s ease-out forwards stage-activate;
}

.animate-stage-complete {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards stage-complete;
}

.animate-progress-fill {
  animation: .5s ease-out forwards progress-fill;
}

.animate-checkpoint-pulse {
  animation: 2s ease-in-out infinite checkpoint-pulse;
}

.animate-fast-mode-glow {
  animation: 2s ease-in-out infinite fast-mode-glow;
}

.animate-warning-pulse {
  animation: 1s ease-in-out infinite warning-pulse;
}

.animate-pace-popup-enter {
  animation: .4s cubic-bezier(.68, -.55, .265, 1.55) forwards pace-popup-enter;
}

.timer-progress-ring {
  filter: drop-shadow(0 0 8px #06b6d44d);
  transition: all .3s;
}

.timer-progress-ring.warning {
  filter: drop-shadow(0 0 8px #ef444480);
}

.timer-progress-ring.fast-mode {
  filter: drop-shadow(0 0 8px #f59e0b80);
}

.stage-checkpoint {
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
  position: relative;
}

.stage-checkpoint.active {
  transform: scale(1.1);
}

.stage-checkpoint.completed:after {
  content: "✓";
  color: #fff;
  background: #10b981;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  width: 20px;
  height: 20px;
  font-size: 12px;
  font-weight: bold;
  animation: .6s ease-out stage-complete;
  display: flex;
  position: absolute;
  top: -5px;
  right: -5px;
}

@media (width <= 768px) {
  .timer-display {
    scale: .9;
  }

  .stage-timeline {
    gap: 1rem;
    padding: 1rem;
  }

  .stage-checkpoint {
    scale: .85;
  }
}

@media (width <= 480px) {
  .timer-display {
    scale: .8;
  }

  .stage-timeline {
    flex-wrap: wrap;
    justify-content: center;
    gap: .5rem;
    padding: .75rem;
  }

  .stage-checkpoint {
    scale: .75;
  }
}

.timer-control:focus-visible {
  outline-offset: 2px;
  outline: 2px solid #06b6d4;
}

.stage-checkpoint:focus-visible {
  outline-offset: 4px;
  border-radius: 50%;
  outline: 2px solid #06b6d4;
}

@keyframes bounce-in {
  0% {
    opacity: 0;
    transform: translateY(-50px)scale(.3);
  }

  50% {
    opacity: 1;
    transform: translateY(0)scale(1.05);
  }

  70% {
    transform: scale(.9);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes bracket-grow {
  0% {
    opacity: 0;
    transform: scaleY(.1);
  }

  50% {
    opacity: .7;
    transform: scaleY(1.2);
  }

  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}

@keyframes dash-flow {
  0% {
    stroke-dashoffset: 0;
  }

  100% {
    stroke-dashoffset: 24px;
  }
}

@keyframes type-writer {
  0% {
    opacity: 0;
    width: 0;
  }

  50% {
    opacity: .7;
  }

  100% {
    opacity: 1;
    width: 100%;
  }
}

@keyframes pulse-success {
  0%, 100% {
    background-color: #dcfce7;
    border-color: #22c55e;
    transform: scale(1);
  }

  50% {
    background-color: #bbf7d0;
    border-color: #16a34a;
    transform: scale(1.02);
  }
}

@keyframes shake-error {
  0%, 100% {
    background-color: #fee2e2;
    transform: translateX(0);
  }

  10%, 30%, 50%, 70%, 90% {
    background-color: #fca5a5;
    transform: translateX(-4px);
  }

  20%, 40%, 60%, 80% {
    background-color: #fecaca;
    transform: translateX(4px);
  }
}

@keyframes lesson-fade-in {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes number-slide {
  0% {
    opacity: 0;
    transform: translateX(-100px)translateY(-20px)rotate(-10deg);
  }

  60% {
    opacity: 1;
    transform: translateX(10px)translateY(5px)rotate(5deg);
  }

  100% {
    opacity: 1;
    transform: translateX(0)translateY(0)rotate(0);
  }
}

@keyframes set-container-expand {
  0% {
    opacity: 0;
    transform: scale(.8);
  }

  50% {
    opacity: .8;
    transform: scale(1.05);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes empty-set-shake {
  0%, 100% {
    transform: translateX(0)rotate(0);
  }

  10% {
    transform: translateX(-8px)rotate(-2deg);
  }

  20% {
    transform: translateX(8px)rotate(2deg);
  }

  30% {
    transform: translateX(-6px)rotate(-1deg);
  }

  40% {
    transform: translateX(6px)rotate(1deg);
  }

  50% {
    transform: translateX(-4px)rotate(-.5deg);
  }

  60% {
    transform: translateX(4px)rotate(.5deg);
  }

  70% {
    transform: translateX(-2px)rotate(-.25deg);
  }

  80% {
    transform: translateX(2px)rotate(.25deg);
  }

  90% {
    transform: translateX(-1px)rotate(0);
  }
}

@keyframes symbol-bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0)scale(1);
  }

  40% {
    transform: translateY(-15px)scale(1.1);
  }

  60% {
    transform: translateY(-8px)scale(1.05);
  }
}

@keyframes progress-bar-fill {
  0% {
    background: linear-gradient(90deg, #3b82f6, #3b82f6);
    width: 0%;
  }

  50% {
    background: linear-gradient(90deg, #3b82f6, #6366f1);
  }

  100% {
    background: linear-gradient(90deg, #3b82f6, #6366f1);
  }
}

@keyframes stage-indicator-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 #3b82f666;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 8px #3b82f600;
  }
}

@keyframes quiz-option-hover {
  0% {
    transform: scale(1);
    box-shadow: 0 2px 4px #0000001a;
  }

  100% {
    transform: scale(1.02);
    box-shadow: 0 8px 25px #3b82f626;
  }
}

.animate-bounce-in {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards bounce-in;
}

.animate-bracket-grow {
  animation: .6s ease-out forwards bracket-grow;
}

.animate-dash-flow {
  animation: 2s linear infinite dash-flow;
}

.animate-type-writer {
  white-space: nowrap;
  animation: 1.5s ease-out forwards type-writer;
  display: inline-block;
  overflow: hidden;
}

.animate-pulse-success {
  animation: .6s ease-out pulse-success;
}

.animate-shake-error {
  animation: .5s ease-in-out shake-error;
}

.animate-lesson-fade-in {
  animation: .8s ease-out forwards lesson-fade-in;
}

.animate-number-slide {
  animation: 1s cubic-bezier(.68, -.55, .265, 1.55) forwards number-slide;
}

.animate-set-container-expand {
  animation: .8s ease-out forwards set-container-expand;
}

.animate-empty-set-shake {
  animation: 1s ease-in-out empty-set-shake;
}

.animate-symbol-bounce {
  animation: 1s ease-out forwards symbol-bounce;
}

.animate-progress-bar-fill {
  animation: 1s ease-out forwards progress-bar-fill;
}

.animate-stage-indicator-pulse {
  animation: 1.5s ease-in-out infinite stage-indicator-pulse;
}

.animate-quiz-option-hover {
  animation: .3s ease-out forwards quiz-option-hover;
}

.lesson-stage-active {
  transform: scale(1.02);
  box-shadow: 0 10px 25px #3b82f626;
}

.lesson-tile-initial {
  opacity: 0;
  transform: translateX(-100px)translateY(-20px)rotate(-10deg);
}

.lesson-tile-animated {
  opacity: 1;
  transition: all 1s cubic-bezier(.68, -.55, .265, 1.55);
  transform: translateX(0)translateY(0)rotate(0);
}

.lesson-container-hidden {
  opacity: 0;
  transform: scale(.8);
}

.lesson-container-visible {
  opacity: 1;
  transition: all .8s ease-out;
  transform: scale(1);
}

.svg-animate-in {
  animation: .6s ease-out forwards lesson-fade-in;
}

.svg-path-draw {
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000px;
  animation: 2s ease-out forwards svg-draw;
}

@keyframes svg-draw {
  to {
    stroke-dashoffset: 0;
  }
}

.lesson-button-hover:hover {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
  transform: translateY(-2px)scale(1.05);
  box-shadow: 0 10px 25px #00000026;
}

.lesson-card-interactive {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
}

.lesson-card-interactive:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px #0000001a;
}

@media (width <= 768px) {
  .lesson-stage-indicators {
    gap: .5rem;
    scale: .9;
  }

  .lesson-animation-area {
    min-height: 300px;
  }

  .lesson-control-panel {
    flex-direction: column;
    gap: .75rem;
  }

  .lesson-svg-container {
    scale: .8;
  }
}

@media (width <= 480px) {
  .lesson-stage-indicators {
    flex-wrap: wrap;
    justify-content: center;
    scale: .8;
  }

  .lesson-animation-area {
    min-height: 250px;
    padding: 1rem;
  }

  .lesson-quiz-options {
    gap: .5rem;
  }

  .lesson-svg-container {
    scale: .7;
  }
}

@keyframes marble-drop {
  0% {
    opacity: 0;
    transform: translateY(-100px)scale(.5);
  }

  70% {
    opacity: 1;
    transform: translateY(10px)scale(1.1);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

@keyframes stream-flow {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(40px);
  }
}

@keyframes number-float {
  0%, 100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }

  50% {
    opacity: .8;
    transform: translateY(-10px)scale(1.05);
  }
}

@keyframes container-fill {
  0% {
    fill: #8b45131a;
    stroke-dasharray: 5 3;
  }

  50% {
    fill: #8b451333;
    stroke-dasharray: 10 2;
  }

  100% {
    fill: #8b45134d;
    stroke-dasharray: 0;
  }
}

@keyframes symbol-appear {
  0% {
    opacity: 0;
    transform: scale(0)rotate(-180deg);
  }

  70% {
    opacity: 1;
    transform: scale(1.2)rotate(20deg);
  }

  100% {
    opacity: 1;
    transform: scale(1)rotate(0);
  }
}

@keyframes ribbon-appear {
  0% {
    opacity: 0;
    transform: translateY(-30px)scale(.8);
  }

  50% {
    opacity: 1;
    transform: translateY(-5px)scale(1.1);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

@keyframes singleton-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 10px #8b45134d;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 25px #8b451399, 0 0 35px #8b45134d;
  }
}

@keyframes subset-appear {
  0% {
    opacity: 0;
    transform: scale(0)rotate(45deg);
  }

  60% {
    opacity: 1;
    transform: scale(1.1)rotate(-10deg);
  }

  100% {
    opacity: 1;
    transform: scale(1)rotate(0);
  }
}

@keyframes formula-highlight {
  0%, 100% {
    color: #7c3aed;
    transform: scale(1);
  }

  50% {
    color: #5b21b6;
    transform: scale(1.1);
  }
}

@keyframes formula-glow {
  0%, 100% {
    border-color: #7c3aed80;
    box-shadow: 0 0 10px #7c3aed4d;
  }

  50% {
    border-color: #7c3aedcc;
    box-shadow: 0 0 25px #7c3aed99, 0 0 35px #7c3aed4d;
  }
}

@keyframes infinite-loop-hint {
  0%, 100% {
    opacity: .6;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes jar-shimmer {
  0% {
    filter: brightness();
  }

  50% {
    filter: brightness(1.2) drop-shadow(0 0 10px #3b82f680);
  }

  100% {
    filter: brightness();
  }
}

@keyframes equal-match {
  0% {
    border-color: #8b4513;
    transform: scale(1);
  }

  50% {
    border-color: #22c55e;
    transform: scale(1.05);
  }

  100% {
    border-color: #22c55e;
    transform: scale(1);
  }
}

@keyframes powerset-cascade {
  0% {
    opacity: 0;
    transform: translateY(-20px)scale(.8);
  }

  50% {
    opacity: .8;
    transform: translateY(5px)scale(1.1);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

@keyframes cardinality-count {
  0% {
    opacity: 0;
    transform: scale(2);
  }

  50% {
    opacity: 1;
    transform: scale(1.2);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes subset-validation {
  0% {
    background-color: #f9fafb;
    border-color: #d1d5db;
  }

  50% {
    background-color: #f3e8ff;
    border-color: #7c3aed;
  }

  100% {
    background-color: #f3e8ff;
    border-color: #7c3aed;
  }
}

@keyframes quiz-feedback-slide {
  0% {
    opacity: 0;
    max-height: 0;
    transform: translateX(-20px);
  }

  50% {
    transform: translateX(5px);
  }

  100% {
    opacity: 1;
    max-height: 100px;
    transform: translateX(0);
  }
}

.animate-marble-drop {
  animation: 1s cubic-bezier(.68, -.55, .265, 1.55) forwards marble-drop;
}

.animate-stream-flow {
  animation: 3s linear infinite stream-flow;
}

.animate-number-float {
  animation: 2s ease-in-out infinite number-float;
}

.animate-container-fill {
  animation: 1s ease-out forwards container-fill;
}

.animate-symbol-appear {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards symbol-appear;
}

.animate-ribbon-appear {
  animation: .6s cubic-bezier(.68, -.55, .265, 1.55) forwards ribbon-appear;
}

.animate-singleton-pulse {
  animation: 2s ease-in-out infinite singleton-pulse;
}

.animate-subset-appear {
  animation: .6s cubic-bezier(.68, -.55, .265, 1.55) forwards subset-appear;
}

.animate-formula-highlight {
  animation: 1s ease-in-out infinite formula-highlight;
}

.animate-formula-glow {
  animation: 2s ease-in-out infinite formula-glow;
}

.animate-infinite-loop-hint {
  animation: 1.5s ease-in-out infinite infinite-loop-hint;
}

.animate-jar-shimmer {
  animation: 2s ease-in-out infinite jar-shimmer;
}

.animate-equal-match {
  animation: .8s ease-out forwards equal-match;
}

.animate-powerset-cascade {
  animation: .5s cubic-bezier(.68, -.55, .265, 1.55) forwards powerset-cascade;
}

.animate-cardinality-count {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards cardinality-count;
}

.animate-subset-validation {
  animation: .3s ease-out forwards subset-validation;
}

.animate-quiz-feedback-slide {
  animation: .5s cubic-bezier(.68, -.55, .265, 1.55) forwards quiz-feedback-slide;
}

.marble-shine {
  position: relative;
  overflow: hidden;
}

.marble-shine:before {
  content: "";
  border-radius: inherit;
  background: linear-gradient(45deg, #0000, #fff6, #0000);
  animation: 3s ease-in-out infinite marble-shine;
  position: absolute;
  inset: -2px;
}

@keyframes marble-shine {
  0%, 100% {
    opacity: 0;
    transform: translateX(-100%);
  }

  50% {
    opacity: 1;
    transform: translateX(100%);
  }
}

.infinite-stream-glow {
  filter: drop-shadow(0 0 8px #10b98199);
}

.powerset-grid-highlight {
  position: relative;
}

.powerset-grid-highlight:after {
  content: "";
  border-radius: inherit;
  opacity: 0;
  border: 2px solid #7c3aed80;
  animation: .5s ease-out forwards grid-highlight;
  position: absolute;
  inset: -2px;
}

@keyframes grid-highlight {
  0% {
    opacity: 0;
    transform: scale(.9);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.subset-option-hover {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
}

.subset-option-hover:hover {
  transform: translateY(-2px)scale(1.02);
  box-shadow: 0 8px 25px #7c3aed33;
}

.quiz-success-feedback {
  background: linear-gradient(135deg, #22c55e1a, #10b9811a);
  border-left: 4px solid #22c55e;
  animation: .6s ease-out quiz-success-pulse;
}

.quiz-error-feedback {
  background: linear-gradient(135deg, #ef44441a, #dc26261a);
  border-left: 4px solid #ef4444;
  animation: .5s ease-out quiz-error-shake;
}

@keyframes quiz-success-pulse {
  0%, 100% {
    background-color: #22c55e1a;
    transform: scale(1);
  }

  50% {
    background-color: #22c55e33;
    transform: scale(1.01);
  }
}

@keyframes quiz-error-shake {
  0%, 100% {
    background-color: #ef44441a;
    transform: translateX(0);
  }

  25% {
    background-color: #ef444426;
    transform: translateX(-3px);
  }

  75% {
    background-color: #ef444426;
    transform: translateX(3px);
  }
}

@media (width <= 768px) {
  .types-lesson-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .types-lesson-svg {
    scale: .9;
  }

  .types-quiz-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: .5rem;
  }
}

@media (width <= 480px) {
  .types-lesson-grid {
    padding: .5rem;
  }

  .types-lesson-svg {
    scale: .8;
  }

  .types-quiz-grid {
    grid-template-columns: 1fr;
    gap: .75rem;
  }

  .types-lesson-title {
    font-size: 1.25rem;
  }
}

@keyframes set-move-left {
  0% {
    opacity: .7;
    transform: translateX(0);
  }

  50% {
    opacity: 1;
    transform: translateX(-20px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes set-move-right {
  0% {
    opacity: .7;
    transform: translateX(0);
  }

  50% {
    opacity: 1;
    transform: translateX(20px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes union-fill {
  0% {
    opacity: 0;
    transform: scale(.5);
  }

  50% {
    opacity: .8;
    transform: scale(1.1);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes intersection-pulse {
  0% {
    opacity: 0;
    transform: scale(.3);
  }

  50% {
    opacity: 1;
    transform: scale(1.2);
  }

  70% {
    transform: scale(.9);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes difference-fill {
  0% {
    opacity: 0;
    transform: scale(.8);
  }

  30% {
    opacity: .6;
    transform: scale(1.1);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes complement-glow {
  0% {
    opacity: 0;
    filter: brightness();
  }

  50% {
    opacity: .8;
    filter: brightness(1.3) drop-shadow(0 0 20px #10b98199);
  }

  100% {
    opacity: 1;
    filter: brightness(1.1) drop-shadow(0 0 15px #10b98166);
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: .3;
    color: #ef4444;
    transform: scale(.8);
  }

  100% {
    opacity: .1;
    color: #dc2626;
    transform: scale(.5);
  }
}

@keyframes venn-circle-highlight {
  0%, 100% {
    stroke-width: 3px;
    filter: brightness();
  }

  50% {
    stroke-width: 5px;
    filter: brightness(1.2) drop-shadow(0 0 10px);
  }
}

@keyframes operation-label-enter {
  0% {
    opacity: 0;
    transform: translateY(-10px)scale(.8);
  }

  60% {
    opacity: 1;
    transform: translateY(2px)scale(1.1);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

@keyframes element-highlight {
  0%, 100% {
    fill: #374151;
    font-size: .875rem;
    font-weight: normal;
  }

  50% {
    fill: #1f2937;
    font-size: 1rem;
    font-weight: bold;
  }
}

@keyframes set-operation-complete {
  0% {
    opacity: 1;
    transform: scale(1);
  }

  25% {
    opacity: .9;
    transform: scale(1.05);
  }

  50% {
    opacity: .8;
    transform: scale(1.1);
  }

  75% {
    opacity: .9;
    transform: scale(1.05);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes formula-reveal {
  0% {
    opacity: 0;
    transform: translateX(-20px)scale(.9);
  }

  50% {
    opacity: .8;
    transform: translateX(5px)scale(1.05);
  }

  100% {
    opacity: 1;
    transform: translateX(0)scale(1);
  }
}

@keyframes solution-highlight {
  0% {
    background-color: #0000;
    border-color: #e2e8f0;
  }

  50% {
    background-color: #3b82f61a;
    border-color: #3b82f6;
  }

  100% {
    background-color: #3b82f60d;
    border-color: #3b82f6;
  }
}

@keyframes quiz-option-select {
  0% {
    transform: scale(1);
    box-shadow: 0 1px 3px #0000001a;
  }

  50% {
    transform: scale(1.02);
    box-shadow: 0 4px 12px #00000026;
  }

  100% {
    transform: scale(1);
    box-shadow: 0 2px 8px #0000001f;
  }
}

@keyframes replay-button-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 4px 12px #3b82f64d;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 6px 20px #3b82f680;
  }
}

.animate-set-move-left {
  animation: 1.5s ease-out set-move-left;
}

.animate-set-move-right {
  animation: 1.5s ease-out set-move-right;
}

.animate-union-fill {
  animation: 2s ease-out .5s both union-fill;
}

.animate-intersection-pulse {
  animation: 1.8s cubic-bezier(.68, -.55, .265, 1.55) .3s both intersection-pulse;
}

.animate-difference-fill {
  animation: 1.5s ease-out .5s both difference-fill;
}

.animate-complement-glow {
  animation: 2.5s ease-out both complement-glow;
}

.animate-fade-out {
  animation: 1.5s ease-out .8s both fade-out;
}

.animate-venn-circle-highlight {
  animation: 1s ease-in-out infinite venn-circle-highlight;
}

.animate-operation-label-enter {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) both operation-label-enter;
}

.animate-element-highlight {
  animation: 2s ease-in-out infinite element-highlight;
}

.animate-set-operation-complete {
  animation: 1.2s ease-out set-operation-complete;
}

.animate-formula-reveal {
  animation: .8s ease-out .5s both formula-reveal;
}

.animate-solution-highlight {
  animation: .6s ease-out both solution-highlight;
}

.animate-quiz-option-select {
  animation: .3s ease-out both quiz-option-select;
}

.animate-replay-button-pulse {
  animation: 2s ease-in-out infinite replay-button-pulse;
}

.venn-region-interactive {
  cursor: pointer;
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
}

.venn-region-interactive:hover {
  filter: brightness(1.1) drop-shadow(0 0 8px);
  stroke-width: 4px;
}

.venn-region-active {
  filter: brightness(1.3) drop-shadow(0 0 12px);
  stroke-width: 5px;
  animation: 1s ease-in-out infinite venn-circle-highlight;
}

.set-operations-card {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background: linear-gradient(135deg, #ffffff1a, #ffffff0d);
  border: 1px solid #fff3;
  transition: all .3s cubic-bezier(.4, 0, .2, 1);
}

.set-operations-card:hover {
  border-color: #ffffff4d;
  transform: translateY(-2px);
  box-shadow: 0 10px 30px #0003;
}

.quiz-feedback-correct {
  background: linear-gradient(135deg, #22c55e1a, #10b9811a);
  border-left: 4px solid #22c55e;
  animation: .6s ease-out quiz-success-pulse;
}

.quiz-feedback-incorrect {
  background: linear-gradient(135deg, #ef44441a, #dc26261a);
  border-left: 4px solid #ef4444;
  animation: .5s ease-out quiz-error-shake;
}

.operation-stage-active {
  color: #fff;
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  transform: scale(1.05);
  box-shadow: 0 4px 15px #6366f166;
}

.operation-stage-completed {
  color: #fff;
  background: linear-gradient(135deg, #10b981, #059669);
  transform: scale(1);
}

.operation-stage-completed:after {
  content: "✓";
  color: #fff;
  background: #22c55e;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  width: 18px;
  height: 18px;
  font-size: 10px;
  font-weight: bold;
  display: flex;
  position: absolute;
  top: -5px;
  right: -5px;
}

@media (width <= 768px) {
  .set-operations-svg {
    margin: 0 auto;
    scale: .9;
  }

  .set-operations-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .operation-controls {
    flex-direction: column;
    gap: .5rem;
  }

  .operation-stage-indicators {
    gap: .5rem;
    scale: .9;
  }
}

@media (width <= 480px) {
  .set-operations-svg {
    scale: .8;
  }

  .set-operations-title {
    font-size: 1.5rem;
  }

  .operation-stage-indicators {
    flex-wrap: wrap;
    justify-content: center;
    scale: .8;
  }

  .operation-quiz-options {
    grid-template-columns: 1fr;
    gap: .75rem;
  }

  .formula-card {
    padding: .75rem;
  }

  .formula-text {
    font-size: .8rem;
  }
}

.set-operation-focus:focus-visible {
  outline-offset: 2px;
  border-radius: 4px;
  outline: 2px solid #06b6d4;
}

.quiz-option-focus:focus-visible {
  outline-offset: 2px;
  border-radius: 8px;
  outline: 2px solid #6366f1;
}

@media (prefers-contrast: high) {
  .venn-circle {
    stroke-width: 4px;
    filter: contrast(1.5);
  }

  .operation-text {
    text-shadow: 1px 1px 2px #000c;
    font-weight: 600;
  }

  .quiz-option-button {
    border-width: 3px;
    font-weight: 600;
  }
}

@media (prefers-reduced-motion: reduce) {
  .animate-set-move-left, .animate-set-move-right, .animate-union-fill, .animate-intersection-pulse, .animate-difference-fill, .animate-complement-glow, .animate-fade-out {
    animation-duration: .3s;
    animation-iteration-count: 1;
  }

  .animate-venn-circle-highlight, .animate-element-highlight, .animate-replay-button-pulse {
    animation: none;
  }
}

@keyframes farming-grow {
  0% {
    opacity: .7;
    transform: scale(.8)translateY(10px);
  }

  50% {
    opacity: 1;
    transform: scale(1.1)translateY(-5px);
  }

  100% {
    opacity: 1;
    transform: scale(1)translateY(0);
  }
}

@keyframes water-drop {
  0% {
    opacity: 0;
    transform: translateY(-20px)scale(.5);
  }

  50% {
    opacity: .8;
    transform: translateY(10px)scale(1.2);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

@keyframes seed-bounce {
  0%, 100% {
    transform: translateY(0)rotate(0);
  }

  25% {
    transform: translateY(-8px)rotate(5deg);
  }

  50% {
    transform: translateY(-4px)rotate(-3deg);
  }

  75% {
    transform: translateY(-6px)rotate(2deg);
  }
}

@keyframes farm-tier-glow {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 15px #22c55e4d;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 25px #22c55e99, 0 0 35px #22c55e4d;
  }
}

@keyframes tractor-move {
  0% {
    transform: translateX(-10px);
  }

  50% {
    transform: translateX(5px);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes crop-sway {
  0%, 100% {
    transform: rotate(0)scale(1);
  }

  25% {
    transform: rotate(2deg)scale(1.02);
  }

  50% {
    transform: rotate(0)scale(1);
  }

  75% {
    transform: rotate(-2deg)scale(.98);
  }
}

@keyframes weather-change {
  0% {
    filter: brightness() hue-rotate();
  }

  50% {
    filter: brightness(1.2) hue-rotate(15deg);
  }

  100% {
    filter: brightness() hue-rotate();
  }
}

@keyframes harvest-celebration {
  0% {
    background: linear-gradient(135deg, #22c55e1a, #10b9811a);
    transform: scale(1)rotate(0);
  }

  25% {
    background: linear-gradient(135deg, #22c55e33, #10b98133);
    transform: scale(1.1)rotate(5deg);
  }

  50% {
    background: linear-gradient(135deg, #22c55e4d, #10b9814d);
    transform: scale(1.2)rotate(-3deg);
  }

  75% {
    background: linear-gradient(135deg, #22c55e33, #10b98133);
    transform: scale(1.1)rotate(2deg);
  }

  100% {
    background: linear-gradient(135deg, #22c55e1a, #10b9811a);
    transform: scale(1)rotate(0);
  }
}

@keyframes knowledge-unlock {
  0% {
    opacity: 0;
    filter: brightness(.8);
    transform: scale(.5)translateY(-20px);
  }

  60% {
    opacity: 1;
    filter: brightness(1.3);
    transform: scale(1.2)translateY(5px);
  }

  100% {
    opacity: 1;
    filter: brightness();
    transform: scale(1)translateY(0);
  }
}

@keyframes resource-count {
  0% {
    color: inherit;
    transform: scale(1);
  }

  50% {
    color: #22c55e;
    transform: scale(1.3);
  }

  100% {
    color: inherit;
    transform: scale(1);
  }
}

.animate-farming-grow {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards farming-grow;
}

.animate-water-drop {
  animation: .6s ease-out forwards water-drop;
}

.animate-seed-bounce {
  animation: 1.5s ease-in-out infinite seed-bounce;
}

.animate-farm-tier-glow {
  animation: 2s ease-in-out infinite farm-tier-glow;
}

.animate-tractor-move {
  animation: 1.2s ease-out tractor-move;
}

.animate-crop-sway {
  animation: 3s ease-in-out infinite crop-sway;
}

.animate-weather-change {
  animation: 2s ease-in-out weather-change;
}

.animate-harvest-celebration {
  animation: 1.5s cubic-bezier(.68, -.55, .265, 1.55) harvest-celebration;
}

.animate-knowledge-unlock {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards knowledge-unlock;
}

.animate-resource-count {
  animation: .5s ease-out resource-count;
}

.time-morning {
  background: linear-gradient(135deg, #ffb74d1a, #ffeb3b1a);
  transition: background 2s ease-in-out;
}

.time-afternoon {
  background: linear-gradient(135deg, #2196f31a, #4caf501a);
  transition: background 2s ease-in-out;
}

.time-evening {
  background: linear-gradient(135deg, #ff98001a, #e91e631a);
  transition: background 2s ease-in-out;
}

.time-night {
  background: linear-gradient(135deg, #3f51b533, #9c27b033);
  transition: background 2s ease-in-out;
}

.agri-card-hover {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
}

.agri-card-hover:hover {
  filter: brightness(1.05);
  transform: translateY(-4px)scale(1.02);
  box-shadow: 0 15px 35px #22c55e33;
}

.farm-zone-interactive {
  cursor: pointer;
  transition: all .3s;
  position: relative;
  overflow: hidden;
}

.farm-zone-interactive:before {
  content: "";
  background: linear-gradient(90deg, #0000, #fff3, #0000);
  width: 100%;
  height: 100%;
  transition: left .5s;
  position: absolute;
  top: 0;
  left: -100%;
}

.farm-zone-interactive:hover:before {
  left: 100%;
}

.farm-zone-interactive:hover {
  filter: brightness(1.1);
  transform: scale(1.05);
}

@media (width <= 768px) {
  .agri-dashboard-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .farm-status-cards {
    grid-template-columns: repeat(2, 1fr);
    gap: .5rem;
  }

  .resource-counters {
    flex-direction: column;
    gap: .5rem;
  }
}

@media (width <= 480px) {
  .agri-dashboard-grid {
    padding: .5rem;
  }

  .farm-status-cards {
    grid-template-columns: 1fr;
    gap: .75rem;
  }

  .character-guides {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .farm-tier-display {
    scale: .9;
  }
}

@keyframes hero-idle {
  0%, 100% {
    transform: translateY(0)scaleY(1);
  }

  50% {
    transform: translateY(-6px)scaleY(.98);
  }
}

@keyframes villain-idle {
  0%, 100% {
    transform: translateY(0)scaleY(1);
  }

  50% {
    transform: translateY(-4px)scaleY(.99);
  }
}

@keyframes hero-attack {
  0% {
    transform: translateX(0)scaleY(1);
  }

  30% {
    transform: translateX(30px)scaleY(.95);
  }

  70% {
    transform: translateX(30px)scaleY(.95);
  }

  100% {
    transform: translateX(0)scaleY(1);
  }
}

@keyframes villain-attack {
  0% {
    transform: translateX(0)scaleY(1);
  }

  30% {
    transform: translateX(-30px)scaleY(.96);
  }

  70% {
    transform: translateX(-30px)scaleY(.96);
  }

  100% {
    transform: translateX(0)scaleY(1);
  }
}

@keyframes hit-reaction {
  0%, 100% {
    filter: brightness();
    transform: scaleX(1)translateX(0);
  }

  50% {
    filter: brightness(1.5) hue-rotate(45deg);
    transform: scaleX(.9)translateX(-5px);
  }
}

@keyframes energy-beam {
  0% {
    scaleX: 0;
    opacity: 0;
  }

  20% {
    scaleX: 1;
    opacity: 1;
  }

  80% {
    scaleX: 1;
    opacity: 1;
  }

  100% {
    scaleX: 0;
    opacity: 0;
  }
}

@keyframes damage-pop {
  0% {
    opacity: 0;
    transform: scale(2)translateY(0);
  }

  25% {
    opacity: 1;
    transform: scale(1.2)translateY(-30px);
  }

  75% {
    opacity: 1;
    transform: scale(1)translateY(-60px);
  }

  100% {
    opacity: 0;
    transform: scale(.8)translateY(-90px);
  }
}

@keyframes screen-shake {
  0%, 100% {
    transform: translateX(0)translateY(0);
  }

  10% {
    transform: translateX(-2px)translateY(-1px);
  }

  20% {
    transform: translateX(2px)translateY(1px);
  }

  30% {
    transform: translateX(-1px)translateY(-2px);
  }

  40% {
    transform: translateX(1px)translateY(2px);
  }

  50% {
    transform: translateX(-2px)translateY(1px);
  }

  60% {
    transform: translateX(2px)translateY(-1px);
  }

  70% {
    transform: translateX(-1px)translateY(2px);
  }

  80% {
    transform: translateX(1px)translateY(-2px);
  }

  90% {
    transform: translateX(-1px)translateY(1px);
  }
}

@keyframes power-surge {
  0%, 100% {
    opacity: .7;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes arena-entrance {
  0% {
    opacity: 0;
    transform: scale(.8)translateY(50px);
  }

  100% {
    opacity: 1;
    transform: scale(1)translateY(0);
  }
}

.animate-hero-idle {
  animation: 1.8s ease-in-out infinite hero-idle;
}

.animate-villain-idle {
  animation: 2.2s ease-in-out .5s infinite villain-idle;
}

.animate-hero-attack {
  animation: .6s ease-out hero-attack;
}

.animate-villain-attack {
  animation: .6s ease-out villain-attack;
}

.animate-hit-reaction {
  animation: .3s ease-out hit-reaction;
}

.animate-energy-beam {
  animation: .4s ease-out energy-beam;
}

.animate-damage-pop {
  animation: 1.2s ease-out forwards damage-pop;
}

.animate-power-surge {
  animation: 1s ease-in-out infinite power-surge;
}

.animate-arena-entrance {
  animation: .8s ease-out forwards arena-entrance;
}

.battle-glow {
  filter: drop-shadow(0 0 8px);
}

.energy-aura {
  opacity: .3;
  background: radial-gradient(circle, currentColor 0%, #0000 70%);
}

.damage-flash {
  background: linear-gradient(45deg, #ff00004d, #ff646433);
  animation: .2s ease-out damage-flash;
}

@keyframes damage-flash {
  0%, 100% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }
}

.hero-charging {
  filter: brightness(1.2) drop-shadow(0 0 15px #60a5fa);
}

.villain-charging {
  filter: brightness(1.2) drop-shadow(0 0 15px #a855f7);
}

.character-low-hp {
  animation: 1s ease-in-out infinite low-hp-warning;
}

@keyframes low-hp-warning {
  0%, 100% {
    filter: brightness();
  }

  50% {
    filter: brightness(1.3) hue-rotate(30deg);
  }
}

@media (width <= 768px) {
  .battle-arena {
    height: 240px;
  }

  .character-svg {
    scale: .8;
  }

  .damage-number {
    font-size: 1.5rem;
  }

  .hp-bar {
    width: 100px;
  }
}

@media (width <= 480px) {
  .battle-arena {
    height: 200px;
  }

  .character-svg {
    scale: .7;
  }

  .damage-number {
    font-size: 1.25rem;
  }

  .hp-bar {
    width: 80px;
    font-size: .75rem;
  }
}

@keyframes quantum-field {
  0%, 100% {
    opacity: .3;
    transform: scale(1)rotate(0);
  }

  25% {
    opacity: .6;
    transform: scale(1.1)rotate(90deg);
  }

  50% {
    opacity: .8;
    transform: scale(1.2)rotate(180deg);
  }

  75% {
    opacity: .6;
    transform: scale(1.1)rotate(270deg);
  }
}

@keyframes holographic-shimmer {
  0% {
    background-position: -200px 0;
  }

  100% {
    background-position: calc(200px + 100%) 0;
  }
}

@keyframes nexus-pulse {
  0%, 100% {
    opacity: .8;
    transform: scale(1);
    box-shadow: 0 0 20px #06b6d44d;
  }

  50% {
    opacity: 1;
    transform: scale(1.05);
    box-shadow: 0 0 40px #06b6d499, 0 0 60px #06b6d44d;
  }
}

@keyframes dimension-activation {
  0% {
    opacity: .5;
    filter: brightness(.7);
    transform: scale(.9)translateY(10px);
  }

  50% {
    opacity: .9;
    filter: brightness(1.3);
    transform: scale(1.1)translateY(-5px);
  }

  100% {
    opacity: 1;
    filter: brightness();
    transform: scale(1)translateY(0);
  }
}

@keyframes energy-flow {
  0% {
    stroke-dashoffset: 0;
    opacity: .4;
  }

  50% {
    opacity: 1;
  }

  100% {
    stroke-dashoffset: 24px;
    opacity: .4;
  }
}

@keyframes multiverse-rotation {
  0% {
    transform: rotate(0)scale(1);
  }

  25% {
    transform: rotate(90deg)scale(1.05);
  }

  50% {
    transform: rotate(180deg)scale(1);
  }

  75% {
    transform: rotate(270deg)scale(1.05);
  }

  100% {
    transform: rotate(360deg)scale(1);
  }
}

@keyframes ai-guide-pulse {
  0%, 100% {
    filter: brightness() drop-shadow(0 0 10px);
    transform: scale(1);
  }

  50% {
    filter: brightness(1.2) drop-shadow(0 0 20px);
    transform: scale(1.02);
  }
}

@keyframes gateway-stabilization {
  0% {
    background: linear-gradient(45deg, #06b6d41a, #8b5cf61a);
    border-color: #06b6d44d;
  }

  33% {
    background: linear-gradient(45deg, #8b5cf61a, #ec48991a);
    border-color: #8b5cf64d;
  }

  66% {
    background: linear-gradient(45deg, #ec48991a, #10b9811a);
    border-color: #ec48994d;
  }

  100% {
    background: linear-gradient(45deg, #10b9811a, #06b6d41a);
    border-color: #10b9814d;
  }
}

@keyframes quantum-fragment-collect {
  0% {
    opacity: 0;
    transform: scale(0)rotate(0);
  }

  20% {
    opacity: .8;
    transform: scale(1.3)rotate(180deg);
  }

  40% {
    opacity: 1;
    transform: scale(.9)rotate(360deg);
  }

  60% {
    opacity: 1;
    transform: scale(1.1)rotate(540deg);
  }

  80% {
    opacity: .9;
    transform: scale(.95)rotate(720deg);
  }

  100% {
    opacity: 1;
    transform: scale(1)rotate(720deg);
  }
}

@keyframes cosmic-insight-unlock {
  0% {
    opacity: 0;
    filter: brightness(.5);
    transform: scale(.5)translateY(-20px);
  }

  30% {
    opacity: .7;
    filter: brightness(1.5);
    transform: scale(1.3)translateY(-10px);
  }

  60% {
    opacity: 1;
    filter: brightness(1.2);
    transform: scale(.9)translateY(5px);
  }

  100% {
    opacity: 1;
    filter: brightness();
    transform: scale(1)translateY(0);
  }
}

@keyframes phenomenon-materialize {
  0% {
    opacity: 0;
    filter: blur(10px);
    transform: scale(.3)translateY(20px)rotate(-45deg);
  }

  40% {
    opacity: .6;
    filter: blur(3px);
    transform: scale(1.1)translateY(-10px)rotate(10deg);
  }

  70% {
    opacity: .9;
    filter: blur(1px);
    transform: scale(.95)translateY(2px)rotate(-5deg);
  }

  100% {
    opacity: 1;
    filter: blur();
    transform: scale(1)translateY(0)rotate(0);
  }
}

@keyframes hologram-scan {
  0% {
    opacity: .3;
    background-position: 0%;
  }

  50% {
    opacity: .7;
    background-position: 100%;
  }

  100% {
    opacity: .3;
    background-position: 200%;
  }
}

@keyframes dimensional-breach {
  0% {
    opacity: 0;
    transform: scaleX(0)scaleY(1);
  }

  30% {
    opacity: .8;
    transform: scaleX(1)scaleY(.1);
  }

  60% {
    opacity: 1;
    transform: scaleX(1)scaleY(1);
  }

  100% {
    opacity: 1;
    transform: scaleX(1)scaleY(1);
  }
}

@keyframes nexus-tier-upgrade {
  0% {
    background: linear-gradient(135deg, #06b6d433, #3b82f633);
    transform: scale(1)rotate(0);
  }

  25% {
    background: linear-gradient(135deg, #8b5cf64d, #ec48994d);
    transform: scale(1.1)rotate(90deg);
  }

  50% {
    background: linear-gradient(135deg, #ec489966, #10b98166);
    transform: scale(1.2)rotate(180deg);
  }

  75% {
    background: linear-gradient(135deg, #10b9814d, #f59e0b4d);
    transform: scale(1.1)rotate(270deg);
  }

  100% {
    background: linear-gradient(135deg, #f59e0b33, #ef444433);
    transform: scale(1)rotate(360deg);
  }
}

.animate-quantum-field {
  animation: 4s ease-in-out infinite quantum-field;
}

.animate-holographic-shimmer {
  background: linear-gradient(90deg, #0000, #fff3, #0000) 0 0 / 200px 100%;
  animation: 2s ease-in-out infinite holographic-shimmer;
}

.animate-nexus-pulse {
  animation: 3s ease-in-out infinite nexus-pulse;
}

.animate-dimension-activation {
  animation: 1s cubic-bezier(.68, -.55, .265, 1.55) forwards dimension-activation;
}

.animate-energy-flow {
  animation: 2s linear infinite energy-flow;
}

.animate-multiverse-rotation {
  animation: 20s linear infinite multiverse-rotation;
}

.animate-ai-guide-pulse {
  animation: 2s ease-in-out infinite ai-guide-pulse;
}

.animate-gateway-stabilization {
  animation: 4s ease-in-out infinite gateway-stabilization;
}

.animate-quantum-fragment-collect {
  animation: 1.2s cubic-bezier(.68, -.55, .265, 1.55) forwards quantum-fragment-collect;
}

.animate-cosmic-insight-unlock {
  animation: 1.5s cubic-bezier(.68, -.55, .265, 1.55) forwards cosmic-insight-unlock;
}

.animate-phenomenon-materialize {
  animation: 1.8s cubic-bezier(.68, -.55, .265, 1.55) forwards phenomenon-materialize;
}

.animate-hologram-scan {
  background: linear-gradient(90deg, #0000 0%, #06b6d433 25%, #06b6d466 50%, #06b6d433 75%, #0000 100%) 0 0 / 200% 100%;
  animation: 3s ease-in-out infinite hologram-scan;
}

.animate-dimensional-breach {
  animation: .8s cubic-bezier(.68, -.55, .265, 1.55) forwards dimensional-breach;
}

.animate-nexus-tier-upgrade {
  animation: 2s cubic-bezier(.68, -.55, .265, 1.55) forwards nexus-tier-upgrade;
}

.holographic-border {
  background: linear-gradient(135deg, #06b6d41a, #8b5cf61a);
  border: 1px solid #06b6d44d;
  position: relative;
}

.holographic-border:before {
  content: "";
  border-radius: inherit;
  opacity: 0;
  z-index: -1;
  background: linear-gradient(45deg, #0000, #06b6d480, #0000, #8b5cf680, #0000) 0 0 / 200% 200%;
  transition: opacity .3s;
  animation: 2s linear infinite holographic-shimmer;
  position: absolute;
  inset: -1px;
}

.holographic-border:hover:before {
  opacity: 1;
}

.quantum-particles {
  pointer-events: none;
  width: 100%;
  height: 100%;
  position: fixed;
  overflow: hidden;
}

.quantum-particle {
  background: radial-gradient(circle, #06b6d4cc, #0000);
  border-radius: 50%;
  width: 2px;
  height: 2px;
  animation: 8s linear infinite quantum-drift;
  position: absolute;
}

@keyframes quantum-drift {
  0% {
    opacity: 0;
    transform: translateY(100vh)translateX(0)scale(0);
  }

  10% {
    opacity: 1;
    transform: translateY(90vh)translateX(20px)scale(1);
  }

  90% {
    opacity: 1;
    transform: translateY(10vh)translateX(-20px)scale(1);
  }

  100% {
    opacity: 0;
    transform: translateY(0)translateX(0)scale(0);
  }
}

.energy-conduit {
  background: linear-gradient(90deg, #0000, #06b6d466, #8b5cf699, #06b6d466, #0000) 0 0 / 200% 100%;
  animation: 3s ease-in-out infinite energy-flow;
}

.nexus-gateway-interface {
  -webkit-backdrop-filter: blur(20px);
  backdrop-filter: blur(20px);
  background: radial-gradient(circle at 25% 25%, #06b6d41a 0%, #0000 50%), radial-gradient(circle at 75% 75%, #8b5cf61a 0%, #0000 50%), linear-gradient(135deg, #0f172af2, #1e293bf2);
  border: 1px solid #06b6d433;
}

.multiverse-map-projection {
  background: conic-gradient(#06b6d433 0deg, #8b5cf633 72deg, #ec489933 144deg, #10b98133 216deg, #f59e0b33 288deg, #06b6d433 360deg), radial-gradient(circle, #0f172acc 0%, #1e293be6 100%);
}

.ai-guide-hologram {
  filter: drop-shadow(0 0 20px #06b6d44d);
  background: radial-gradient(circle, #06b6d433 0%, #0000 70%);
}

@media (width <= 768px) {
  .nexus-gateway-interface {
    padding: 1rem;
  }

  .quantum-particle {
    width: 1px;
    height: 1px;
  }

  .holographic-border {
    border-width: 1px;
  }
}

@media (width <= 480px) {
  .nexus-gateway-interface {
    padding: .75rem;
  }

  .multiverse-map-projection {
    scale: .9;
  }

  .ai-guide-hologram {
    scale: .8;
  }
}

@media (prefers-contrast: high) {
  .holographic-border {
    border-width: 2px;
    border-color: #06b6d4cc;
  }

  .quantum-particle {
    background: radial-gradient(circle, #06b6d4, #0000);
  }

  .energy-conduit {
    background: linear-gradient(90deg, #0000, #06b6d4cc, #8b5cf6cc, #06b6d4cc, #0000);
  }
}

@media (prefers-reduced-motion: reduce) {
  .animate-quantum-field, .animate-multiverse-rotation, .animate-energy-flow, .animate-hologram-scan {
    animation-duration: .3s;
    animation-iteration-count: 1;
  }

  .animate-nexus-pulse, .animate-ai-guide-pulse {
    animation: none;
    transform: scale(1);
  }

  .quantum-particle {
    opacity: .3;
    animation: none;
  }
}

@keyframes clockwork-spin {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes gear-turn {
  0% {
    transform: rotate(0)scale(1);
  }

  50% {
    transform: rotate(180deg)scale(1.02);
  }

  100% {
    transform: rotate(360deg)scale(1);
  }
}

@keyframes steam-rise {
  0% {
    opacity: 0;
    transform: translateY(0)scale(.5);
  }

  20% {
    opacity: .6;
    transform: translateY(-20px)scale(.8);
  }

  50% {
    opacity: .8;
    transform: translateY(-60px)scale(1.2);
  }

  80% {
    opacity: .4;
    transform: translateY(-100px)scale(1.5);
  }

  100% {
    opacity: 0;
    transform: translateY(-150px)scale(2);
  }
}

@keyframes brass-shimmer {
  0%, 100% {
    transform: translateX(-100%);
  }

  50% {
    transform: translateX(100%);
  }
}

@keyframes alchemical-bubble {
  0%, 100% {
    filter: hue-rotate();
    transform: translateY(0)scale(1);
  }

  25% {
    filter: hue-rotate(45deg);
    transform: translateY(-3px)scale(1.05);
  }

  50% {
    filter: hue-rotate(90deg);
    transform: translateY(-6px)scale(1.1);
  }

  75% {
    filter: hue-rotate(135deg);
    transform: translateY(-3px)scale(1.05);
  }
}

@keyframes orrery-rotation {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes orbital-ring {
  0% {
    opacity: .3;
    transform: rotate(0);
  }

  50% {
    opacity: .6;
  }

  100% {
    opacity: .3;
    transform: rotate(360deg);
  }
}

@keyframes gear-glow {
  0%, 100% {
    filter: brightness();
    box-shadow: 0 0 15px #f59e0b66;
  }

  50% {
    filter: brightness(1.2);
    box-shadow: 0 0 30px #f59e0bcc, 0 0 45px #f59e0b66;
  }
}

@keyframes forge-glow {
  0%, 100% {
    background-color: currentColor;
    transform: scale(1);
  }

  50% {
    background-color: #f59e0b;
    transform: scale(1.1);
    box-shadow: 0 0 10px #f59e0b99;
  }
}

@keyframes flame-flicker {
  0%, 100% {
    filter: hue-rotate();
    transform: scale(1)rotate(0);
  }

  25% {
    filter: hue-rotate(10deg);
    transform: scale(1.1)rotate(2deg);
  }

  50% {
    filter: hue-rotate(-5deg);
    transform: scale(1.05)rotate(-1deg);
  }

  75% {
    filter: hue-rotate(15deg);
    transform: scale(1.08)rotate(1deg);
  }
}

@keyframes flame-glow {
  0%, 100% {
    text-shadow: 0 0 10px #fb923c80;
    color: #ea580c;
  }

  50% {
    text-shadow: 0 0 20px #fb923ccc, 0 0 30px #fb923c66;
    color: #dc2626;
  }
}

@keyframes copper-text-shadow {
  0%, 100% {
    text-shadow: 2px 2px 4px #9a41174d;
  }

  50% {
    text-shadow: 2px 2px 8px #9a411799, 4px 4px 12px #9a411733;
  }
}

@keyframes gear-fill {
  0% {
    width: 0%;
    transform: scaleX(0);
  }

  100% {
    transform: scaleX(1);
  }
}

@keyframes mechanism-activate {
  0% {
    opacity: .5;
    filter: brightness(.8);
    transform: scale(.9)translateY(10px);
  }

  50% {
    opacity: .9;
    filter: brightness(1.2);
    transform: scale(1.05)translateY(-5px);
  }

  100% {
    opacity: 1;
    filter: brightness();
    transform: scale(1)translateY(0);
  }
}

@keyframes blueprint-draw {
  0% {
    stroke-dasharray: 0 1000;
    opacity: 0;
  }

  100% {
    stroke-dasharray: 1000 0;
    opacity: 1;
  }
}

@keyframes pneumatic-delivery {
  0% {
    opacity: 0;
    transform: translateX(-100px)scale(.8);
  }

  20% {
    opacity: 1;
    transform: translateX(-50px)scale(1);
  }

  80% {
    opacity: 1;
    transform: translateX(20px)scale(1);
  }

  100% {
    opacity: 0;
    transform: translateX(50px)scale(.8);
  }
}

@keyframes aether-scope-scan {
  0% {
    filter: brightness();
    transform: rotate(0);
  }

  25% {
    filter: brightness(1.2);
    transform: rotate(5deg);
  }

  50% {
    filter: brightness(1.1);
    transform: rotate(0);
  }

  75% {
    filter: brightness(1.2);
    transform: rotate(-5deg);
  }

  100% {
    filter: brightness();
    transform: rotate(0);
  }
}

@keyframes workshop-environment {
  0% {
    filter: brightness() contrast();
    background-position: 0%;
  }

  50% {
    filter: brightness(1.1) contrast(1.05);
    background-position: 100%;
  }

  100% {
    filter: brightness() contrast();
    background-position: 0%;
  }
}

@keyframes crystal-conduit {
  0%, 100% {
    opacity: .4;
    filter: hue-rotate();
    transform: scale(1);
  }

  25% {
    opacity: .8;
    filter: hue-rotate(60deg);
    transform: scale(1.05);
  }

  50% {
    opacity: 1;
    filter: hue-rotate(120deg);
    transform: scale(1.1);
  }

  75% {
    opacity: .8;
    filter: hue-rotate(180deg);
    transform: scale(1.05);
  }
}

@keyframes guild-activation {
  0% {
    background: linear-gradient(135deg, #3b82f61a, #10b9811a);
    transform: scale(1)rotate(0);
  }

  25% {
    background: linear-gradient(135deg, #3b82f633, #10b98126);
    transform: scale(1.02)rotate(1deg);
  }

  50% {
    background: linear-gradient(135deg, #3b82f64d, #10b98133);
    transform: scale(1.05)rotate(0);
  }

  75% {
    background: linear-gradient(135deg, #3b82f633, #10b98126);
    transform: scale(1.02)rotate(-1deg);
  }

  100% {
    background: linear-gradient(135deg, #3b82f61a, #10b9811a);
    transform: scale(1)rotate(0);
  }
}

@keyframes artisan-tier-upgrade {
  0% {
    background: linear-gradient(135deg, #f59e0b, #d97706);
    transform: scale(1)rotateY(0);
  }

  25% {
    background: linear-gradient(135deg, #dc2626, #f59e0b);
    transform: scale(1.1)rotateY(90deg);
  }

  50% {
    background: linear-gradient(135deg, #7c3aed, #dc2626);
    transform: scale(1.2)rotateY(180deg);
  }

  75% {
    background: linear-gradient(135deg, #2563eb, #7c3aed);
    transform: scale(1.1)rotateY(270deg);
  }

  100% {
    background: linear-gradient(135deg, #059669, #2563eb);
    transform: scale(1)rotateY(360deg);
  }
}

@keyframes module-unlock {
  0% {
    opacity: 0;
    filter: grayscale() brightness(.5);
    transform: scale(.8)translateY(20px);
  }

  30% {
    opacity: .7;
    filter: grayscale(.5) brightness(1.2);
    transform: scale(1.1)translateY(-10px);
  }

  60% {
    opacity: .9;
    filter: grayscale(.2) brightness(1.1);
    transform: scale(.95)translateY(5px);
  }

  100% {
    opacity: 1;
    filter: grayscale(0) brightness();
    transform: scale(1)translateY(0);
  }
}

@keyframes progress-steam {
  0% {
    opacity: .8;
    transform: translateY(0)scale(.5);
  }

  50% {
    opacity: 1;
    transform: translateY(-20px)scale(1);
  }

  100% {
    opacity: 0;
    transform: translateY(-40px)scale(1.5);
  }
}

.animate-clockwork-spin {
  animation: 8s linear infinite clockwork-spin;
}

.animate-gear-turn {
  animation: 6s ease-in-out infinite gear-turn;
}

.animate-steam-rise {
  animation: 5s ease-out infinite steam-rise;
}

.animate-brass-shimmer {
  animation: 3s linear infinite brass-shimmer;
}

.animate-alchemical-bubble {
  animation: 4s ease-in-out infinite alchemical-bubble;
}

.animate-orrery-rotation {
  animation: 30s linear infinite orrery-rotation;
}

.animate-planet-orbit {
  animation: 20s linear infinite planet-orbit;
}

.animate-orbital-ring {
  animation: 40s linear infinite orbital-ring;
}

.animate-gear-glow {
  animation: 2s ease-in-out infinite gear-glow;
}

.animate-forge-glow {
  animation: 1.5s ease-in-out infinite forge-glow;
}

.animate-flame-flicker {
  animation: 2s ease-in-out infinite flame-flicker;
}

.animate-flame-glow {
  animation: 2s ease-in-out infinite flame-glow;
}

.animate-gear-fill {
  animation: 1s ease-out forwards gear-fill;
}

.animate-mechanism-activate {
  animation: 1s cubic-bezier(.68, -.55, .265, 1.55) forwards mechanism-activate;
}

.animate-blueprint-draw {
  animation: 2s ease-out forwards blueprint-draw;
}

.animate-pneumatic-delivery {
  animation: 3s ease-in-out pneumatic-delivery;
}

.animate-aether-scope-scan {
  animation: 4s ease-in-out infinite aether-scope-scan;
}

.animate-crystal-conduit {
  animation: 3s ease-in-out infinite crystal-conduit;
}

.animate-guild-activation {
  animation: 2s ease-in-out guild-activation;
}

.animate-artisan-tier-upgrade {
  animation: 2s cubic-bezier(.68, -.55, .265, 1.55) forwards artisan-tier-upgrade;
}

.animate-module-unlock {
  animation: 1.5s cubic-bezier(.68, -.55, .265, 1.55) forwards module-unlock;
}

.animate-progress-steam {
  animation: 2s ease-out infinite progress-steam;
}

.brass-frame {
  background: linear-gradient(135deg, #fbbf241a 0%, #f59e0b26 25%, #d977061a 50%, #b4530926 75%, #92400e1a 100%);
  border: 2px solid #f59e0b4d;
  box-shadow: inset 0 1px #fff3, inset 0 -1px #0000001a, 0 4px 8px #0000001a;
}

.brass-overlay {
  background: radial-gradient(circle at 25% 25%, #f59e0b1a 0%, #0000 50%), radial-gradient(circle at 75% 75%, #d977061a 0%, #0000 50%), linear-gradient(45deg, #fbbf240d 0%, #f59e0b14 25%, #d977060d 50%, #b4530914 75%, #92400e0d 100%);
}

.brass-gear {
  color: #d97706;
  filter: drop-shadow(0 0 4px #d9770680);
  text-shadow: 1px 1px 2px #0000004d;
}

.steam-wisp {
  filter: blur(2px);
  background: radial-gradient(circle, #fff9 0%, #0000 70%);
  border-radius: 50%;
  width: 8px;
  height: 8px;
}

.brass-circle {
  border: 3px solid #f59e0b66;
  box-shadow: 0 0 20px #f59e0b4d, inset 0 0 20px #f59e0b1a;
}

.brass-hub {
  box-shadow: 0 0 15px #f59e0b80, inset 0 2px 4px #ffffff4d, inset 0 -2px 4px #0003;
}

.brass-planet {
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
  box-shadow: 0 4px 15px #0003, inset 0 2px 4px #ffffff4d;
}

.brass-planet:hover {
  box-shadow: 0 8px 25px #0000004d, 0 0 20px, inset 0 2px 4px #fff6;
}

.brass-dormant {
  box-shadow: inset 0 2px 4px #0000004d, 0 1px 2px #0000001a;
}

.brass-button {
  background: linear-gradient(135deg, #fbbf2433, #f59e0b4d, #d9770633);
  border: 2px solid #f59e0b66;
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
  box-shadow: inset 0 1px #fff3, 0 2px 4px #0000001a;
}

.brass-button:hover {
  background: linear-gradient(135deg, #fbbf244d, #f59e0b66, #d977064d);
  transform: translateY(-1px)scale(1.02);
  box-shadow: inset 0 1px #ffffff4d, 0 4px 8px #00000026, 0 0 15px #f59e0b33;
}

.brass-gauge {
  background: linear-gradient(135deg, #fbbf244d, #f59e0b66);
  border: 2px solid #f59e0b80;
  box-shadow: inset 0 1px 2px #ffffff4d, inset 0 -1px 2px #0000001a, 0 2px 8px #f59e0b33;
}

.brass-progress-container {
  background: linear-gradient(135deg, #92400e4d, #78350f66);
  border: 1px solid #92400e80;
  box-shadow: inset 0 1px 2px #0000004d, 0 1px 2px #ffffff1a;
}

.brass-progress-bar > div {
  box-shadow: 0 1px 3px #f59e0b66, inset 0 1px 1px #ffffff4d;
  background: linear-gradient(135deg, #f59e0b, #d97706, #b45309) !important;
}

.brass-stat-card {
  transition: all .3s;
  box-shadow: 0 4px 12px #0000001a, inset 0 1px 2px #ffffff4d;
  background: linear-gradient(135deg, #fffc, #fbbf241a) !important;
  border: 2px solid #f59e0b33 !important;
}

.brass-stat-card:hover {
  transform: translateY(-2px)scale(1.02);
  box-shadow: 0 8px 20px #00000026, 0 0 15px #f59e0b33;
}

.brass-tube-message {
  background: linear-gradient(135deg, #ffffffe6, #f59e0b1a);
  border: 1px solid #f59e0b4d;
  position: relative;
  box-shadow: 0 2px 8px #0000001a, inset 0 1px 1px #fffc;
}

.brass-tube-message:before {
  content: "📨";
  background: #f59e0b;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  width: 20px;
  height: 20px;
  font-size: 10px;
  display: flex;
  position: absolute;
  top: -8px;
  right: -8px;
  box-shadow: 0 2px 4px #0003;
}

.copper-text-shadow {
  animation: 3s ease-in-out infinite copper-text-shadow;
}

.architect-module-card, .alchemist-module-card {
  background: linear-gradient(135deg, #ffffffe6, #f59e0b0d);
  border: 2px solid #f59e0b33;
  transition: all .3s cubic-bezier(.68, -.55, .265, 1.55);
  box-shadow: 0 4px 12px #0000001a, inset 0 1px 2px #ffffff80;
}

.architect-module-card:hover, .alchemist-module-card:hover {
  border-color: #f59e0b66;
  transform: translateY(-3px)scale(1.02);
  box-shadow: 0 8px 25px #00000026, 0 0 20px #f59e0b33, inset 0 1px 2px #fff9;
}

.workshop-environment {
  background-size: 300% 300%;
  animation: 8s ease-in-out infinite workshop-environment;
}

@media (width <= 768px) {
  .brass-frame {
    border-width: 1px;
    padding: .75rem;
  }

  .brass-gear {
    font-size: .8rem;
  }

  .steam-wisp {
    width: 6px;
    height: 6px;
  }

  .brass-button {
    border-width: 1px;
    padding: .5rem 1rem;
  }

  .architect-module-card, .alchemist-module-card {
    padding: .75rem;
  }
}

@media (width <= 480px) {
  .brass-frame {
    padding: .5rem;
  }

  .brass-gear {
    font-size: .7rem;
  }

  .steam-wisp {
    width: 4px;
    height: 4px;
  }

  .brass-hub {
    width: 60px;
    height: 60px;
  }

  .brass-planet {
    width: 40px;
    height: 40px;
  }

  .architect-module-card, .alchemist-module-card {
    padding: .5rem;
  }
}

@media (prefers-contrast: high) {
  .brass-frame {
    border-width: 3px;
    border-color: #f59e0bcc;
  }

  .brass-button {
    border-width: 2px;
    border-color: #f59e0bcc;
  }

  .brass-gear {
    filter: drop-shadow(0 0 6px #d97706cc);
  }
}

@media (prefers-reduced-motion: reduce) {
  .animate-clockwork-spin, .animate-gear-turn, .animate-orrery-rotation, .animate-planet-orbit, .animate-muzzle-flash, .animate-projectile-travel, .animate-impact-burst, .animate-spark-fly, .animate-tank-recoil-right, .animate-tank-recoil-left {
    animation-duration: .2s;
    animation-iteration-count: 1;
  }

  .animate-steam-rise, .animate-alchemical-bubble, .animate-flame-flicker, .animate-hero-idle, .animate-villain-idle {
    animation: none;
  }

  .steam-wisp {
    opacity: .3;
    animation: none;
  }

  .brass-gear {
    animation: none;
  }
}

@media (width <= 480px) {
  .animate-muzzle-flash, .animate-projectile-travel, .animate-impact-burst {
    animation-duration: .2s;
  }

  .bg-gradient-radial {
    background: currentColor;
  }
}

@keyframes tank-recoil-right {
  0% {
    transform: translateX(0)scaleY(1);
  }

  30% {
    transform: translateX(-15px)scaleY(.95);
  }

  60% {
    transform: translateX(5px)scaleY(1.02);
  }

  100% {
    transform: translateX(0)scaleY(1);
  }
}

@keyframes tank-recoil-left {
  0% {
    transform: translateX(0)scaleY(1);
  }

  30% {
    transform: translateX(15px)scaleY(.95);
  }

  60% {
    transform: translateX(-5px)scaleY(1.02);
  }

  100% {
    transform: translateX(0)scaleY(1);
  }
}

@keyframes hp-damage-flash {
  0%, 100% {
    border-color: inherit;
    background-color: #0000;
  }

  25% {
    background-color: #fffc;
    border-color: #ffffffe6;
  }

  50% {
    background-color: #ef444466;
    border-color: #ef4444cc;
  }
}

@keyframes impact-screen-shake {
  0%, 100% {
    transform: translateX(0)translateY(0);
  }

  10% {
    transform: translateX(-3px)translateY(-2px);
  }

  20% {
    transform: translateX(3px)translateY(2px);
  }

  30% {
    transform: translateX(-2px)translateY(-3px);
  }

  40% {
    transform: translateX(2px)translateY(3px);
  }

  50% {
    transform: translateX(-3px)translateY(1px);
  }

  60% {
    transform: translateX(3px)translateY(-1px);
  }

  70% {
    transform: translateX(-1px)translateY(2px);
  }

  80% {
    transform: translateX(1px)translateY(-2px);
  }

  90% {
    transform: translateX(-1px)translateY(1px);
  }
}

@keyframes muzzle-flash {
  0% {
    opacity: 0;
    transform: scale(.8);
  }

  50% {
    opacity: 1;
    transform: scale(1.2);
  }

  100% {
    opacity: 0;
    transform: scale(1);
  }
}

@keyframes projectile-travel {
  0% {
    opacity: 0;
    transform: translateX(-30px);
  }

  20% {
    opacity: 1;
  }

  80% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateX(30px);
  }
}

@keyframes impact-burst {
  0% {
    opacity: 0;
    transform: scale(.5);
  }

  30% {
    opacity: 1;
    transform: scale(1.3);
  }

  100% {
    opacity: 0;
    transform: scale(1.8);
  }
}

@keyframes spark-fly {
  0% {
    opacity: 1;
    transform: translate(0)scale(1);
  }

  100% {
    opacity: 0;
    transform: translate(var(--dx, 10px), var(--dy, -10px)) scale(.3);
  }
}

.animate-tank-recoil-right {
  animation: .4s ease-out tank-recoil-right;
}

.animate-tank-recoil-left {
  animation: .4s ease-out tank-recoil-left;
}

.animate-hp-damage-flash {
  animation: .2s ease-out hp-damage-flash;
}

.animate-screen-shake {
  animation: .2s ease-out impact-screen-shake;
}

.animate-muzzle-flash {
  animation: .3s ease-out muzzle-flash;
}

.animate-projectile-travel {
  animation: .6s ease-out projectile-travel;
}

.animate-impact-burst {
  animation: .4s ease-out impact-burst;
}

.animate-spark-fly {
  animation: .5s ease-out spark-fly;
}

.bg-gradient-radial {
  background: radial-gradient(circle, var(--tw-gradient-stops));
}

@media (width <= 768px) {
  .tank-arena {
    min-height: 180px !important;
  }

  .tank-svg {
    scale: .8;
  }

  .tank-header-compact {
    padding: .5rem 1rem !important;
  }

  .tank-question-compact {
    padding: .75rem !important;
  }

  .tank-answer-option {
    min-height: 44px;
    padding: .5rem !important;
  }

  .tank-control-button {
    min-width: 40px;
    min-height: 40px;
  }
}

@media (width <= 480px) {
  .tank-arena {
    min-height: 160px !important;
  }

  .tank-svg {
    scale: .7;
  }

  .tank-header-compact {
    padding: .375rem .75rem !important;
  }

  .tank-question-compact {
    padding: .5rem !important;
  }

  .tank-answer-option {
    padding: .375rem !important;
    font-size: .875rem !important;
  }

  .tank-fire-button {
    padding: .5rem 1rem !important;
    font-size: .875rem !important;
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes ping {
  75%, 100% {
    opacity: 0;
    transform: scale(2);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
